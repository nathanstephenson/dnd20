{"version":3,"sources":["misc/UserContext.js","queries.js","components/main/navbar.js","pages/Home.js","components/campaigns/EditCampaign.js","components/campaigns/DisplayCampaigns.js","pages/Campaigns.js","functions/GeneralFunctions.js","functions/CharacterCreation.js","components/characters/EditCharacter.js","components/characters/DisplayCharacters.js","pages/Characters.js","components/play/party.js","pages/Play.js","pages/MyAccount.js","components/main/PageSwitch.js","components/main/Main.js","pages/Register.js","pages/Login.js","App.js","index.js"],"names":["UserContext","React","createContext","user","refreshUser","toggleNavBar","getUserID","gql","getUserByID","addUser","getCampaign","addCampaign","joinExistingCampaign","leaveCampaign","deleteCampaign","renameCampaign","getCharacter","addCharacter","updateCharacterInfo","updateCharacterStats","updateCharacterSkills","deleteCharacter","getClasses","getClass","getRaces","createSession","endSession","changeCharacterHealth","currentSession","onSessionUpdate","NavBar","props","window","location","pathname","useState","night","toggleNight","buttonText","changeButtonText","style","document","querySelector","toggleNightMode","onClick","setProperty","links","to","className","Home","me","useContext","setButtonText","src","alt","name","EditCampaign","campaignID","handleNameChange","bind","submit","delete","submitted","returnCampaign","toggleID","state","loaded","campaign","showID","e","preventDefault","this","setState","target","value","back","isDM","currentUserID","dm","session","LoadCampaign","ID","return","RemovePlayers","onSubmit","htmlFor","type","id","required","onChange","LeaveCampaign","SubmitCampaign","DeleteCampaign","Component","useQuery","variables","fetchPolicy","loading","data","error","console","log","useMutation","submitCampaign","undefined","currentUser","delCampaign","_id","tryLeaveCampaign","notifyOnNetworkStatusChange","refetch","removePlayer","waitingResponse","players","updatePlayers","characters","map","index","DisplayCampaigns","needsRefresh","refreshed","campaignList","campaigns","currentValue","Campaign","changeSelected","purpose","length","Campaigns","selected","chosen","changeChosen","wantsNew","changeWantsNew","newName","changeNewName","newSubmitted","changeNewSubmitted","changeNeedsRefresh","wantsJoin","changeWantsJoin","joinName","changeJoinName","joinSubmitted","changeJoinSubmitted","newCampaign","addData","addLoading","joinCampaign","joinData","joinLoading","useEffect","arrayToOptions","array","newArray","i","push","levelsAreBalanced","levels","getRemainingLevelPoints","remaining","EditCharacter","character","updateCharacter","characterID","reloadCharacter","CharacterInfo","reload","NewGeneralInfo","changeName","background","changeBG","race","changeRace","changeCampaign","raceLoading","raceData","createNew","newLoading","newData","races","CampaignSelect","rows","cols","maxLength","RaceSelect","classLoading","classData","page","changePage","pages","ExistingGeneralInfo","classes","Proficiencies","class","charClass","changeClass","str","changeStr","dex","changeDex","con","changeCon","int","changeInt","wis","changeWis","cha","changeCha","rename","toggleRename","delCharacter","delLoading","delData","updateInfo","infoLoading","infoData","parseInt","updateStats","statsLoading","statsData","badStats","setBadStats","remainingLevelPoints","setRemaining","current","ClassSelect","min","max","newLevelsStr","Number","innerText","newLevelsDex","newLevelsCon","newLevelsInt","newLevelsWis","newLevelsCha","skills","defaults","changeDefaults","options","changeOptions","updated","changeUpdated","proficiencies","proficiency_choices","ProficienciesChooseFrom","from","includes","chosenOptions","filter","updateChosen","Array","prototype","concat","updateSkills","profOptions","defaultChecked","checkbox","newer","newnumber","checked","choose","for","classOptions","selectedIndex","defaultValue","raceOptions","alignment","campaignOptions","DisplayCharacters","startSession","finishSession","characterList","cam","find","element","Character","Characters","needsSubmit","handleEditSubmit","clearSelected","context","PartyCharacters","partyCharacters","sessionID","changeHealth","hp","Play","setNeedsRefresh","needsRefetch","setNeedsRefetch","PlayView","refetched","queryData","queryLoading","useSubscription","updateData","updateLoading","changeData","sessionUpdate","MyAccount","username","contextType","PageSwitch","exact","path","component","Main","networkStatus","NetworkStatus","Provider","AddUser","password","newUser","email","Register","Registered","handleEmailChange","handleUsernameChange","handlePasswordChange","handleRegisterAttempt","badForm","registered","width","variant","Login","setID","setUsername","setPassword","toggleRegistered","stayLoggedIn","badLogin","toggleBadLogin","useLazyQuery","getID","called","handleLogin","autoFocus","App","userID","setUserID","wsLink","WebSocketLink","uri","hostname","reconnect","httpLink","HttpLink","splitLink","split","query","definition","getMainDefinition","kind","operation","apolloClient","ApolloClient","link","cache","InMemoryCache","onError","networkError","graphQLErrors","ReactDOM","render","client","content","getElementById"],"mappings":"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","file":"static/js/main.1d39d387.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const UserContext = React.createContext({\r\n    user: null,\r\n    refreshUser: () => {},\r\n    toggleNavBar: () => {},\r\n})","import {gql} from '@apollo/client';\r\n\r\n//queries for client, import from here to necessary paths\r\n/* export const getUsers = gql`\r\n  query getAllUsers{\r\n    users {\r\n      name\r\n      username\r\n      password\r\n    }\r\n  }\r\n`; */\r\n/* export const getUser = gql`\r\n  query getUser($username:String, $password:String){\r\n    user(username: $username, password: $password){\r\n      _id\r\n      name\r\n      campaigns{\r\n        _id\r\n        name\r\n        dm\r\n      }\r\n      characters{\r\n        _id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`; */\r\n\r\nexport const getUserID = gql`\r\n  query getUserID($username:String, $password:String){\r\n    getUserID(username:$username, password:$password)\r\n  }\r\n`;\r\n\r\nexport const getUserByID = gql`\r\n  query getUserByID($id: String){\r\n    user(id: $id){\r\n      _id\r\n      name\r\n      username\r\n      campaigns{\r\n        _id\r\n        name\r\n        dm\r\n        currentSession\r\n      }\r\n      characters{\r\n        _id\r\n        name\r\n        campaign\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const addUser = gql`\r\n  mutation addUser($name:String, $username:String, $password:String){\r\n    addUser(name:$name, username:$username, password:$password){\r\n      name\r\n    }\r\n  }\r\n`;\r\n\r\nexport const currentUser = gql`\r\n  subscription currentUser($id:String){\r\n    updateUser(id:$id){\r\n      _id\r\n      name\r\n      permissions\r\n      campaigns{\r\n        _id\r\n        name\r\n        dm\r\n        currentSession\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const getCampaignID = gql`\r\n  query getCampaignID($name:String){\r\n    campaign(name:$name){\r\n      _id\r\n    }\r\n  }\r\n`;\r\n\r\n\r\nexport const getCampaign = gql`\r\n  query getCampaign($id:String){\r\n    campaign(id:$id){\r\n      name\r\n      dm\r\n      characters{\r\n        name\r\n        user{\r\n          _id\r\n          name\r\n          username\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const addCampaign = gql`\r\n  mutation addCampaign($dm:String, $name:String){\r\n    addCampaign(dm:$dm, name:$name){\r\n      _id\r\n    }\r\n  }\r\n`;\r\n\r\nexport const joinExistingCampaign = gql`\r\n  mutation joinExistingCampaign($id:String, $user:String){\r\n      joinCampaign(id:$id, user:$user){\r\n        name\r\n      }\r\n  }\r\n`;\r\n\r\nexport const leaveCampaign = gql`\r\n  mutation leaveCampaign($campaign:String, $user:String){\r\n      leaveCampaign(campaign:$campaign, user:$user){\r\n        name\r\n      }\r\n  }\r\n`;\r\n\r\nexport const deleteCampaign = gql`\r\n  mutation deleteCampaign($user:String, $dm:String, $campaign:String){\r\n    deleteCampaign(user:$user, dm:$dm, campaign:$campaign)\r\n  }\r\n`;\r\n\r\nexport const renameCampaign = gql`\r\n  mutation renameCampaign($id:String, $name:String){\r\n    renameCampaign(id:$id, name:$name){\r\n      name\r\n    }\r\n  }\r\n`;\r\n\r\nexport const getCharacter = gql`\r\n  query getCharacter($id:String){\r\n    character(id:$id){\r\n      _id\r\n      user{\r\n        _id\r\n      }\r\n      campaign\r\n      name\r\n      race\r\n      background\r\n      class\r\n      level\r\n      hp\r\n      cha\r\n      con\r\n      dex\r\n      int\r\n      str\r\n      wis\r\n      skills\r\n    }\r\n  }\r\n`;\r\n\r\nexport const addCharacter = gql`\r\n  mutation addCharacter($user:String, $campaign:String, $name:String, $race:String, $background:String){\r\n    addCharacter(user:$user, campaign:$campaign, name:$name, race:$race, background:$background){\r\n      _id\r\n      name\r\n    }\r\n  }\r\n`;\r\n\r\nexport const updateCharacterInfo = gql`\r\n  mutation updateCharacterInfo($id:String, $name:String, $campaign:String){\r\n    updateCharacterInfo(id:$id, name:$name, campaign:$campaign){\r\n      _id\r\n      name\r\n    }\r\n  }\r\n`;\r\n\r\nexport const updateCharacterStats = gql`\r\n  mutation updateCharacterStats($id:String, $class:String, $cha:Int, $con:Int, $dex:Int, $int:Int, $str:Int, $wis:Int){\r\n    updateCharacterStats(id:$id, class:$class, cha:$cha, con:$con, dex:$dex, int:$int, str:$str, wis:$wis){\r\n      _id\r\n      campaign\r\n      name\r\n    }\r\n  }\r\n`;\r\n\r\nexport const updateCharacterSkills = gql`\r\n  mutation updateCharacterSkills($id:String, $skills:[String]){\r\n    updateCharacterSkills(id:$id, skills:$skills){\r\n      _id\r\n      campaign\r\n      name\r\n    }\r\n  }\r\n`;\r\n\r\nexport const deleteCharacter = gql`\r\n  mutation deleteCharacter($user:String, $campaign:String, $character:String){\r\n    deleteCharacter(user:$user, campaign:$campaign, character:$character)\r\n  }\r\n`;\r\n\r\nexport const getClasses = gql`\r\n  query getClasses{\r\n    classes{\r\n      index\r\n      name\r\n    }\r\n  }\r\n`;\r\n\r\nexport const getClass = gql`\r\n  query getClass($index:String){\r\n    class(index:$index){\r\n      index\r\n      name\r\n      proficiencies{\r\n        index\r\n        name\r\n      }\r\n      proficiency_choices{\r\n        choose\r\n        from{\r\n          index\r\n          name\r\n          type\r\n          races{\r\n            index\r\n          }\r\n        }\r\n      }\r\n      starting_equipment_options{\r\n        choose\r\n        from{\r\n          equipment{\r\n            index\r\n            name\r\n            damage{\r\n              damage_dice\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const getRaces = gql`\r\n  query getRaces{\r\n    races{\r\n      index\r\n      name\r\n      speed\r\n      age\r\n      alignment\r\n      size_description\r\n      language_desc\r\n    }\r\n  }\r\n`;\r\n\r\nexport const currentSessionID = gql`\r\n  query currentSessionID($campaign:String){\r\n    getCurrentSessionID(campaign:$campaign)\r\n  }\r\n`;\r\n\r\nexport const createSession = gql`\r\n  mutation createSession($campaign:String, $user:String){\r\n    createSession(campaign:$campaign, user:$user){\r\n      _id\r\n    }\r\n  }\r\n`;\r\n\r\nexport const endSession = gql`\r\n  mutation endSession($campaign:String, $user:String){\r\n    endSession(campaign:$campaign, user:$user)\r\n  }\r\n`;\r\n\r\n//gameplay\r\n\r\nexport const changeCharacterHealth = gql`\r\n  mutation changeCharacterHealth($session:String, $character:String, $hp:Int){\r\n    changeCharacterHealth(session:$session, character:$character, hp:$hp)\r\n  }\r\n`;\r\n\r\nexport const currentSession = gql`\r\n  query currentSession($id:String){\r\n    session(id:$id){\r\n      _id\r\n      campaign\r\n      characters{\r\n        _id\r\n        position\r\n        character{\r\n          user{\r\n            _id\r\n          }\r\n          name\r\n          race\r\n          background\r\n          class\r\n          level\r\n          hp\r\n          cha\r\n          con\r\n          dex\r\n          int\r\n          str\r\n          wis\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const onSessionUpdate = gql`\r\n  subscription onSessionUpdate($id:String){\r\n    sessionUpdate(id:$id){\r\n      _id\r\n      campaign\r\n      characters{\r\n        _id\r\n        position\r\n        character{\r\n          user{\r\n            _id\r\n          }\r\n          name\r\n          race\r\n          background\r\n          class\r\n          level\r\n          hp\r\n          cha\r\n          con\r\n          dex\r\n          int\r\n          str\r\n          wis\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;","import React, { useState } from 'react'\r\nimport '../../App.css'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function NavBar(props){\r\n\r\n    const current = window.location.pathname\r\n\r\n    const [night, toggleNight] = useState(false)\r\n    const [buttonText, changeButtonText] = useState(\"D\")\r\n    const style = document.querySelector(':root').style\r\n    var toggleNightMode = <button onClick={()=>{\r\n        if(night){\r\n            style.setProperty('--primaryColour', '#e6e6e6')\r\n            style.setProperty('--secondaryColour', '#6e6e6e')\r\n            style.setProperty('--navTextColour', '#e6e6e6')\r\n            toggleNight(false)\r\n            changeButtonText(\"D\")\r\n        }else{\r\n            style.setProperty('--primaryColour', '#6e6e6e')\r\n            style.setProperty('--secondaryColour', '#e6e6e6')\r\n            style.setProperty('--navTextColour', '#6e6e6e')\r\n            toggleNight(true)\r\n            changeButtonText(\"N\")\r\n        }\r\n    }}>{buttonText}</button>\r\n    \r\n    var home = <Link to=\"/\"  className=\"navLink-home\">\r\n            <h3> DND20 </h3>\r\n        </Link>\r\n    var campaigns =  <Link to=\"/Campaigns\" className=\"navLink\">\r\n            <p> Campaigns </p>\r\n        </Link>\r\n    var characters = <Link to=\"/Characters\" className=\"navLink\">\r\n            <p> Characters </p>\r\n        </Link>\r\n    var play = <Link to=\"/Play\" className=\"navLink\">\r\n            <p> Play </p>\r\n        </Link>\r\n    var account = <Link to=\"/MyAccount\" className=\"navLink\">\r\n            <p> My Account </p>\r\n        </Link>\r\n    var links = [home, campaigns, characters, play, account, toggleNightMode]\r\n\r\n    //maybe set current page's link's background to different colour\r\n\r\n    return(\r\n        <nav className=\"navbar\">\r\n            {links}\r\n        </nav>\r\n    )\r\n}","import React, { useContext } from 'react';\r\nimport {useState} from 'react';\r\nimport '../App.css';\r\nimport {UserContext} from '../misc/UserContext';\r\n\r\nfunction Home() {\r\n\t\r\n\tconst {user:me} = useContext(UserContext);\r\n\tconst [buttonText, setButtonText] = useState(\"Next\");\r\n\r\n\tfunction setButtonIfUser(){\r\n\t\tif(me){\r\n\t\t\tsetButtonText(me.name);\r\n\t\t}else{\r\n\t\t\tsetButtonText(\"no user\")\r\n\t\t}\r\n\t}\r\n\r\n\treturn(\r\n\t\t<>\r\n\t\t\t<br/>\r\n\t\t\t<img src=\"images/Nooth_DnD.png\" className=\"App-logo\" alt=\"logo\" />\r\n\t\t\t<br/>\r\n\t\t\t<h1 className=\"title\">\r\n\t\t\t\tDnD20\r\n\t\t\t</h1>\r\n\t\t\t<button name=\"showname\" onClick={() => setButtonIfUser()}>\r\n\t\t\t\t{buttonText}\r\n\t\t\t</button>\r\n\t\t\t<p>welcome to the app, gamer</p>\r\n\t\t</>\r\n\t)\r\n}\r\nexport default Home;\r\n","import React, {useContext, useState} from 'react';\r\nimport {useMutation, useQuery} from '@apollo/client'\r\nimport '../../App.css';\r\nimport {UserContext} from '../../misc/UserContext'\r\nimport {getCampaign, renameCampaign, deleteCampaign, leaveCampaign} from '../../queries'\r\n\r\nexport default class EditCampaign extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.campaignID = this.props.campaignID\r\n        this.handleNameChange = this.handleNameChange.bind(this)\r\n        this.submit = this.submit.bind(this)\r\n        this.delete = this.delete.bind(this)\r\n        this.submitted = this.submitted.bind(this)\r\n        this.returnCampaign = this.returnCampaign.bind(this)\r\n        this.toggleID = this.toggleID.bind(this)\r\n        this.state = {submit:false, delete:false, loaded:false, campaign:null, name:\"\", showID:false}\r\n    }\r\n\r\n    handleNameChange(e){\r\n\t\te.preventDefault();\r\n\t\tthis.setState({name: e.target.value});\r\n\t}\r\n\r\n    submit(e){\r\n        this.setState({submit:true})\r\n        this.props.submit(e)\r\n    }\r\n\r\n    delete(){\r\n        this.setState({delete:true})\r\n    }\r\n\r\n    submitted(){\r\n        this.setState({submit:false, delete:false}, ()=>{this.props.back()})\r\n    }\r\n\r\n    returnCampaign(campaign){\r\n        //console.log(\"selected campaign:\", campaign)\r\n        this.setState({campaign:campaign, name:campaign.name, loaded:true})\r\n    }\r\n\r\n    toggleID(){\r\n        this.setState({showID:!this.state.showID})\r\n    }\r\n\r\n    render() {\r\n        if(this.campaignID != null){\r\n            let isDM = false\r\n            let isActive = false\r\n            if(this.state.campaign !== null){\r\n                isDM = (this.props.currentUserID===this.state.campaign.dm)\r\n                isActive = (this.state.campaign.session!==null)\r\n            }\r\n            return(\r\n                <>\r\n                    {(!this.state.loaded && !this.state.submit) && <div>\r\n                        <LoadCampaign ID={this.campaignID} return={this.returnCampaign}/>\r\n                    </div>}\r\n                    {isDM && <>{(this.state.loaded && !this.state.submit) && <div><img src=\"images/Nooth_DnD.png\" className=\"App-logo\" alt=\"logo\" />\r\n                        <h1 className=\"title\">\r\n                            Edit Campaign \r\n                        </h1>\r\n                        {<><RemovePlayers ID={this.campaignID}/><br/></>}\r\n                        {this.state.showID ? <><p>{this.campaignID}<button onClick={this.toggleID}>x</button></p></> : <button onClick={this.toggleID}>Show ID</button>}\r\n                        <button onClick={this.delete}>Delete this campaign</button><br/><br/>\r\n                        <form className=\"Form\" onSubmit={this.submit}>\r\n                            <div><label htmlFor=\"name\" className=\"tbLabel\">Campaign Name: \r\n                            <input type=\"name\" id=\"name\" name=\"name\" required={true} onChange={this.handleNameChange} value={this.state.name}/></label><br/></div>\r\n                            <input type=\"submit\" value=\"Submit\"/>\r\n                        </form><br/>\r\n                    </div>}</>}\r\n                    {(!isDM ) && <LeaveCampaign ID={this.campaignID} back={this.props.back}/>}\r\n                    {this.state.submit && <SubmitCampaign submitted={this.submitted} id={this.campaignID} name={this.state.name}/>} \r\n                    {this.state.delete && <DeleteCampaign submitted={this.submitted} dm={this.state.campaign.dm} campaignID={this.campaignID}/>}\r\n                    <button onClick={this.props.back}>Go Back</button>\r\n                </>\r\n            )\r\n        }else{\r\n            return (\r\n                <div>\r\n                    <p>Error: No Campaign</p>\r\n                    <button onClick={this.props.back}>Go Back</button>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nfunction LoadCampaign(props){\r\n    const {loading, data, error} = useQuery(getCampaign, {variables:{id:props.ID}, fetchPolicy:'network-only'})\r\n    while(loading){\r\n        return(<p>loading...</p>)\r\n    }\r\n    if(error){//no need to print errors here, as they wont. just if data && data.variable\r\n        console.log(error)\r\n        return(<p></p>)\r\n    }else{\r\n        props.return(data.campaign)\r\n        return(<p>done</p>)\r\n    }\r\n}\r\n\r\nfunction SubmitCampaign(props){\r\n    const [submitCampaign, {data, loading}] = useMutation(renameCampaign)\r\n    while(loading){\r\n        return(<p>loading</p>)\r\n    }\r\n    if(data===undefined){\r\n        submitCampaign({variables:{id:props.id, name:props.name}})\r\n    }else{\r\n        console.log(data)\r\n        props.submitted()\r\n    }\r\n    return null\r\n}\r\n\r\nfunction DeleteCampaign(props){\r\n    const {user:currentUser} = useContext(UserContext)\r\n    const [delCampaign, { data, loading }] = useMutation(deleteCampaign);//this method means it only gets added once\r\n\twhile(loading){\r\n\t\treturn(<p>Loading...</p>);\r\n\t}\r\n    if(data===undefined){\r\n        delCampaign({variables:{user:currentUser._id, dm:props.dm, campaign:props.campaignID}})\r\n        console.log('attempted deleteCampaign')\r\n    }else if(data != null){\r\n        console.log('done', data)\r\n        props.submitted()\r\n    }\r\n    return null\r\n}\r\n\r\nfunction LeaveCampaign(props){\r\n    const {user:currentUser} = useContext(UserContext)\r\n    const [tryLeaveCampaign, { data, loading }] = useMutation(leaveCampaign);\r\n\twhile(loading){\r\n\t\treturn(<p>Loading...</p>);\r\n\t}\r\n    return <button onClick={()=>{tryLeaveCampaign({variables:{user:currentUser._id, campaign:props.ID}});props.back()}}>Leave Campaign</button>\r\n}\r\n\r\nfunction RemovePlayers(props){\r\n    const {user} = useContext(UserContext)\r\n    const { data, loading, refetch } = useQuery(getCampaign, {variables:{id:props.ID}, notifyOnNetworkStatusChange:'true'})\r\n    const [removePlayer, { data:response, loading:waitingResponse }] = useMutation(leaveCampaign)//this method means it only gets added once\r\n    const [players, updatePlayers] = useState([])\r\n    useState(()=>{\r\n        if(loading||waitingResponse){\r\n            console.log(\"loading\")\r\n        }\r\n        if(data!==undefined && loading===false){\r\n            if(data!==null){\r\n                console.log(data.campaign)\r\n                if(data.campaign===null){\r\n                    refetch()\r\n                }else{\r\n                    updatePlayers(data.campaign.characters.map((value, index)=>{\r\n                        if(value.user._id!==user._id){\r\n                            return <button onClick={()=>{removePlayer({variables:{user:value.user._id, campaign:props.ID}});refetch()}}>Remove {value.user.name}</button>\r\n                        }else{return null}\r\n                    }))\r\n                }\r\n            }\r\n        }\r\n    },[data, loading])\r\n    return <>{players}</>\r\n}","import React, {useContext} from 'react'\r\nimport {UserContext} from '../../misc/UserContext'\r\n\r\nexport function DisplayCampaigns(props){//need to render the Campaign function for as many as there are in campaigns collection\r\n    const {user, refreshUser} = useContext(UserContext)\r\n    if(props.needsRefresh){\r\n        refreshUser()\r\n        props.refreshed()\r\n    }\r\n    const campaignList = user.campaigns.map((currentValue, index)=>{\r\n        return <Campaign key={index} campaign={currentValue} changeSelected={props.changeSelected} purpose={props.purpose} currentUser={user._id}/>\r\n    })\r\n    return (\r\n        <>\r\n            {(user.campaigns.length===0) && <p>You are not currently participating in any campaigns.</p>}\r\n            {(user.campaigns.length!==0) && campaignList}\r\n        </>\r\n    )\r\n}\r\n\r\nfunction Campaign(props){\r\n    return (\r\n        <div className=\"campaign\">\r\n            <p key=\"c1\" className=\"campaign-name\">{props.campaign.name}</p>\r\n            <ul><li key=\"editButton\">\r\n                {props.purpose===\"Edit\" && <button onClick={() => props.changeSelected(props.campaign._id)}>\r\n                    Edit\r\n                </button>}\r\n            </li></ul>\r\n        </div>\r\n    )\r\n}","import React, { useState, useContext, useEffect } from 'react';\r\nimport '../App.css';\r\nimport {useMutation} from '@apollo/client';\r\nimport {UserContext} from '../misc/UserContext';\r\nimport EditCampaign from '../components/campaigns/EditCampaign'\r\nimport {addCampaign, joinExistingCampaign} from '../queries'\r\nimport {DisplayCampaigns} from '../components/campaigns/DisplayCampaigns'\r\n\r\nexport default function Campaigns(props) {\r\n    const {user} = useContext(UserContext)\r\n    const [selected, changeSelected] = useState(null)\r\n    const [chosen, changeChosen] = useState(false)\r\n    const [wantsNew, changeWantsNew] = useState(false)\r\n    const [newName, changeNewName] = useState(\"\")\r\n    const [newSubmitted, changeNewSubmitted] = useState(false)\r\n    const [needsRefresh, changeNeedsRefresh] = useState(false)\r\n    const [wantsJoin, changeWantsJoin] = useState(false)\r\n    const [joinName, changeJoinName] = useState(\"\")\r\n    const [joinSubmitted, changeJoinSubmitted] = useState(false)\r\n    const [newCampaign, { data: addData, loading: addLoading }] = useMutation(addCampaign)\r\n    const [joinCampaign, {data: joinData, loading: joinLoading}] = useMutation(joinExistingCampaign)\r\n\r\n    useEffect(()=>{\r\n        if(wantsNew && newSubmitted && !addLoading && addData===undefined){\r\n            newCampaign({variables:{dm:user._id, name:newName}})\r\n        }\r\n        if(addData!==undefined){\r\n            changeWantsNew(false)\r\n            changeNewSubmitted(false)\r\n            changeChosen(true)\r\n            changeSelected(addData.addCampaign._id)\r\n        }\r\n    }, [addData, addLoading, newCampaign, newName, newSubmitted, user._id, wantsNew])\r\n\r\n    useEffect(()=>{\r\n        if(wantsJoin && joinSubmitted && !joinLoading && joinData===undefined){\r\n            joinCampaign({variables:{id:joinName, user:user._id}})//causes bad request error 400 for some reason, but works in playground\r\n        }\r\n        if(joinData!==undefined){\r\n            changeWantsJoin(false)\r\n            changeJoinSubmitted(false)\r\n            changeChosen(true)\r\n            changeSelected(joinData.joinCampaign._id)\r\n        }\r\n    }, [joinCampaign, joinData, joinLoading, joinName, joinSubmitted, user._id, wantsJoin])\r\n\r\n    return(<>\r\n        {!chosen && <><h1 className=\"title\"> Campaigns </h1>\r\n            {!wantsJoin && <button onClick={()=>{changeWantsJoin(!wantsJoin)}}>Join Campaign</button>}\r\n            {wantsJoin && <>\r\n                <input type=\"campaign\" onChange={(e)=>{e.preventDefault();changeJoinName(e.target.value)}} value={joinName}></input>\r\n                <button onClick={()=>{changeJoinSubmitted(!joinSubmitted)}}>Join</button>\r\n                <button onClick={()=>{changeWantsJoin(!wantsJoin)}}>x</button>\r\n            </>}\r\n            {(!wantsNew && !newSubmitted) && <button onClick={()=>{changeWantsNew(!wantsNew)}}>+</button>}\r\n            {(wantsNew && !newSubmitted) && <>\r\n                <form className=\"Form\" onSubmit={(e)=>{e.preventDefault();changeNewSubmitted(!newSubmitted)}}>\r\n                    <label htmlFor=\"name\" className=\"tbLabel\">Campaign Name: \r\n                    <input type=\"name\" id=\"name\" name=\"name\" required={true} onChange={(e)=>{e.preventDefault();changeNewName(e.target.value)}} value={newName}/></label>\r\n                    <input type=\"submit\" value=\"Submit\"/>\r\n                    <button onClick={()=>{changeWantsNew(!wantsNew)}}>x</button>\r\n                </form>\r\n            </>}<br/><br/>\r\n            <DisplayCampaigns needsRefresh={needsRefresh} refreshed={()=>{changeNeedsRefresh(false)}} changeSelected={(selected)=>{changeSelected(selected);changeChosen(true)}} purpose=\"Edit\"/>\r\n        </>}\r\n        {chosen && <EditCampaign currentUserID={user._id} campaignID={selected} submit={()=>{}} back={()=>{changeSelected(null);changeChosen(false);changeNeedsRefresh(true)}}/>}\r\n    </>)\r\n}","export function arrayToOptions(array, selected){\r\n    let newArray = []\r\n    if(array[0]!==undefined){\r\n        if(array[0].index!==undefined){\r\n            for (let i=0; i<array.length; i++){\r\n                newArray.push(<option value={array[i].index} key={i}>{array[i].name}</option>)\r\n            }\r\n        }else if (array[0]._id!==undefined){\r\n            for (let i=0; i<array.length; i++){\r\n                newArray.push(<option value={array[i]._id} key={i}>{array[i].name}</option>)\r\n            }\r\n        }\r\n    }\r\n    return newArray\r\n}","export function levelsAreBalanced(levels){//input an array [str, dex, con, int, wis, cha]\r\n    return (0 <= getRemainingLevelPoints(levels) && getRemainingLevelPoints(levels) <= 25) ? true : false\r\n}\r\n\r\nexport function getRemainingLevelPoints(levels){\r\n    let remaining = 25\r\n    levels.map((value)=>{\r\n        switch(value) {\r\n            case 0: case 1: case 2: case 3: case 4: case 5: case 6: case 7: case 8: case 9: case 10: case 11: case 12: case 13: case 14:\r\n                remaining -= (value - 8)\r\n                break\r\n            case 15:\r\n                remaining -= 8\r\n                break\r\n            case 16:\r\n                remaining -= 10\r\n                break\r\n            case 17:\r\n                remaining -= 13\r\n                break\r\n            case 18:\r\n                remaining -= 18\r\n                break\r\n            default:\r\n                remaining -= 100\r\n                break\r\n        }\r\n    })\r\n    return remaining\r\n}","import React, {useContext, useEffect, useState} from 'react'\r\nimport {useQuery, useLazyQuery, useMutation} from '@apollo/client'\r\nimport '../../App.css'\r\nimport {addCharacter, deleteCharacter, getCharacter, getClasses, getClass, getRaces, updateCharacterInfo, updateCharacterStats, updateCharacterSkills} from '../../queries'\r\nimport { arrayToOptions } from '../../functions/GeneralFunctions'\r\nimport { UserContext } from '../../misc/UserContext'\r\nimport { levelsAreBalanced, getRemainingLevelPoints } from '../../functions/CharacterCreation'\r\n\r\n\r\n\r\nexport default function EditCharacter(props){\r\n    const user = props.currentUser\r\n    const [character, updateCharacter] = useState(null)\r\n    const {loading, data, refetch: reloadCharacter} = useQuery(getCharacter, {variables:{id:props.characterID}, fetchPolicy:'network-only'})\r\n    useEffect(()=>{\r\n        if (loading===false && data!==undefined){\r\n            updateCharacter(data.character)\r\n        }\r\n        if(loading){\r\n            return(<p>Loading..</p>)\r\n        }\r\n    }, [data, loading, props.characterID])\r\n    while(loading){\r\n        return(<p>Loading...</p>)\r\n    }\r\n    return(<>\r\n        <button className=\"backButton\" onClick={props.back}>Back</button>{/* vvv unloaded and unentered*/}\r\n        {loading===false && (character!==null ? <CharacterInfo user={user} character={character} reload={reloadCharacter} back={props.back}/> : <NewGeneralInfo user={user} back={props.back}/>)}\r\n    </>)\r\n}\r\n\r\nfunction NewGeneralInfo(props){\r\n    const [name, changeName] = useState(\"\")\r\n    const [background, changeBG] = useState(\"\")\r\n    const [race, changeRace] = useState(\"\")\r\n    const [campaign, changeCampaign] = useState(\"\")\r\n    const {loading:raceLoading, data:raceData} = useQuery(getRaces)\r\n    const [createNew, {loading:newLoading, data:newData}] = useMutation(addCharacter)\r\n    useEffect(()=>{\r\n        if (props.user.campaigns[0]!==undefined){\r\n            changeCampaign(props.user.campaigns[0]._id)\r\n        }\r\n        if(raceData!==undefined){\r\n            if (raceData.races[0]!==undefined){\r\n                changeRace(raceData.races[0].index)\r\n            }\r\n        }\r\n    },[raceData, props.user.campaigns])\r\n    while(raceLoading||newLoading){\r\n        return(<p>Loading...</p>)\r\n    }\r\n    if(newData!==undefined){\r\n        props.back()\r\n    }\r\n    return (<form onSubmit={()=>{console.log(props.user._id, campaign, name, race, background);createNew({variables:{user:props.user._id, campaign:campaign, name:name, race:race, background:background}})}}>\r\n        <input type=\"submit\" /><br/>\r\n        <label htmlFor=\"name\" className=\"tbLabel\">Name: \r\n        <input type=\"name\" id=\"name\" name=\"name\" required={true} onChange={(e)=>{e.preventDefault();changeName(e.target.value)}} value={name}/></label>\r\n        <CampaignSelect id=\"campaign\" campaigns={props.user.campaigns} changeCampaign={changeCampaign}/><br/>\r\n        <label htmlFor=\"bg\" className=\"tbLabel\">Background Info / Lore: \r\n        <textarea id=\"bg\" name=\"bg\" onChange={(e)=>{e.preventDefault();changeBG(e.target.value)}} value={background} rows=\"4\" cols=\"50\" maxLength=\"500\"/></label><br/>\r\n        <RaceSelect id=\"race\" races={raceData.races} changeRace={changeRace}/><br/>\r\n    </form>)\r\n}\r\n\r\nfunction CharacterInfo(props){\r\n    //console.log(props.character)\r\n    const {loading:classLoading, data:classData} = useQuery(getClasses)\r\n    const [page, changePage] = useState(0)\r\n    while(classLoading){\r\n        return(<p>Loading...</p>)\r\n    }\r\n    let pages = <>{[\r\n            page===0 && <ExistingGeneralInfo character={props.character} classes={classData.classes} back={props.back}/>,\r\n            page===1 && <Proficiencies reload={props.reload} character={props.character}/>\r\n        ]}<p className=\"Form\">Page:\r\n            <button onClick={()=>{changePage(0)}}>1</button>\r\n            <button onClick={()=>{changePage(1)}}>2</button>\r\n        </p></>\r\n    return (<div><h2>{props.character.name}</h2>\r\n        <div className=\"Form\">{pages}</div>\r\n    </div>)\r\n}\r\n\r\nfunction ExistingGeneralInfo(props){\r\n    const {user} = useContext(UserContext)\r\n    const character = props.character\r\n    const [campaign, changeCampaign] = useState(character.campaign)\r\n    const [charClass, changeClass] = useState(character.class)\r\n    const [str, changeStr] = useState(character.str)\r\n    const [dex, changeDex] = useState(character.dex)\r\n    const [con, changeCon] = useState(character.con)\r\n    const [int, changeInt] = useState(character.int)\r\n    const [wis, changeWis] = useState(character.wis)\r\n    const [cha, changeCha] = useState(character.cha)//need to implement for maximum levels etc.\r\n    const [rename, toggleRename] = useState(false)\r\n    const [name, changeName] = useState(character.name)\r\n    const [delCharacter, {loading:delLoading, data:delData}] = useMutation(deleteCharacter, {variables:{character:character._id, user:character.user._id, campaign:character.campaign}})\r\n    const [updateInfo, {loading:infoLoading, data:infoData}] = useMutation(updateCharacterInfo, {variables:{id:character._id, name:name, campaign:campaign}})\r\n    const [updateStats, {loading:statsLoading, data:statsData}] = useMutation(updateCharacterStats, {variables:{id:character._id, class:charClass, cha:parseInt(cha), con:parseInt(con), str:parseInt(str), dex:parseInt(dex), int:parseInt(int), wis:parseInt(wis)}})\r\n    const [badStats, setBadStats] = useState(false)\r\n    const levels = [str, dex, con, int, wis, cha]\r\n    const [remainingLevelPoints, setRemaining] = useState(getRemainingLevelPoints(levels))\r\n\r\n    useEffect(()=>{//only runs once, because props.classes never changes\r\n        if (props.classes[0]!==undefined){\r\n            changeClass(props.classes[0].index)\r\n        }\r\n    },[props.classes])\r\n\r\n    while(delLoading||infoLoading||statsLoading){\r\n        if(delLoading){\r\n            console.log(character._id, character.user._id, character.campaign)\r\n        }\r\n        return(<p>loading</p>)\r\n    }\r\n    if(delData!==undefined||infoData!==undefined||statsData!==undefined){\r\n        props.back()\r\n    }\r\n    return (<><div>\r\n        <button onClick={delCharacter}>Delete Character</button></div>\r\n        {rename ? <>\r\n            <form onSubmit={updateInfo}>\r\n                <label htmlFor=\"name\" className=\"tbLabel\">Name: \r\n                <input type=\"text\" id=\"name\" name=\"name\" required={true} onChange={(e)=>{e.preventDefault();changeName(e.target.value)}} value={name}/></label>\r\n                <CampaignSelect id=\"campaign\" current={campaign} campaigns={user.campaigns} changeCampaign={changeCampaign}/>\r\n                <input type=\"submit\"/><button onClick={()=>{toggleRename(!rename)}}>Cancel</button>\r\n            </form>\r\n        </> : <><button onClick={()=>{toggleRename(!rename)}}>Rename/ChangeCampaign</button><br/></>}\r\n        <form className=\"Form\" onSubmit={()=>{if(levelsAreBalanced([str, dex, con, int, wis, cha])){updateStats();setBadStats(false)}else{setBadStats(true)}}}>\r\n            <input type=\"submit\" /><br/>\r\n            <ClassSelect id=\"class\" current={charClass} classes={props.classes} changeClass={changeClass}/><br/>\r\n            <label htmlFor=\"str\" className=\"tbLabel\">Str: \r\n            <input type=\"number\" id=\"str\" name=\"str\" min=\"1\" max=\"20\" required={true} onChange={(e)=>{const newLevelsStr = [str + (Number.parseInt(e.target.value) - str), dex, con, int, wis, cha];e.preventDefault();if(levelsAreBalanced(newLevelsStr)){changeStr(Number.parseInt(e.target.value));setRemaining(getRemainingLevelPoints(newLevelsStr))}else{e.target.innerText = str}}} value={str}/></label>\r\n            <label htmlFor=\"dex\" className=\"tbLabel\">Dex: \r\n            <input type=\"number\" id=\"dex\" name=\"dex\" min=\"1\" max=\"20\" required={true} onChange={(e)=>{const newLevelsDex = [str, dex + (Number.parseInt(e.target.value) - dex), con, int, wis, cha];e.preventDefault();if(levelsAreBalanced(newLevelsDex)){changeDex(Number.parseInt(e.target.value));setRemaining(getRemainingLevelPoints(newLevelsDex))}else{e.target.innerText = dex}}} value={dex}/></label>\r\n            <label htmlFor=\"con\" className=\"tbLabel\">Con: \r\n            <input type=\"number\" id=\"con\" name=\"con\" min=\"1\" max=\"20\" required={true} onChange={(e)=>{const newLevelsCon = [str, dex, con + (Number.parseInt(e.target.value) - con), int, wis, cha];e.preventDefault();if(levelsAreBalanced(newLevelsCon)){changeCon(Number.parseInt(e.target.value));setRemaining(getRemainingLevelPoints(newLevelsCon))}else{e.target.innerText = con}}} value={con}/></label>\r\n            <label htmlFor=\"int\" className=\"tbLabel\">Int: \r\n            <input type=\"number\" id=\"int\" name=\"int\" min=\"1\" max=\"20\" required={true} onChange={(e)=>{const newLevelsInt = [str, dex, con, int + (Number.parseInt(e.target.value) - int), wis, cha];e.preventDefault();if(levelsAreBalanced(newLevelsInt)){changeInt(Number.parseInt(e.target.value));setRemaining(getRemainingLevelPoints(newLevelsInt))}else{e.target.innerText = int}}} value={int}/></label>\r\n            <label htmlFor=\"wis\" className=\"tbLabel\">Wis: \r\n            <input type=\"number\" id=\"wis\" name=\"wis\" min=\"1\" max=\"20\" required={true} onChange={(e)=>{const newLevelsWis = [str, dex, con, int, wis + (Number.parseInt(e.target.value) - wis), cha];e.preventDefault();if(levelsAreBalanced(newLevelsWis)){changeWis(Number.parseInt(e.target.value));setRemaining(getRemainingLevelPoints(newLevelsWis))}else{e.target.innerText = wis}}} value={wis}/></label>\r\n            <label htmlFor=\"cha\" className=\"tbLabel\">Cha: \r\n            <input type=\"number\" id=\"cha\" name=\"cha\" min=\"1\" max=\"20\" required={true} onChange={(e)=>{const newLevelsCha = [str, dex, con, int, wis, cha + (Number.parseInt(e.target.value) - cha)];e.preventDefault();if(levelsAreBalanced(newLevelsCha)){changeCha(Number.parseInt(e.target.value));setRemaining(getRemainingLevelPoints(newLevelsCha))}else{e.target.innerText = cha}}} value={cha}/></label>\r\n            <p>{remainingLevelPoints} points remaining</p>\r\n        </form>\r\n        {badStats && <p>bad stats</p>}\r\n    </>)\r\n}\r\n\r\nfunction Proficiencies(props){//works(only for first set of choices), just needs submit button\r\n    console.log(props.character.skills)\r\n    const {data, loading} = useQuery(getClass, {variables:{index:props.character.class}})\r\n    const [defaults, changeDefaults] = useState([])\r\n    const [options, changeOptions] = useState([])\r\n    const [updated, changeUpdated] = useState(false)\r\n    useEffect(()=>{\r\n        if (!(data===null||data===undefined) && loading===false && updated===false){\r\n            changeDefaults(data.class.proficiencies.map((currentValue)=>{return currentValue.name}))\r\n            changeOptions(data.class.proficiency_choices.map((current, index)=>{\r\n                return <ProficienciesChooseFrom defaults={data.class.proficiencies.map((currentValue)=>{return currentValue.index})} character={props.character} options={data.class.proficiency_choices[index]} reload={props.reload}/>\r\n            }))\r\n            changeUpdated(true)\r\n        }\r\n    },[data, loading, props, props.character, props.classes, updated])\r\n    while(loading){\r\n        return(<p>Loading data...</p>)\r\n    }\r\n    return(<>{options}<p>{defaults}</p></>)\r\n}\r\n\r\nfunction ProficienciesChooseFrom(props){\r\n    const [chosenOptions, changeChosen] = useState(props.options.from.map((currentValue, index)=>{if(props.character.skills.includes(currentValue.index)){return currentValue.index}else{return null}}))\r\n    const [chosen, updateChosen] = useState(chosenOptions.filter(current => current!==null).length)\r\n    const [updateSkills, {data:infoData}] = useMutation(updateCharacterSkills, {variables:{id:props.character._id, skills:Array.prototype.concat(props.defaults, chosenOptions.filter(current => current!==null))}})\r\n    const profOptions = (props.options.from.map((currentValue, index)=>{//trying to get preselection to work based on db data\r\n        return (<>\r\n            <input type=\"checkbox\" defaultChecked={props.character.skills.includes(currentValue.index)} name={index} id={currentValue.index} onChange={(e)=>{choose(e.target)}}/>\r\n            <label for={index}>{currentValue.name}</label>\r\n        </>)\r\n    }))\r\n\r\n    function choose(checkbox){\r\n        var newer = []\r\n        var newnumber = chosen\r\n        if(checkbox.checked){\r\n            if(chosen+1 <= props.options.choose){\r\n                newnumber++\r\n                newer = chosenOptions.map((currentValue, index)=>{if(index === Number.parseInt(checkbox.name)){return checkbox.id}else{return currentValue}})\r\n            }else{\r\n                checkbox.checked = false\r\n                newer = chosenOptions\r\n            }\r\n        }else{\r\n            newnumber--\r\n            newer = chosenOptions.map((currentValue, index)=>{if(index === Number.parseInt(checkbox.name)){return null}else{return currentValue}})\r\n        }\r\n        changeChosen(newer)\r\n        updateChosen(newnumber)\r\n    }\r\n    \r\n    return (props.options.from[0].type===\"Skills\" && <>\r\n         <p>Choose {props.options.choose}:</p>\r\n        <form onSubmit={(e)=>{e.preventDefault();updateSkills();props.reload()}}>\r\n            {profOptions}<input type=\"submit\"/>\r\n        </form>\r\n    </>)\r\n}\r\n\r\nfunction ClassSelect(props){\r\n    let classOptions = arrayToOptions(props.classes)\r\n    return(\r\n        <label htmlFor=\"class\" className=\"tbLabel\">Class:\r\n            <select id=\"classes\" required={true} name=\"classes\" onChange={(e)=>{props.changeClass(props.classes[e.target.selectedIndex].index)}} defaultValue={props.current}>\r\n                {classOptions}\r\n            </select>\r\n        </label>\r\n    )\r\n}\r\n\r\nfunction RaceSelect(props){\r\n    const [selected, changeSelected] = useState(0)\r\n    let raceOptions = arrayToOptions(props.races)\r\n    return(\r\n        <div><label htmlFor=\"races\" required={true} className=\"tbLabel\">Race:\r\n            <select id=\"races\" name=\"races\" selectedIndex=\"0\" onChange={(e)=>{props.changeRace(props.races[e.target.selectedIndex].index); changeSelected(e.target.selectedIndex)}}>\r\n                {raceOptions}\r\n            </select></label>\r\n            <p>{props.races[selected].alignment}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction CampaignSelect(props){\r\n    const campaignOptions = arrayToOptions(props.campaigns)\r\n    if(props.campaigns.length===1){\r\n        props.changeCampaign(props.campaigns[0]._id)\r\n    }\r\n    return(<>\r\n        <label htmlFor=\"campaigns\" className=\"tbLabel\">Campaign:\r\n            <select id=\"campaigns\" name=\"campaigns\" selectedIndex=\"0\" required={true} onChange={(e)=>{props.changeCampaign(props.campaigns[e.target.selectedIndex]._id)}} defaultValue={props.current}>\r\n                {campaignOptions}\r\n            </select>\r\n        </label>\r\n    </>)\r\n}\r\n","import { useQuery, useMutation, useSubscription } from '@apollo/client'\r\nimport React, {useContext, useEffect} from 'react'\r\nimport {UserContext} from '../../misc/UserContext'\r\nimport { currentSessionID, createSession, endSession } from '../../queries'\r\n\r\nexport function DisplayCharacters(props){//need to render the Campaign function for as many as there are in campaigns collection\r\n    const {user, refreshUser} = useContext(UserContext)\r\n    if(props.needsRefresh){\r\n        refreshUser()\r\n        props.refreshed()\r\n    }\r\n    const [startSession, {data: createSessionData}] = useMutation(createSession)\r\n    const [finishSession, {data: endSessionData}] = useMutation(endSession)\r\n    const currentUser = user\r\n    const characterList = currentUser.characters.map((currentValue, index)=>{//doesn't render if user doesn't have campaign\r\n        var cam = currentUser.campaigns.find(element => element._id===currentValue.campaign)\r\n        return <Character key={index} character={currentValue} changeSelected={props.changeSelected} purpose={props.purpose} currentUser={user} campaign={cam}/>\r\n    })\r\n    if(props.purpose===\"Play\"){\r\n        characterList.push(currentUser.campaigns.map(element=>{\r\n            return (<>\r\n                {user._id===element.dm && element.currentSession===null && \r\n                    <button onClick={() => startSession({variables:{campaign:element._id, user:user._id}})}>\r\n                        Begin {element.name}\r\n                    </button>\r\n                }\r\n                {user._id===element.dm && element.currentSession!==null && \r\n                    <button onClick={() => finishSession({variables:{campaign:element._id, user:user._id}})}>\r\n                        End {element.name} session\r\n                    </button>\r\n                }\r\n            </>)\r\n        }))\r\n    }\r\n    return (\r\n        <div>\r\n            {props.purpose===\"Play\" && <button onClick={()=>{refreshUser()}}>Refresh</button>}\r\n            {(user.characters.length===0) && <p>You do not currently have any characters.</p>}\r\n            {(user.campaigns.length!==0) && characterList}\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction Character(props){\r\n        console.log(props.campaign)\r\n    return (\r\n        <div className=\"character\">\r\n            <p key=\"c1\" className=\"character-name\">{props.character.name}</p>\r\n            <ul>\r\n                <li key=\"mainButton\">\r\n                    {props.purpose===\"Edit\" && <button onClick={() => props.changeSelected(props.character._id)}>\r\n                        Edit\r\n                    </button>}\r\n                    {((props.purpose===\"Play\" && props.campaign!==undefined) && props.campaign.currentSession!==null) && <button onClick={() => props.changeSelected(props.campaign.currentSession)}>\r\n                        Play\r\n                    </button>}\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}","import React, { useContext } from 'react';\r\nimport '../App.css';\r\nimport {UserContext} from '../misc/UserContext';\r\nimport EditCharacter from '../components/characters/EditCharacter'\r\nimport {DisplayCharacters} from '../components/characters/DisplayCharacters'\r\n\r\nexport default class Characters extends React.Component {\r\n\r\n    static contextType = UserContext;\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {selected:null, chosen:false, needsRefresh:false, needsSubmit:false}\r\n        this.handleEditSubmit = this.handleEditSubmit.bind(this)\r\n        this.changeSelected = this.changeSelected.bind(this)\r\n        this.clearSelected = this.clearSelected.bind(this)\r\n        this.wantsNew = this.wantsNew.bind(this)\r\n        this.refreshed = this.refreshed.bind(this)\r\n    }\r\n\r\n    handleEditSubmit(e){\r\n        e.preventDefault();\r\n    }\r\n\r\n    changeSelected(selected){\r\n        this.setState({selected:selected, chosen:true})\r\n    }\r\n\r\n    clearSelected(){//need to update context\r\n        this.setState({selected:null, chosen:false, needsRefresh:true})\r\n    }\r\n    wantsNew(){\r\n        this.setState({chosen:true})\r\n    }\r\n    refreshed(){\r\n        this.setState({needsRefresh:false})\r\n    }\r\n\r\n    render() {\r\n        const {user} = this.context\r\n        return(\r\n            <>\r\n                <h1 className=\"title\"> Characters </h1>\r\n                {!this.state.chosen && <>\r\n                    <button onClick={this.wantsNew}>New Character</button>\r\n                    <DisplayCharacters needsRefresh={this.state.needsRefresh} refreshed={this.refreshed} changeSelected={this.changeSelected} purpose=\"Edit\"/> \r\n                </>}\r\n                {this.state.chosen && <EditCharacter currentUser={user} characterID={this.state.selected} submit={this.handleEditSubmit} back={this.clearSelected}/>}\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import { useMutation } from '@apollo/client'\r\nimport React, { useContext } from 'react'\r\nimport { UserContext } from '../../misc/UserContext'\r\nimport { changeCharacterHealth } from '../../queries'\r\n\r\nexport function PartyCharacters(props){\r\n    const {user} = useContext(UserContext)\r\n    const session = props.session\r\n    const partyCharacters = session.characters.map((currentValue, index)=>{return <CharacterInfo key={index} character={currentValue} sessionID={session._id} currentUser={user._id}/>})\r\n    return (\r\n        <>\r\n            {(session.characters.length===0) && <p>No characters in this party.</p>}\r\n            {(session.characters.length!==0) && partyCharacters}\r\n        </>\r\n    )\r\n}\r\n\r\nfunction CharacterInfo(props){\r\n    const character = props.character.character\r\n    const [changeHealth, {data}] = useMutation(changeCharacterHealth, {variables:{session:props.sessionID, character:props.character._id}})\r\n    return (<div className=\"campaign\">\r\n        <p key=\"c1\" className=\"campaign-name\">{character.name}</p>\r\n        <ul>\r\n            <li key=\"hp\">\r\n                <p>{character.hp}</p>\r\n                {character.user._id===props.currentUser && <>\r\n                    <button onClick={()=>{changeHealth({variables:{hp:character.hp+1}})}}>+</button>\r\n                    <button onClick={()=>{changeHealth({variables:{hp:character.hp-1}})}}>-</button>\r\n                </>}\r\n            </li>\r\n        </ul>\r\n    </div>)\r\n}","import React, { useContext, useEffect, useState } from 'react';\r\nimport { useSubscription, Subscription, useQuery } from '@apollo/client';\r\nimport '../App.css';\r\nimport {UserContext} from '../misc/UserContext'\r\nimport {currentSession, getUserID, onSessionUpdate} from '../queries'\r\nimport {PartyCharacters} from '../components/play/party'\r\nimport { DisplayCharacters } from '../components/characters/DisplayCharacters';\r\n\r\nexport default function Play(props) {\r\n    const {user} = useContext(UserContext)\r\n    const [selected, changeSelected] = useState(null)\r\n    const [needsRefresh, setNeedsRefresh] = useState(false)\r\n    const [needsRefetch, setNeedsRefetch] = useState(true)\r\n\r\n    return (<header className=\"App-header\">\r\n        {selected!==null ? <PlayView sessionID={selected} needsRefetch={needsRefetch} refetched={()=>{setNeedsRefetch(false)}}/> : <DisplayCharacters needsRefresh={needsRefresh} refreshed={()=>{setNeedsRefresh(true)}} changeSelected={changeSelected} purpose=\"Play\"/>}\r\n    </header>)\r\n}\r\n\r\nfunction PlayView(props){\r\n    const {data:queryData, loading:queryLoading, refetch} = useQuery(currentSession, {variables:{id:props.sessionID}})\r\n    const {data:updateData, loading:updateLoading} = useSubscription(onSessionUpdate, {variables:{id:props.sessionID}})\r\n    const [data, changeData] = useState(undefined)\r\n\r\n    useEffect(()=>{\r\n        if(props.needsRefetch){\r\n            refetch()\r\n            props.refetched()\r\n        }\r\n        if(updateData===undefined){\r\n            if(queryLoading){\r\n                console.log(\"loading\")\r\n            }\r\n            if(queryData!==undefined){\r\n                console.log(queryData.session)\r\n                changeData(queryData.session)\r\n            }\r\n        }else{\r\n            console.log(updateData.sessionUpdate)\r\n            changeData(updateData.sessionUpdate)\r\n        }\r\n    }, [queryLoading, queryData, updateLoading, updateData, refetch, props])\r\n\r\n    return (\r\n        <>\r\n            <h2>Play the game</h2>\r\n            {data!==undefined ? \r\n                <div className=\"play\">\r\n                    <PartyCharacters session={data}/>\r\n                </div>\r\n                : <p>No characters in this party.</p>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport { useLazyQuery } from '@apollo/client';\r\nimport '../App.css';\r\nimport {UserContext} from '../misc/UserContext'\r\nimport {getUserID} from '../queries'\r\n\r\nexport default function MyAccount(props) {\r\n    const {user} = useContext(UserContext)\r\n    return (\r\n        <>\r\n            <div>Name: {user.name}</div>\r\n            <div>Username: {user.username}</div>\r\n            <div>Campaigns participated in: {user.campaigns.length} (DM of {user.campaigns.filter(current => current.dm===user._id).length})</div>\r\n            <div>Characters: {user.characters.length}</div>\r\n        </>\r\n    )\r\n}","/**\r\n * This is the file that handles routing for the entire application\r\n */\r\nimport React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport '../../App.css';\r\nimport Home from '../../pages/Home';\r\nimport Campaigns from '../../pages/Campaigns';\r\nimport Characters from '../../pages/Characters'\r\nimport Play from '../../pages/Play'\r\nimport MyAccount from '../../pages/MyAccount'\r\n\r\nfunction PageSwitch(props){\r\n    return (\r\n        <header className=\"App-header\">\r\n            <Switch> {/* The Switch decides which component to show based on the current URL.*/}\r\n                <Route exact path='/' component={Home}/>\r\n                <Route exact path='/Campaigns' component={Campaigns}/>\r\n                <Route exact path='/Characters' component={Characters}/>\r\n                <Route exact path='/Play' component={Play}/>\r\n                <Route exact path='/MyAccount' component={MyAccount}/>\r\n            </Switch>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default PageSwitch;\r\n","import React from 'react';\r\nimport {NetworkStatus, useQuery} from '@apollo/client';\r\nimport {UserContext} from '../../misc/UserContext'\r\nimport {getUserByID} from '../../queries';\r\nimport '../../App.css';\r\nimport NavBar from './navbar'\r\nimport PageSwitch from './PageSwitch'\r\n\r\n\r\nexport default function Main(props){\r\n\r\n\tconst {loading, data, error, refetch, networkStatus} = useQuery(getUserByID, {variables:{id:props.id}, notifyOnNetworkStatusChange:true, fetchPolicy:'network-only'});\r\n\t\r\n\twhile(networkStatus===NetworkStatus.refetch){\r\n\t\treturn (<><NavBar currentUser={data.user}/><header><p>Retrieving your data...</p></header></>)\r\n\t}\r\n\twhile(loading){\r\n\t\treturn (<header><p>Loading...</p></header>);\r\n\t}\r\n\tif(error){\r\n\t\treturn (<p>There was an error. Please refresh the page and try again.</p>);\r\n\t}\r\n\tif(data !== undefined){\r\n\t\t//console.log(\"Logged in user\", data);\r\n\t\tconst context = { user:data.user, refreshUser:refetch }\r\n\t\treturn (\r\n\t\t\t<><NavBar currentUser={data.user}/>\r\n\t\t\t<UserContext.Provider value={context}>\r\n\t\t\t\t<PageSwitch/>\r\n\t\t\t</UserContext.Provider></>\r\n\t\t);\r\n\t}\r\n}\r\n","import React, {useEffect} from 'react';\r\nimport {useQuery, useMutation} from '@apollo/client'\r\nimport '../App.css';\r\nimport { Link } from \"react-router-dom\";\r\nimport {addUser, getUserID} from '../queries';\r\n\r\n\r\n\r\nclass Register extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\t\tthis.Registered = this.props.Registered;\r\n\t\tthis.handleNameChange = this.handleNameChange.bind(this);\r\n\t\tthis.handleEmailChange = this.handleEmailChange.bind(this);\r\n\t\tthis.handleUsernameChange = this.handleUsernameChange.bind(this);\r\n\t\tthis.handlePasswordChange = this.handlePasswordChange.bind(this);\r\n\t\tthis.handleRegisterAttempt = this.handleRegisterAttempt.bind(this);\r\n\t\tthis.state = {badForm:false, registered:false, name:\"\", email:\"\", username:\"\", password:\"\"};\r\n    }\r\n\thandleNameChange(e){\r\n\t\te.preventDefault();\r\n\t\tthis.setState({name: e.target.value});\r\n\t}\r\n\thandleEmailChange(e){\r\n\t\te.preventDefault();\r\n\t\tthis.setState({email: e.target.value});\r\n\t}\r\n\thandleUsernameChange(e){\r\n        e.preventDefault();\r\n        this.setState({username: e.target.value});\r\n    }\r\n    handlePasswordChange(e){\r\n        e.preventDefault();\r\n        this.setState({password: e.target.value});\r\n    }\r\n\r\n    handleRegisterAttempt(e){\r\n        e.preventDefault();\r\n\t\tif(!!this.state.name && !!this.state.email && !!this.state.username && !!this.state.password){\r\n\t\t\tthis.setState({registered: true});\r\n\t\t}else{\r\n\t\t\tthis.setState({badForm: true})\r\n\t\t}\r\n\t\t//need check all fields are filled out\r\n    }\r\n\r\n    render() {\r\n        return(//obviously needs more added\r\n            <>\r\n                {!this.state.registered && \r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<img src=\"images/Nooth_DnD.png\" width='300' alt=\"logo\"/>\r\n\t\t\t\t\t\t<h1 className=\"title\">\r\n\t\t\t\t\t\t\tSign Up\r\n\t\t\t\t\t\t</h1>\r\n\t\t\t\t\t\t<form className=\"Form\" onSubmit={this.handleRegisterAttempt}>\r\n\t\t\t\t\t\t\t<label htmlFor=\"fullname\" className=\"tbLabel\">Full Name: \r\n\t\t\t\t\t\t\t<input type=\"name\" id=\"fullname\" name=\"fullname\" required={true} onChange={this.handleNameChange} value={this.state.name}/></label><br/>\r\n\t\t\t\t\t\t\t<label htmlFor=\"email\" className=\"tbLabel\" name=\"tbLabel\">Email: \r\n\t\t\t\t\t\t\t<input type=\"email\" id=\"email\" name=\"email\" required={true} onChange={this.handleEmailChange} value={this.state.email}/></label><br/>\r\n\t\t\t\t\t\t\t<label htmlFor=\"username\" className=\"tbLabel\" name=\"tbLabel\">Username: \r\n\t\t\t\t\t\t\t<input type=\"username\" id=\"username\" name=\"username\" required={true} onChange={this.handleUsernameChange} value={this.state.username}/></label><br/>\r\n\t\t\t\t\t\t\t<label htmlFor=\"password\" className=\"tbLabel\" name=\"tbLabel\">Password: \r\n\t\t\t\t\t\t\t<input type=\"password\" id=\"password\" name=\"password\" required={true} onChange={this.handlePasswordChange} value={this.state.password}/></label><br/>\r\n\t\t\t\t\t\t\t<input type=\"submit\" value=\"Submit\"/>\r\n\t\t\t\t\t\t</form><br/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t}\r\n\t\t\t\t{this.state.registered && <AddUser name={this.state.name} email={this.state.email} username={this.state.username} password={this.state.password}/>}\r\n\t\t\t\t{this.state.badForm && <p>Please make sure all boxes are filled in</p>/**this check seems redundant with the boxes being marked as required */}\r\n\t\t\t\t<button onClick={this.Registered} name=\"next\" variant=\"outlined\">\r\n\t\t\t\t\tGo back to login\r\n\t\t\t\t</button>\r\n            </>\r\n\t\t)\r\n    }\r\n}\r\n\r\nfunction AddUser(props){\r\n\tconst {data:queryData, loading:queryLoading} = useQuery(getUserID, {variables: {username:props.username, password:props.password}}, {fetchPolicy:'network-only'});//check email instead of password here, as password does not need to be unique\r\n\tconst [newUser, { data, loading }] = useMutation(addUser);\r\n\twhile (queryLoading||loading) {console.log(\"loading\");return(<p>Loading...</p>)}\r\n\tconsole.log(queryData.getUserID)\r\n\tif(queryData!==undefined){\r\n\t\tif(queryData.getUserID===null && !queryLoading){//apparently here cannot read 'undefined' user, but that same method works in login???\r\n\t\t\tconsole.log(\"user doesn't already exist\")\r\n\t\t\tif(data===undefined){\r\n\t\t\t\tconsole.log(\"adding user\")\r\n\t\t\t\tnewUser({variables:{name:props.name, email:props.email, username:props.username, password:props.password}});\r\n\t\t\t}else if(data!=null){\r\n\t\t\t\tconsole.log(data)\r\n\t\t\t\treturn(<>\r\n\t\t\t\t\t<p>Welcome, {props.name}</p>\r\n\t\t\t\t</>);\r\n\t\t\t}\r\n\t\t}else if(queryData.getUserID!==null && !queryLoading){\r\n\t\t\tconsole.log(\"user already exists\", queryData.getUserID)\r\n\t\t\treturn (\r\n\t\t\t\t<p>Error: User already exists, try again</p>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\treturn <p></p>\r\n}\r\n\r\nexport default Register;","import React, { useEffect, useState } from 'react';\r\nimport { useLazyQuery } from '@apollo/client';\r\nimport '../App.css';\r\nimport Register from './Register';\r\nimport {getUserID} from '../queries'\r\n\r\nexport default function Login(props) {\r\n    const [id, setID] = useState(null)\r\n    const [username, setUsername] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [registered, toggleRegistered] = useState(true)\r\n    const [stayLoggedIn, setStay] = useState(false)\r\n    const [badLogin, toggleBadLogin] = useState(false)\r\n    const [getID, {data, loading, called}] = useLazyQuery(getUserID, {fetchPolicy:'network-only'})\r\n\r\n    useEffect(()=>{//if the client recieves an id upon request, the user may continue. if not, they are stuck\r\n        if(!loading&&(id!==null)){\r\n            props.handleLogin(id)\r\n        }\r\n        if(!loading && called && id===null){\r\n            if(data!==undefined){\r\n                setID(data.getUserID)\r\n            }else{\r\n                toggleBadLogin(true)\r\n            }\r\n        }\r\n    }, [loading, called, id, data, props])\r\n\r\n    return (\r\n        <header className=\"App-header\">\r\n            {registered && //show login form if not logged in\r\n                (<><div><form id=\"Form\" className=\"Form\" onSubmit={(e)=>{e.preventDefault();getID({variables:{username:username, password:password}})}}>\r\n                        <p> Please enter your username and password </p>\r\n                        <label htmlFor=\"user\">Username: \r\n                            <input type=\"username\" name=\"user\" id=\"user\" required={true} autoFocus={true} value={username} onChange={(e)=>{e.preventDefault();setUsername(e.target.value)}}/>\r\n                        </label><br />\r\n                        <label htmlFor=\"pass\">Password: \r\n                            <input type=\"password\" name=\"pass\" id=\"pass\" required={true} value={password} onChange={(e)=>{e.preventDefault();setPassword(e.target.value);}}/>\r\n                        </label><br />\r\n                        <input type=\"submit\" value=\"Submit\" variant=\"outlined\"/>\r\n                        <label htmlFor=\"rememberLogin\"> Remember me\r\n                            <input type=\"checkbox\" id=\"rememberLogin\" name=\"rememberLogin\" value={stayLoggedIn}/>{/*not implemented yet*/}\r\n                        </label>\r\n                    </form>\r\n                    <button name=\"next2\" variant=\"outlined\" onClick={()=>{toggleRegistered(false)}}>\r\n                            register\r\n                    </button>\r\n                </div>\r\n                {badLogin && <p>Could not find a user to match input username and password.</p>}</>)\r\n            }\r\n            {loading && <p>loading...</p>}\r\n            {!registered && <Register Registered={()=>{toggleRegistered(true)}}/>}\r\n        </header>\r\n    )\r\n}\r\n\r\n/* class Login extends React.Component {//old version (class)\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.HandleLogin = this.props.HandleLogin;\r\n        this.SetLogin = this.props.SetLogin;\r\n        this.BadLogin = this.props.BadLogin;\r\n        this.Registered = this.Registered.bind(this);\r\n        this.NotRegistered = this.NotRegistered.bind(this);\r\n        this.handleLoginAttempt = this.handleLoginAttempt.bind(this);\r\n        this.handleUsernameChange = this.handleUsernameChange.bind(this);\r\n        this.handlePasswordChange = this.handlePasswordChange.bind(this);\r\n        this.state = {registered:true, loggedIn: false, username: \"\", password: \"\"};\r\n    }\r\n\r\n    handleUsernameChange(e){\r\n        e.preventDefault(); \r\n        this.setState({username: e.target.value});\r\n        //console.log(this.state.username);\r\n    }\r\n    handlePasswordChange(e){\r\n        e.preventDefault();\r\n        this.setState({password: e.target.value});\r\n        //console.log(this.state.password);\r\n    }\r\n\r\n    handleLoginAttempt(e){//logs the form\r\n        e.preventDefault();\r\n        this.HandleLogin(this.state.username, this.state.password);\r\n        this.setState({loggedIn: true});\r\n        this.SetLogin();\r\n    }\r\n\r\n    NotRegistered(){\r\n        this.setState({registered: false});\r\n    }\r\n\r\n    Registered(){\r\n        this.setState({registered: true});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <header className=\"App-header\">\r\n                {(!this.state.loggedIn && this.state.registered) && //show login form if not logged in\r\n                    (<div><form id=\"Form\" className=\"Form\" onSubmit={this.handleLoginAttempt}>\r\n                        <p> Please enter your username and password </p>\r\n                        <label htmlFor=\"user\">Username: \r\n                            <input type=\"username\" name=\"user\" id=\"user\" required={true} autoFocus={true} onChange={this.handleUsernameChange} value={this.state.username}/>\r\n                        </label><br />\r\n                        <label htmlFor=\"pass\">Password: \r\n                            <input type=\"password\" name=\"pass\" id=\"pass\" required={true} onChange={this.handlePasswordChange} value={this.state.password}/>\r\n                        </label><br />\r\n                        <input type=\"submit\" value=\"Submit\" variant=\"outlined\"/>\r\n                        <label htmlFor=\"rememberLogin\"> Remember me\r\n                            <input type=\"checkbox\" id=\"rememberLogin\" name=\"rememberLogin\" value={this.state.loggedIn}//not implemented yet, checkbox doesnt even return anything on submit\r\n                        </label>\r\n                    </form>\r\n                    <button name=\"next2\" variant=\"outlined\" onClick={this.NotRegistered}>\r\n                            register\r\n                    </button>\r\n                    {this.BadLogin && <p>Could not find a user to match input username and password.</p>}\r\n                    </div>)\r\n                }\r\n                {(!this.state.registered && !this.state.loggedIn) && <Register Registered={this.Registered}/>}\r\n            </header>\r\n        )\r\n    }\r\n} */","import React, { useState } from 'react';\r\nimport './App.css';\r\nimport Main from './components/main/Main.js';\r\nimport Login from './pages/Login';\r\n\r\nfunction App(){\r\n    \r\n    const [userID, setUserID] = useState(null)\r\n    //add function to save ID/token to local storage here\r\n    return (\r\n        <div className=\"App\">\r\n            {userID ? <Main id={userID}/> : <Login handleLogin={setUserID}/>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom';\nimport './index.css';\nimport App from './App';\n//import reportWebVitals from './reportWebVitals';\n\nimport {ApolloClient, ApolloProvider, InMemoryCache, split, HttpLink} from '@apollo/client';\nimport {getMainDefinition} from '@apollo/client/utilities'\nimport {WebSocketLink} from '@apollo/client/link/ws'\n\n//from Apollo docs\nconst wsLink = new WebSocketLink({\n  uri: `ws://${window.location.hostname}:8080/graphql`,//just host, not hostname, for build version (to include port by default)\n  options: {reconnect:true}\n})\nconst httpLink = new HttpLink({\n  uri: `http://${window.location.hostname}:8080/graphql`\n});\nconst splitLink = split(({query})=>{\n  const definition = getMainDefinition(query)\n  return (\n    (definition.kind === 'OperationDefinition') \n    && (definition.operation === 'subscription')//uses wsLink if subscription operation\n  )\n}, wsLink, httpLink)\n\n\n//create apollo client\nexport const apolloClient = new ApolloClient({\n  link: splitLink,\n  cache: new InMemoryCache(),\n  onError: ({ networkError, graphQLErrors }) => {\n    console.log('graphQLErrors', graphQLErrors)\n    console.log('networkError', networkError)\n  },\n});\n\nReactDOM.render(\n  <ApolloProvider client = {apolloClient}>\n    <BrowserRouter>\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"/><App />\n    </BrowserRouter>\n  </ApolloProvider>,\n  document.getElementById('root')\n);\n\n\n/*\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();*/"],"sourceRoot":""}