{"version":3,"sources":["misc/UserContext.js","queries.js","components/main/navbar.js","pages/Home.js","components/campaigns/EditCampaign.js","components/campaigns/DisplayCampaigns.js","pages/Campaigns.js","functions/GeneralFunctions.js","functions/CharacterCreation.js","components/characters/EditCharacter.js","components/characters/DisplayCharacters.js","pages/Characters.js","components/play/party.js","pages/Play.js","pages/MyAccount.js","components/main/PageSwitch.js","components/main/Main.js","pages/Register.js","pages/Login.js","App.js","index.js"],"names":["UserContext","React","createContext","user","refreshUser","toggleNavBar","getUserID","gql","getUserByID","addUser","getCampaign","addCampaign","joinExistingCampaign","deleteCampaign","renameCampaign","getCharacter","addCharacter","updateCharacterInfo","updateCharacterStats","deleteCharacter","getClasses","getRaces","createSession","endSession","changeCharacterHealth","currentSession","onSessionUpdate","NavBar","props","window","location","pathname","links","to","className","Home","me","useContext","useState","buttonText","setButtonText","src","alt","name","onClick","EditCampaign","campaignID","handleNameChange","bind","submit","delete","submitted","returnCampaign","toggleID","state","loaded","campaign","showID","e","preventDefault","this","setState","target","value","back","console","log","isDM","currentUserID","dm","LoadCampaign","ID","return","onSubmit","htmlFor","type","id","required","onChange","SubmitCampaign","DeleteCampaign","Component","useQuery","variables","fetchPolicy","loading","data","error","useMutation","submitCampaign","undefined","currentUser","delCampaign","_id","DisplayCampaigns","needsRefresh","refreshed","campaignList","campaigns","map","currentValue","index","Campaign","changeSelected","purpose","length","Campaigns","selected","chosen","changeChosen","wantsNew","changeWantsNew","newName","changeNewName","newSubmitted","changeNewSubmitted","changeNeedsRefresh","wantsJoin","changeWantsJoin","joinName","changeJoinName","joinSubmitted","changeJoinSubmitted","newCampaign","addData","addLoading","joinCampaign","joinData","joinLoading","useEffect","arrayToOptions","array","newArray","i","push","levelsAreBalanced","levels","getRemainingLevelPoints","remaining","EditCharacter","characterID","returnLoaded","submittedNew","character","submitNew","submitGeneral","race","bg","CharacterInfo","new","LoadCharacter","raceLoading","raceData","classLoading","classData","page","pages","NewGeneralInfo","races","ExistingGeneralInfo","classes","forEach","element","changeName","background","changeBG","changeRace","changeCampaign","createNew","newLoading","newData","CampaignSelect","rows","cols","maxLength","RaceSelect","class","charClass","changeClass","str","changeStr","dex","changeDex","con","changeCon","int","changeInt","wis","changeWis","cha","changeCha","rename","toggleRename","delCharacter","delLoading","delData","updateInfo","infoLoading","infoData","parseInt","updateStats","statsLoading","statsData","badStats","setBadStats","remainingLevelPoints","setRemaining","current","ClassSelect","min","max","newLevelsStr","Number","innerText","newLevelsDex","newLevelsCon","newLevelsInt","newLevelsWis","newLevelsCha","classOptions","selectedIndex","defaultValue","raceOptions","alignment","campaignOptions","DisplayCharacters","startSession","finishSession","characterList","characters","Character","find","contextType","Characters","needsSubmit","handleEditSubmit","clearSelected","context","PartyCharacters","session","myCharacter","sessionID","partyCharacters","changeHealth","hp","Play","setNeedsRefresh","needsRefetch","setNeedsRefetch","PlayView","refetched","queryData","queryLoading","refetch","useSubscription","updateData","updateLoading","changeData","sessionUpdate","MyAccount","PageSwitch","exact","path","component","Main","notifyOnNetworkStatusChange","networkStatus","NetworkStatus","Provider","AddUser","username","password","newUser","email","Register","Registered","handleEmailChange","handleUsernameChange","handlePasswordChange","handleRegisterAttempt","badForm","registered","width","variant","Login","setID","setUsername","setPassword","toggleRegistered","stayLoggedIn","badLogin","toggleBadLogin","useLazyQuery","getID","called","handleLogin","autoFocus","App","userID","setUserID","wsLink","WebSocketLink","uri","hostname","options","reconnect","httpLink","HttpLink","splitLink","split","query","definition","getMainDefinition","kind","operation","apolloClient","ApolloClient","link","cache","InMemoryCache","onError","networkError","graphQLErrors","ReactDOM","render","client","content","document","getElementById"],"mappings":"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","file":"static/js/main.99eeaa7f.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const UserContext = React.createContext({\r\n    user: null,\r\n    refreshUser: () => {},\r\n    toggleNavBar: () => {},\r\n})","import {gql} from '@apollo/client';\r\n\r\n//queries for client, import from here to necessary paths\r\n/* export const getUsers = gql`\r\n  query getAllUsers{\r\n    users {\r\n      name\r\n      username\r\n      password\r\n    }\r\n  }\r\n`; */\r\n/* export const getUser = gql`\r\n  query getUser($username:String, $password:String){\r\n    user(username: $username, password: $password){\r\n      _id\r\n      name\r\n      campaigns{\r\n        _id\r\n        name\r\n        dm\r\n      }\r\n      characters{\r\n        _id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`; */\r\n\r\nexport const getUserID = gql`\r\n  query getUserID($username:String, $password:String){\r\n    getUserID(username:$username, password:$password)\r\n  }\r\n`;\r\n\r\nexport const getUserByID = gql`\r\n  query getUserByID($id: String){\r\n    user(id: $id){\r\n      _id\r\n      name\r\n      campaigns{\r\n        _id\r\n        name\r\n        dm\r\n        currentSession\r\n      }\r\n      characters{\r\n        _id\r\n        name\r\n        campaign\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const addUser = gql`\r\n  mutation addUser($name:String, $username:String, $password:String){\r\n    addUser(name:$name, username:$username, password:$password){\r\n      name\r\n    }\r\n  }\r\n`;\r\n\r\nexport const currentUser = gql`\r\n  subscription currentUser($id:String){\r\n    updateUser(id:$id){\r\n      _id\r\n      name\r\n      permissions\r\n      campaigns{\r\n        _id\r\n        name\r\n        dm\r\n        currentSession\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const getCampaignID = gql`\r\n  query getCampaignID($name:String){\r\n    campaign(name:$name){\r\n      _id\r\n    }\r\n  }\r\n`;\r\n\r\n\r\nexport const getCampaign = gql`\r\n  query getCampaign($id:String){\r\n    campaign(id:$id){\r\n      name\r\n      dm\r\n    }\r\n  }\r\n`;\r\n\r\nexport const addCampaign = gql`\r\n  mutation addCampaign($dm:String, $name:String){\r\n    addCampaign(dm:$dm, name:$name){\r\n      _id\r\n    }\r\n  }\r\n`;\r\n\r\nexport const joinExistingCampaign = gql`\r\n  mutation joinExistingCampaign($id:String, $user:String){\r\n      joinCampaign(id:$id, user:$user){\r\n        name\r\n      }\r\n  }\r\n`;\r\n\r\nexport const deleteCampaign = gql`\r\n  mutation deleteCampaign($user:String, $dm:String, $campaign:String){\r\n    deleteCampaign(user:$user, dm:$dm, campaign:$campaign)\r\n  }\r\n`;\r\n\r\nexport const renameCampaign = gql`\r\n  mutation renameCampaign($id:String, $name:String){\r\n    renameCampaign(id:$id, name:$name){\r\n      name\r\n    }\r\n  }\r\n`;\r\n\r\nexport const getCharacter = gql`\r\n  query getCharacter($id:String){\r\n    character(id:$id){\r\n      _id\r\n      user\r\n      campaign\r\n      name\r\n      race\r\n      background\r\n      class\r\n      level\r\n      hp\r\n      cha\r\n      con\r\n      dex\r\n      int\r\n      str\r\n      wis\r\n    }\r\n  }\r\n`;\r\n\r\nexport const addCharacter = gql`\r\n  mutation addCharacter($user:String, $campaign:String, $name:String, $race:String, $background:String){\r\n    addCharacter(user:$user, campaign:$campaign, name:$name, race:$race, background:$background){\r\n      _id\r\n      name\r\n    }\r\n  }\r\n`;\r\n\r\nexport const updateCharacterInfo = gql`\r\n  mutation updateCharacterInfo($id:String, $name:String, $campaign:String){\r\n    updateCharacterInfo(id:$id, name:$name, campaign:$campaign){\r\n      _id\r\n      name\r\n    }\r\n  }\r\n`;\r\n\r\nexport const updateCharacterStats = gql`\r\n  mutation updateCharacterStats($id:String, $class:String, $cha:Int, $con:Int, $dex:Int, $int:Int, $str:Int, $wis:Int){\r\n    updateCharacterStats(id:$id, class:$class, cha:$cha, con:$con, dex:$dex, int:$int, str:$str, wis:$wis){\r\n      _id\r\n      campaign\r\n      name\r\n    }\r\n  }\r\n`;\r\n\r\nexport const deleteCharacter = gql`\r\n  mutation deleteCharacter($user:String, $campaign:String, $character:String){\r\n    deleteCharacter(user:$user, campaign:$campaign, character:$character)\r\n  }\r\n`;\r\n\r\nexport const getClasses = gql`\r\n  query getClasses{\r\n    classes{\r\n      index\r\n      name\r\n    }\r\n  }\r\n`;\r\n\r\n/* export const getClass = gql`\r\n  query getClass($index:String){\r\n    class(index:$index){\r\n      index\r\n      name\r\n      proficiency_choices{\r\n        \r\n      }\r\n    }\r\n  }\r\n`; */\r\n\r\nexport const getRaces = gql`\r\n  query getRaces{\r\n    races{\r\n      index\r\n      name\r\n      speed\r\n      age\r\n      alignment\r\n      size_description\r\n      language_desc\r\n    }\r\n  }\r\n`;\r\n\r\nexport const currentSessionID = gql`\r\n  query currentSessionID($campaign:String){\r\n    getCurrentSessionID(campaign:$campaign)\r\n  }\r\n`;\r\n\r\nexport const createSession = gql`\r\n  mutation createSession($campaign:String, $user:String){\r\n    createSession(campaign:$campaign, user:$user){\r\n      _id\r\n    }\r\n  }\r\n`;\r\n\r\nexport const endSession = gql`\r\n  mutation endSession($campaign:String, $user:String){\r\n    endSession(campaign:$campaign, user:$user)\r\n  }\r\n`;\r\n\r\n//gameplay\r\n\r\nexport const changeCharacterHealth = gql`\r\n  mutation changeCharacterHealth($session:String, $character:String, $hp:Int){\r\n    changeCharacterHealth(session:$session, character:$character, hp:$hp)\r\n  }\r\n`;\r\n\r\nexport const currentSession = gql`\r\n  query currentSession($id:String){\r\n    session(id:$id){\r\n      _id\r\n      campaign\r\n      characters{\r\n        _id\r\n        position\r\n        character{\r\n          user\r\n          name\r\n          race\r\n          background\r\n          class\r\n          level\r\n          hp\r\n          cha\r\n          con\r\n          dex\r\n          int\r\n          str\r\n          wis\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const onSessionUpdate = gql`\r\n  subscription onSessionUpdate($id:String){\r\n    sessionUpdate(id:$id){\r\n      _id\r\n      campaign\r\n      characters{\r\n        _id\r\n        position\r\n        character{\r\n          user\r\n          name\r\n          race\r\n          background\r\n          class\r\n          level\r\n          hp\r\n          cha\r\n          con\r\n          dex\r\n          int\r\n          str\r\n          wis\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;","import React from 'react'\r\nimport '../../App.css'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function NavBar(props){\r\n\r\n    const current = window.location.pathname\r\n    \r\n    var home = <Link to=\"/\"  className=\"navLink-home\">\r\n            <h3> DND20 </h3>\r\n        </Link>\r\n    var campaigns =  <Link to=\"/Campaigns\" className=\"navLink\">\r\n            <p> Campaigns </p>\r\n        </Link>\r\n    var characters = <Link to=\"/Characters\" className=\"navLink\">\r\n            <p> Characters </p>\r\n        </Link>\r\n    var play = <Link to=\"/Play\" className=\"navLink\">\r\n            <p> Play </p>\r\n        </Link>\r\n    var account = <Link to=\"/MyAccount\" className=\"navLink\">\r\n            <p> My Account </p>\r\n        </Link>\r\n    var links = [home, campaigns, characters, play, account]\r\n\r\n    //maybe set current page's link's background to different colour\r\n\r\n    return(\r\n        <nav className=\"navbar\">\r\n            {links}\r\n        </nav>\r\n    )\r\n}","import React, { useContext } from 'react';\r\nimport {useState} from 'react';\r\nimport '../App.css';\r\nimport {UserContext} from '../misc/UserContext';\r\n\r\nfunction Home() {\r\n\t\r\n\tconst {user:me} = useContext(UserContext);\r\n\tconst [buttonText, setButtonText] = useState(\"Next\");\r\n\r\n\tfunction setButtonIfUser(){\r\n\t\tif(me){\r\n\t\t\tsetButtonText(me.name);\r\n\t\t}else{\r\n\t\t\tsetButtonText(\"no user\")\r\n\t\t}\r\n\t}\r\n\r\n\treturn(\r\n\t\t<>\r\n\t\t\t<br/>\r\n\t\t\t<img src=\"images/Nooth_DnD.png\" className=\"App-logo\" alt=\"logo\" />\r\n\t\t\t<br/>\r\n\t\t\t<h1 className=\"title\">\r\n\t\t\t\tDnD20\r\n\t\t\t</h1>\r\n\t\t\t<button name=\"showname\" onClick={() => setButtonIfUser()}>\r\n\t\t\t\t{buttonText}\r\n\t\t\t</button>\r\n\t\t\t<p>welcome to the app, gamer</p>\r\n\t\t</>\r\n\t)\r\n}\r\nexport default Home;\r\n","import React, {useContext} from 'react';\r\nimport {useMutation, useQuery} from '@apollo/client'\r\nimport '../../App.css';\r\nimport {UserContext} from '../../misc/UserContext'\r\nimport {getCampaign, renameCampaign, deleteCampaign} from '../../queries'\r\n\r\nexport default class EditCampaign extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.campaignID = this.props.campaignID\r\n        this.handleNameChange = this.handleNameChange.bind(this)\r\n        this.submit = this.submit.bind(this)\r\n        this.delete = this.delete.bind(this)\r\n        this.submitted = this.submitted.bind(this)\r\n        this.returnCampaign = this.returnCampaign.bind(this)\r\n        this.toggleID = this.toggleID.bind(this)\r\n        this.state = {submit:false, delete:false, loaded:false, campaign:null, name:\"\", showID:false}\r\n    }\r\n\r\n    handleNameChange(e){\r\n\t\te.preventDefault();\r\n\t\tthis.setState({name: e.target.value});\r\n\t}\r\n\r\n    submit(e){\r\n        this.setState({submit:true})\r\n        this.props.submit(e)\r\n    }\r\n\r\n    delete(){\r\n        this.setState({delete:true})\r\n    }\r\n\r\n    submitted(){\r\n        this.setState({submit:false, delete:false}, ()=>{this.props.back()})\r\n    }\r\n\r\n    returnCampaign(campaign){\r\n        console.log(\"selected campaign:\", campaign)\r\n        this.setState({campaign:campaign, name:campaign.name, loaded:true})\r\n    }\r\n\r\n    toggleID(){\r\n        this.setState({showID:!this.state.showID})\r\n    }\r\n\r\n    render() {\r\n        if(this.campaignID != null){\r\n            let isDM = false\r\n            if(this.state.campaign !== null){\r\n                isDM = (this.props.currentUserID===this.state.campaign.dm)\r\n            }\r\n            return(\r\n                <>\r\n                    {(!this.state.loaded && !this.state.submit) && <div>\r\n                        <LoadCampaign ID={this.campaignID} return={this.returnCampaign}/>\r\n                    </div>}\r\n                    {isDM && <>{(this.state.loaded && !this.state.submit) && <div><img src=\"images/Nooth_DnD.png\" className=\"App-logo\" alt=\"logo\" />\r\n                        <h1 className=\"title\">\r\n                            Edit Campaign \r\n                        </h1>\r\n                        {this.state.showID ? <><p>{this.campaignID}<button onClick={this.toggleID}>x</button></p></> : <button onClick={this.toggleID}>Show ID</button>}\r\n                        <button onClick={this.delete}>Delete this campaign</button>\r\n                        <form className=\"Form\" onSubmit={this.submit}>\r\n                            <div><label htmlFor=\"name\" className=\"tbLabel\">Campaign Name: \r\n                            <input type=\"name\" id=\"name\" name=\"name\" required={true} onChange={this.handleNameChange} value={this.state.name}/></label><br/></div>\r\n                            <input type=\"submit\" value=\"Submit\"/>\r\n                        </form><br/>\r\n                    </div>}</>}\r\n                    {/* this.state.leave && <LeaveCampaign/> */}\r\n                    {this.state.submit && <SubmitCampaign submitted={this.submitted} id={this.campaignID} name={this.state.name}/>} \r\n                    {this.state.delete && <DeleteCampaign submitted={this.submitted} dm={this.state.campaign.dm} campaignID={this.campaignID}/>}\r\n                    <button onClick={this.props.back}>Go Back</button>\r\n                </>\r\n            )\r\n        }else{\r\n            return (\r\n                <div>\r\n                    <p>Error: No Campaign</p>\r\n                    <button onClick={this.props.back}>Go Back</button>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nfunction LoadCampaign(props){\r\n    const {loading, data, error} = useQuery(getCampaign, {variables:{id:props.ID}, fetchPolicy:'network-only'})\r\n    while(loading){\r\n        return(<p>loading...</p>)\r\n    }\r\n    if(error){//no need to print errors here, as they wont. just if data && data.variable\r\n        console.log(error)\r\n        return(<p></p>)\r\n    }else{\r\n        props.return(data.campaign)\r\n        return(<p>done</p>)\r\n    }\r\n}\r\n\r\nfunction SubmitCampaign(props){\r\n    const [submitCampaign, {data, loading}] = useMutation(renameCampaign)\r\n    while(loading){\r\n        return(<p>loading</p>)\r\n    }\r\n    if(data===undefined){\r\n        submitCampaign({variables:{id:props.id, name:props.name}})\r\n    }else{\r\n        console.log(data)\r\n        props.submitted()\r\n    }\r\n    return null\r\n}\r\n\r\nfunction DeleteCampaign(props){\r\n    const {user:currentUser} = useContext(UserContext)\r\n    const [delCampaign, { data, loading }] = useMutation(deleteCampaign);//this method means it only gets added once\r\n\twhile(loading){\r\n\t\treturn(<p>Loading...</p>);\r\n\t}\r\n    if(data===undefined){\r\n        delCampaign({variables:{user:currentUser._id, dm:props.dm, campaign:props.campaignID}})\r\n        console.log('attempted deleteCampaign')\r\n    }else if(data != null){\r\n        console.log('done', data)\r\n        props.submitted()\r\n    }\r\n    return null\r\n}\r\n\r\nfunction LeaveCampaign(props){\r\n    const {user:currentUser} = useContext(UserContext)\r\n    const [tryLeaveCampaign, { data, loading }] = useMutation(/* leaveCampaign */);//this method means it only gets added once\r\n\twhile(loading){\r\n\t\treturn(<p>Loading...</p>);\r\n\t}\r\n    if(data===undefined){\r\n        tryLeaveCampaign({variables:{user:currentUser._id, dm:props.dm, campaign:props.campaignID}})\r\n        console.log('attempted deleteCampaign')\r\n    }else if(data != null){\r\n        console.log('done', data)\r\n        props.submitted()\r\n    }\r\n    return null\r\n}","import React, {useContext} from 'react'\r\nimport {UserContext} from '../../misc/UserContext'\r\n\r\nexport function DisplayCampaigns(props){//need to render the Campaign function for as many as there are in campaigns collection\r\n    const {user, refreshUser} = useContext(UserContext)\r\n    if(props.needsRefresh){\r\n        refreshUser()\r\n        props.refreshed()\r\n    }\r\n    const campaignList = user.campaigns.map((currentValue, index)=>{return <Campaign key={index} campaign={currentValue} changeSelected={props.changeSelected} purpose={props.purpose} currentUser={user._id}/>})\r\n    return (\r\n        <>\r\n            {(user.campaigns.length===0) && <p>You are not currently participating in any campaigns.</p>}\r\n            {(user.campaigns.length!==0) && campaignList}\r\n        </>\r\n    )\r\n}\r\n\r\nfunction Campaign(props){\r\n    console.log(props.campaign.dm, props.currentUser)\r\n    return (\r\n        <div className=\"campaign\">\r\n            <p key=\"c1\" className=\"campaign-name\">{props.campaign.name}</p>\r\n            <ul><li key=\"editButton\">\r\n                {props.purpose===\"Edit\" && <button onClick={() => props.changeSelected(props.campaign._id)}>\r\n                    Edit\r\n                </button>}\r\n                {props.purpose===\"Play\" && <button onClick={() => props.changeSelected(props.campaign.currentSession)}>\r\n                    Play\r\n                </button>}\r\n            </li></ul>\r\n        </div>\r\n    )\r\n}","import React, { useState, useContext, useEffect } from 'react';\r\nimport '../App.css';\r\nimport {useMutation} from '@apollo/client';\r\nimport {UserContext} from '../misc/UserContext';\r\nimport EditCampaign from '../components/campaigns/EditCampaign'\r\nimport {addCampaign, joinExistingCampaign} from '../queries'\r\nimport {DisplayCampaigns} from '../components/campaigns/DisplayCampaigns'\r\n\r\nexport default function Campaigns(props) {\r\n    const {user} = useContext(UserContext)\r\n    const [selected, changeSelected] = useState(null)\r\n    const [chosen, changeChosen] = useState(false)\r\n    const [wantsNew, changeWantsNew] = useState(false)\r\n    const [newName, changeNewName] = useState(\"\")\r\n    const [newSubmitted, changeNewSubmitted] = useState(false)\r\n    const [needsRefresh, changeNeedsRefresh] = useState(false)\r\n    const [wantsJoin, changeWantsJoin] = useState(false)\r\n    const [joinName, changeJoinName] = useState(\"\")\r\n    const [joinSubmitted, changeJoinSubmitted] = useState(false)\r\n    const [newCampaign, { data: addData, loading: addLoading }] = useMutation(addCampaign)\r\n    const [joinCampaign, {data: joinData, loading: joinLoading}] = useMutation(joinExistingCampaign)\r\n\r\n    useEffect(()=>{\r\n        if(wantsNew && newSubmitted && !addLoading && addData===undefined){\r\n            newCampaign({variables:{dm:user._id, name:newName}})\r\n        }\r\n        if(addData!==undefined){\r\n            changeWantsNew(false)\r\n            changeNewSubmitted(false)\r\n            changeChosen(true)\r\n            changeSelected(addData.addCampaign._id)\r\n        }\r\n    }, [addData, addLoading, newCampaign, newName, newSubmitted, user._id, wantsNew])\r\n\r\n    useEffect(()=>{\r\n        if(wantsJoin && joinSubmitted && !joinLoading && joinData===undefined){\r\n            joinCampaign({variables:{id:joinName, user:user._id}})//causes bad request error 400 for some reason, but works in playground\r\n        }\r\n        if(joinData!==undefined){\r\n            changeWantsJoin(false)\r\n            changeJoinSubmitted(false)\r\n            changeChosen(true)\r\n            changeSelected(joinData.joinCampaign._id)\r\n        }\r\n    }, [joinCampaign, joinData, joinLoading, joinName, joinSubmitted, user._id, wantsJoin])\r\n\r\n    return(<>\r\n        {!chosen && <><h1 className=\"title\"> Campaigns </h1>\r\n            {!wantsJoin && <button onClick={()=>{changeWantsJoin(!wantsJoin)}}>Join Campaign</button>}\r\n            {wantsJoin && <>\r\n                <input type=\"campaign\" onChange={(e)=>{e.preventDefault();changeJoinName(e.target.value)}} value={joinName}></input>\r\n                <button onClick={()=>{changeJoinSubmitted(!joinSubmitted)}}>Join</button>\r\n                <button onClick={()=>{changeWantsJoin(!wantsJoin)}}>x</button>\r\n            </>}\r\n            {(!wantsNew && !newSubmitted) && <button onClick={()=>{changeWantsNew(!wantsNew)}}>+</button>}\r\n            {(wantsNew && !newSubmitted) && <>\r\n                <form className=\"Form\" onSubmit={(e)=>{e.preventDefault();changeNewSubmitted(!newSubmitted)}}>\r\n                    <label htmlFor=\"name\" className=\"tbLabel\">Campaign Name: \r\n                    <input type=\"name\" id=\"name\" name=\"name\" required={true} onChange={(e)=>{e.preventDefault();changeNewName(e.target.value)}} value={newName}/></label>\r\n                    <input type=\"submit\" value=\"Submit\"/>\r\n                    <button onClick={()=>{changeWantsNew(!wantsNew)}}>x</button>\r\n                </form>\r\n            </>}<br/><br/>\r\n            <DisplayCampaigns needsRefresh={needsRefresh} refreshed={()=>{changeNeedsRefresh(false)}} changeSelected={(selected)=>{changeSelected(selected);changeChosen(true)}} purpose=\"Edit\"/>\r\n        </>}\r\n        {chosen && <EditCampaign currentUserID={user._id} campaignID={selected} submit={()=>{}} back={()=>{changeSelected(null);changeChosen(false);changeNeedsRefresh(true)}}/>}\r\n    </>)\r\n}","export function arrayToOptions(array, selected){\r\n    let newArray = []\r\n    if(array[0]!==undefined){\r\n        if(array[0].index!==undefined){\r\n            for (let i=0; i<array.length; i++){\r\n                newArray.push(<option value={array[i].index} key={i}>{array[i].name}</option>)\r\n            }\r\n        }else if (array[0]._id!==undefined){\r\n            for (let i=0; i<array.length; i++){\r\n                newArray.push(<option value={array[i]._id} key={i}>{array[i].name}</option>)\r\n            }\r\n        }\r\n    }\r\n    return newArray\r\n}","export function levelsAreBalanced(levels){//input an array [str, dex, con, int, wis, cha]\r\n    return (0 <= getRemainingLevelPoints(levels) && getRemainingLevelPoints(levels) <= 25) ? true : false\r\n}\r\n\r\nexport function getRemainingLevelPoints(levels){\r\n    let remaining = 25\r\n    levels.map((value)=>{\r\n        switch(value) {\r\n            case 0: case 1: case 2: case 3: case 4: case 5: case 6: case 7: case 8: case 9: case 10: case 11: case 12: case 13: case 14:\r\n                remaining -= (value - 8)\r\n                break\r\n            case 15:\r\n                remaining -= 8\r\n                break\r\n            case 16:\r\n                remaining -= 10\r\n                break\r\n            case 17:\r\n                remaining -= 13\r\n                break\r\n            case 18:\r\n                remaining -= 18\r\n                break\r\n            default:\r\n                remaining -= 100\r\n                break\r\n        }\r\n    })\r\n    return remaining\r\n}","import React, {useContext, useEffect, useState} from 'react'\r\nimport {useQuery, useMutation} from '@apollo/client'\r\nimport '../../App.css'\r\nimport {addCharacter, deleteCharacter, getCharacter, getClasses, getRaces, updateCharacterInfo, updateCharacterStats} from '../../queries'\r\nimport { arrayToOptions } from '../../functions/GeneralFunctions'\r\nimport { UserContext } from '../../misc/UserContext'\r\nimport { levelsAreBalanced, getRemainingLevelPoints } from '../../functions/CharacterCreation'\r\n\r\nexport default class EditCharacter extends React.Component {\r\n\r\n    static contextType = UserContext\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.user = this.props.currentUser\r\n        this.characterID = this.props.characterID\r\n        this.returnLoaded = this.returnLoaded.bind(this)\r\n        this.submittedNew = this.submittedNew.bind(this)\r\n        this.state = {character:null, submitNew:false, submitGeneral:false, name:\"\", race:\"\", bg:\"\", campaign:\"\"}\r\n    }\r\n\r\n    returnLoaded(character){\r\n        this.setState({character:character})\r\n    }\r\n\r\n    submittedNew(){\r\n        this.setState({submitNew:false, name:\"\", race:\"\", bg:\"\", campaign:\"\"})\r\n        this.props.back()\r\n    }\r\n\r\n    render(){\r\n        return(<>\r\n            <button className=\"backButton\" onClick={this.props.back}>Back</button>{/* vvv unloaded and unentered*/}\r\n            {/* ((this.characterID!==null)&&(this.state.character===null)) ? <LoadCharacter ID={this.characterID} return={this.returnLoaded}/> : <CharacterInfo submitNewGeneral={this.submitNewGeneral} user={this.user} character={this.state.character} new={this.state.character===null}/> */}\r\n            <CharacterInfo submitNew={this.submitNew} submitGeneral={this.submitGeneral} user={this.user} character={this.state.character} new={this.state.character===null} back={this.props.back}/>\r\n            {((this.characterID!==null)&&(this.state.character===null)) && <LoadCharacter ID={this.characterID} return={this.returnLoaded}/>}\r\n        </>)\r\n    }\r\n}\r\n\r\nfunction LoadCharacter(props){\r\n    console.log(props.ID)\r\n    const {loading, data, error} = useQuery(getCharacter, {variables:{id:props.ID}, fetchPolicy:'network-only'})\r\n    while(loading){\r\n        return(<p>loading...</p>)\r\n    }\r\n    if(error){//no need to print errors here, as they wont. just if data && data.variable\r\n        console.log(error)\r\n        return(<p></p>)\r\n    }else{\r\n        console.log(data)\r\n        props.return(data.character)\r\n        return(<p>done</p>)\r\n    }\r\n}\r\n\r\nfunction CharacterInfo(props){\r\n    console.log('character info', props.new)\r\n    const {loading:raceLoading, data:raceData} = useQuery(getRaces)\r\n    const {loading:classLoading, data:classData} = useQuery(getClasses)\r\n    const [page, changePage] = useState(0)\r\n    while(classLoading||raceLoading){\r\n        return(<p>Loading...</p>)\r\n    }\r\n    let pages = [\r\n        (props.new ? <NewGeneralInfo races={raceData.races} user={props.user} submit={props.submitNew} back={props.back}/> : <ExistingGeneralInfo character={props.character} classes={classData.classes} submit={props.submitGeneral} back={props.back}/>),\r\n    ]\r\n    pages.forEach(element => {\r\n        if(element!==pages[page]){\r\n            element = null\r\n        }\r\n    })\r\n    //make a set of buttons to change page with the index of the pages array\r\n    return (<div>\r\n        {pages}\r\n    </div>)\r\n}\r\n\r\nfunction NewGeneralInfo(props){\r\n    const {user} = useContext(UserContext)\r\n    const [name, changeName] = useState(\"\")\r\n    const [background, changeBG] = useState(\"\")\r\n    const [race, changeRace] = useState(\"\")\r\n    const [campaign, changeCampaign] = useState(\"\")\r\n    const [createNew, {loading:newLoading, data:newData}] = useMutation(addCharacter)\r\n    console.log(user.campaigns)\r\n    useEffect(()=>{\r\n        if (user.campaigns[0]!==undefined){\r\n            console.log(user.campaigns[0]._id)\r\n            changeCampaign(user.campaigns[0]._id)\r\n        }\r\n        if (props.races[0]!==undefined){\r\n            console.log(props.races[0].index)\r\n            changeRace(props.races[0].index)\r\n        }\r\n    },[props.races, user.campaigns])\r\n    while(newLoading){\r\n        return(<p>Loading...</p>)\r\n    }\r\n    if(newData!==undefined){\r\n        props.back()\r\n    }\r\n    return (<form onSubmit={()=>{console.log(user._id, campaign, name, race, background);createNew({variables:{user:user._id, campaign:campaign, name:name, race:race, background:background}})}}>\r\n        <input type=\"submit\" /><br/>\r\n        <label htmlFor=\"name\" className=\"tbLabel\">Name: \r\n        <input type=\"name\" id=\"name\" name=\"name\" required={true} onChange={(e)=>{e.preventDefault();changeName(e.target.value)}} value={name}/></label>\r\n        <CampaignSelect id=\"campaign\" campaigns={user.campaigns} changeCampaign={changeCampaign}/><br/>\r\n        <label htmlFor=\"bg\" className=\"tbLabel\">Background Info / Lore: \r\n        <textarea id=\"bg\" name=\"bg\" onChange={(e)=>{e.preventDefault();changeBG(e.target.value)}} value={background} rows=\"4\" cols=\"50\" maxLength=\"500\"/></label><br/>\r\n        <RaceSelect id=\"race\" races={props.races} changeRace={changeRace}/><br/>\r\n    </form>)\r\n}\r\n\r\nfunction ExistingGeneralInfo(props){\r\n    const {user} = useContext(UserContext)\r\n    const character = props.character\r\n    const [campaign, changeCampaign] = useState(character.campaign)\r\n    const [charClass, changeClass] = useState(character.class)\r\n    const [str, changeStr] = useState(character.str)\r\n    const [dex, changeDex] = useState(character.dex)\r\n    const [con, changeCon] = useState(character.con)\r\n    const [int, changeInt] = useState(character.int)\r\n    const [wis, changeWis] = useState(character.wis)\r\n    const [cha, changeCha] = useState(character.cha)//need to implement for maximum levels etc.\r\n    const [rename, toggleRename] = useState(false)\r\n    const [name, changeName] = useState(character.name)\r\n    const [delCharacter, {loading:delLoading, data:delData}] = useMutation(deleteCharacter, {variables:{character:character._id, user:character.user, campaign:character.campaign}})\r\n    const [updateInfo, {loading:infoLoading, data:infoData}] = useMutation(updateCharacterInfo, {variables:{id:character._id, name:name, campaign:campaign}})\r\n    const [updateStats, {loading:statsLoading, data:statsData}] = useMutation(updateCharacterStats, {variables:{id:character._id, class:charClass, cha:parseInt(cha), con:parseInt(con), str:parseInt(str), dex:parseInt(dex), int:parseInt(int), wis:parseInt(wis)}})\r\n    const [badStats, setBadStats] = useState(false)\r\n    const levels = [str, dex, con, int, wis, cha]\r\n    const [remainingLevelPoints, setRemaining] = useState(getRemainingLevelPoints(levels))\r\n\r\n    useEffect(()=>{//only runs once, because props.classes never changes\r\n        if (props.classes[0]!==undefined){\r\n            changeClass(props.classes[0].index)\r\n        }\r\n    },[props.classes])\r\n\r\n    while(delLoading||infoLoading||statsLoading){\r\n        if(delLoading){\r\n            console.log(character._id, character.user, character.campaign)\r\n        }\r\n        return(<p>loading</p>)\r\n    }\r\n    if(delData!==undefined||infoData!==undefined||statsData!==undefined){\r\n        props.back()\r\n    }\r\n    return (<><div><h2>{character.name}</h2>\r\n        <button onClick={delCharacter}>Delete Character</button></div>\r\n        {rename ? <>\r\n            <form onSubmit={updateInfo}>\r\n                <label htmlFor=\"name\" className=\"tbLabel\">Name: \r\n                <input type=\"text\" id=\"name\" name=\"name\" required={true} onChange={(e)=>{e.preventDefault();changeName(e.target.value)}} value={name}/></label>\r\n                <CampaignSelect id=\"campaign\" current={campaign} campaigns={user.campaigns} changeCampaign={changeCampaign}/>\r\n                <input type=\"submit\"/><button onClick={()=>{toggleRename(!rename)}}>Cancel</button>\r\n            </form>\r\n        </> : <><button onClick={()=>{toggleRename(!rename)}}>Rename/ChangeCampaign</button><br/></>}\r\n        <form class=\"Form\" onSubmit={()=>{if(levelsAreBalanced([str, dex, con, int, wis, cha])){updateStats();setBadStats(false)}else{setBadStats(true)}}}>\r\n            <input type=\"submit\" /><br/>\r\n            <ClassSelect id=\"class\" current={charClass} classes={props.classes} changeClass={changeClass}/><br/>\r\n            <label htmlFor=\"str\" className=\"tbLabel\">Str: \r\n            <input type=\"number\" id=\"str\" name=\"str\" min=\"1\" max=\"20\" required={true} onChange={(e)=>{const newLevelsStr = [str + (Number.parseInt(e.target.value) - str), dex, con, int, wis, cha];e.preventDefault();if(levelsAreBalanced(newLevelsStr)){changeStr(Number.parseInt(e.target.value));setRemaining(getRemainingLevelPoints(newLevelsStr))}else{e.target.innerText = str}}} value={str}/></label>\r\n            <label htmlFor=\"dex\" className=\"tbLabel\">Dex: \r\n            <input type=\"number\" id=\"dex\" name=\"dex\" min=\"1\" max=\"20\" required={true} onChange={(e)=>{const newLevelsDex = [str, dex + (Number.parseInt(e.target.value) - dex), con, int, wis, cha];e.preventDefault();if(levelsAreBalanced(newLevelsDex)){changeDex(Number.parseInt(e.target.value));setRemaining(getRemainingLevelPoints(newLevelsDex))}else{e.target.innerText = dex}}} value={dex}/></label>\r\n            <label htmlFor=\"con\" className=\"tbLabel\">Con: \r\n            <input type=\"number\" id=\"con\" name=\"con\" min=\"1\" max=\"20\" required={true} onChange={(e)=>{const newLevelsCon = [str, dex, con + (Number.parseInt(e.target.value) - con), int, wis, cha];e.preventDefault();if(levelsAreBalanced(newLevelsCon)){changeCon(Number.parseInt(e.target.value));setRemaining(getRemainingLevelPoints(newLevelsCon))}else{e.target.innerText = con}}} value={con}/></label>\r\n            <label htmlFor=\"int\" className=\"tbLabel\">Int: \r\n            <input type=\"number\" id=\"int\" name=\"int\" min=\"1\" max=\"20\" required={true} onChange={(e)=>{const newLevelsInt = [str, dex, con, int + (Number.parseInt(e.target.value) - int), wis, cha];e.preventDefault();if(levelsAreBalanced(newLevelsInt)){changeInt(Number.parseInt(e.target.value));setRemaining(getRemainingLevelPoints(newLevelsInt))}else{e.target.innerText = int}}} value={int}/></label>\r\n            <label htmlFor=\"wis\" className=\"tbLabel\">Wis: \r\n            <input type=\"number\" id=\"wis\" name=\"wis\" min=\"1\" max=\"20\" required={true} onChange={(e)=>{const newLevelsWis = [str, dex, con, int, wis + (Number.parseInt(e.target.value) - wis), cha];e.preventDefault();if(levelsAreBalanced(newLevelsWis)){changeWis(Number.parseInt(e.target.value));setRemaining(getRemainingLevelPoints(newLevelsWis))}else{e.target.innerText = wis}}} value={wis}/></label>\r\n            <label htmlFor=\"cha\" className=\"tbLabel\">Cha: \r\n            <input type=\"number\" id=\"cha\" name=\"cha\" min=\"1\" max=\"20\" required={true} onChange={(e)=>{const newLevelsCha = [str, dex, con, int, wis, cha + (Number.parseInt(e.target.value) - cha)];e.preventDefault();if(levelsAreBalanced(newLevelsCha)){changeCha(Number.parseInt(e.target.value));setRemaining(getRemainingLevelPoints(newLevelsCha))}else{e.target.innerText = cha}}} value={cha}/></label>\r\n            <p>{remainingLevelPoints} points remaining</p>\r\n        </form>\r\n        {badStats && <p>bad stats</p>}\r\n    </>)\r\n}\r\n\r\nfunction Proficiencies(props){\r\n    const charClass = props.class\r\n    \r\n    return (<>\r\n        <p>Choose two:</p>\r\n        <form>\r\n            \r\n        </form>\r\n    </>)\r\n}\r\n\r\nfunction ClassSelect(props){\r\n    let classOptions = arrayToOptions(props.classes, props.current)\r\n    return(\r\n        <label htmlFor=\"class\" className=\"tbLabel\">Class:\r\n            <select id=\"classes\" required={true} name=\"classes\" onChange={(e)=>{props.changeClass(props.classes[e.target.selectedIndex].index)}} defaultValue={props.current}>\r\n                {classOptions}\r\n            </select>\r\n        </label>\r\n    )\r\n}\r\n\r\nfunction RaceSelect(props){\r\n    const [selected, changeSelected] = useState(0)\r\n    let raceOptions = arrayToOptions(props.races)\r\n    return(\r\n        <div><label htmlFor=\"races\" required={true} className=\"tbLabel\">Race:\r\n            <select id=\"races\" name=\"races\" selectedIndex=\"0\" onChange={(e)=>{props.changeRace(props.races[e.target.selectedIndex].index); changeSelected(e.target.selectedIndex)}}>\r\n                {raceOptions}\r\n            </select></label>\r\n            <p>{props.races[selected].alignment}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction CampaignSelect(props){\r\n    const campaignOptions = arrayToOptions(props.campaigns, props.current)\r\n    return(<>\r\n        <label htmlFor=\"campaigns\" className=\"tbLabel\">Campaign:\r\n            <select id=\"campaigns\" name=\"campaigns\" selectedIndex=\"0\" required={true} onChange={(e)=>{props.changeCampaign(props.campaigns[e.target.selectedIndex]._id)}} defaultValue={props.current}>\r\n                {campaignOptions}\r\n            </select>\r\n        </label>\r\n    </>)\r\n}\r\n","import { useQuery, useMutation, useSubscription } from '@apollo/client'\r\nimport React, {useContext, useEffect} from 'react'\r\nimport {UserContext} from '../../misc/UserContext'\r\nimport { currentSessionID, createSession, endSession } from '../../queries'\r\n\r\nexport function DisplayCharacters(props){//need to render the Campaign function for as many as there are in campaigns collection\r\n    const {user, refreshUser} = useContext(UserContext)\r\n    if(props.needsRefresh){\r\n        refreshUser()\r\n        props.refreshed()\r\n    }\r\n    const [startSession, {data: createSessionData}] = useMutation(createSession)\r\n    const [finishSession, {data: endSessionData}] = useMutation(endSession)\r\n    const currentUser = user\r\n    const characterList = currentUser.characters.map((currentValue, index)=>{return <Character key={index} character={currentValue} changeSelected={props.changeSelected} purpose={props.purpose} currentUser={user} campaign={currentUser.campaigns.find(element => element._id===currentValue.campaign)}/>})\r\n    if(props.purpose===\"Play\"){\r\n        characterList.push(currentUser.campaigns.map(element=>{\r\n            return (<>\r\n                {user._id===element.dm && element.currentSession===null && <button onClick={() => startSession({variables:{campaign:element._id, user:user._id}})}>\r\n                    Begin {element.name}\r\n                </button>}\r\n                {user._id===element.dm && element.currentSession!==null && <button onClick={() => finishSession({variables:{campaign:element._id, user:user._id}})}>\r\n                    End {element.name} session\r\n                </button>}\r\n            </>)\r\n        }))\r\n    }\r\n    return (\r\n        <div>\r\n            {props.purpose===\"Play\" && <button onClick={()=>{refreshUser()}}>Refresh</button>}\r\n            {(user.characters.length===0) && <p>You do not currently have any characters.</p>}\r\n            {(user.campaigns.length!==0) && characterList}\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction Character(props){\r\n    return (\r\n        <div className=\"character\">\r\n            <p key=\"c1\" className=\"characer-name\">{props.character.name}</p>\r\n            <ul>\r\n                <li key=\"mainButton\">\r\n                    {props.purpose===\"Edit\" && <button onClick={() => props.changeSelected(props.character._id)}>\r\n                        Edit\r\n                    </button>}\r\n                    {(props.purpose===\"Play\" && props.campaign.currentSession!==null) && <button onClick={() => props.changeSelected(props.campaign.currentSession)}>\r\n                        Play\r\n                    </button>}\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}","import React, { useContext } from 'react';\r\nimport '../App.css';\r\nimport {UserContext} from '../misc/UserContext';\r\nimport EditCharacter from '../components/characters/EditCharacter'\r\nimport {DisplayCharacters} from '../components/characters/DisplayCharacters'\r\n\r\nexport default class Characters extends React.Component {\r\n\r\n    static contextType = UserContext;\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {selected:null, chosen:false, needsRefresh:false, needsSubmit:false}\r\n        this.handleEditSubmit = this.handleEditSubmit.bind(this)\r\n        this.changeSelected = this.changeSelected.bind(this)\r\n        this.clearSelected = this.clearSelected.bind(this)\r\n        this.wantsNew = this.wantsNew.bind(this)\r\n        this.refreshed = this.refreshed.bind(this)\r\n    }\r\n\r\n    handleEditSubmit(e){\r\n        e.preventDefault();\r\n    }\r\n\r\n    changeSelected(selected){\r\n        this.setState({selected:selected, chosen:true})\r\n    }\r\n\r\n    clearSelected(){//need to update context\r\n        this.setState({selected:null, chosen:false, needsRefresh:true})\r\n    }\r\n    wantsNew(){\r\n        this.setState({chosen:true})\r\n    }\r\n    refreshed(){\r\n        this.setState({needsRefresh:false})\r\n    }\r\n\r\n    render() {\r\n        const {user} = this.context\r\n        return(\r\n            <>\r\n                <h1 className=\"title\"> Characters </h1>\r\n                {!this.state.chosen && <>\r\n                    <button onClick={this.wantsNew}>New Character</button>\r\n                    <DisplayCharacters needsRefresh={this.state.needsRefresh} refreshed={this.refreshed} changeSelected={this.changeSelected} purpose=\"Edit\"/> \r\n                </>}\r\n                {this.state.chosen && <EditCharacter currentUser={user} characterID={this.state.selected} submit={this.handleEditSubmit} back={this.clearSelected}/>}\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import { useMutation } from '@apollo/client'\r\nimport React, { useContext } from 'react'\r\nimport { UserContext } from '../../misc/UserContext'\r\nimport { changeCharacterHealth } from '../../queries'\r\n\r\nexport function PartyCharacters(props){\r\n    const {user} = useContext(UserContext)\r\n    const session = props.session\r\n    const myCharacter = session.characters.map((currentValue, index)=>{if(currentValue.character.user===user._id){return <CharacterInfo key={index} character={currentValue} sessionID={session._id} currentUser={user._id}/>}})\r\n    const partyCharacters = session.characters.map((currentValue, index)=>{if(currentValue.character.user!==user._id){return <CharacterInfo key={index} character={currentValue} sessionID={session._id} currentUser={user._id}/>}})\r\n    return (\r\n        <>\r\n            {myCharacter}\r\n            {(session.characters.length===0) && <p>No characters in this party.</p>}\r\n            {(session.characters.length!==0) && partyCharacters}\r\n        </>\r\n    )\r\n}\r\n\r\nfunction CharacterInfo(props){\r\n    const character = props.character.character\r\n    const [changeHealth, {data}] = useMutation(changeCharacterHealth, {variables:{session:props.sessionID, character:props.character._id}})\r\n    return (<div className=\"campaign\">\r\n        <p key=\"c1\" className=\"campaign-name\">{character.name}</p>\r\n        <ul>\r\n            <li key=\"hp\">\r\n                <p>{character.hp}</p>\r\n                {character.user===props.currentUser && <>\r\n                    <button onClick={()=>{changeHealth({variables:{hp:character.hp+1}})}}>+</button>\r\n                    <button onClick={()=>{changeHealth({variables:{hp:character.hp-1}})}}>-</button>\r\n                </>}\r\n            </li>\r\n        </ul>\r\n    </div>)\r\n}","import React, { useContext, useEffect, useState } from 'react';\r\nimport { useSubscription, Subscription, useQuery } from '@apollo/client';\r\nimport '../App.css';\r\nimport {UserContext} from '../misc/UserContext'\r\nimport {currentSession, getUserID, onSessionUpdate} from '../queries'\r\nimport {PartyCharacters} from '../components/play/party'\r\nimport { DisplayCharacters } from '../components/characters/DisplayCharacters';\r\n\r\nexport default function Play(props) {\r\n    const {user} = useContext(UserContext)\r\n    const [selected, changeSelected] = useState(null)\r\n    const [needsRefresh, setNeedsRefresh] = useState(false)\r\n    const [needsRefetch, setNeedsRefetch] = useState(true)\r\n\r\n    return (<header className=\"App-header\">\r\n        {selected!==null ? <PlayView sessionID={selected} needsRefetch={needsRefetch} refetched={()=>{setNeedsRefetch(false)}}/> : <DisplayCharacters needsRefresh={needsRefresh} refreshed={()=>{setNeedsRefresh(true)}} changeSelected={changeSelected} purpose=\"Play\"/>}\r\n    </header>)\r\n}\r\n\r\nfunction PlayView(props){\r\n    const{data:queryData, loading:queryLoading, refetch} = useQuery(currentSession, {variables:{id:props.sessionID}})\r\n    const {data:updateData, loading:updateLoading} = useSubscription(onSessionUpdate, {variables:{id:props.sessionID}})\r\n    const [data, changeData] = useState(undefined)\r\n\r\n    useEffect(()=>{\r\n        if(props.needsRefetch){\r\n            refetch()\r\n            props.refetched()\r\n        }\r\n        if(updateData===undefined){\r\n            if(queryLoading){\r\n                console.log(\"loading\")\r\n            }\r\n            if(queryData!==undefined){\r\n                console.log(queryData.session)\r\n                changeData(queryData.session)\r\n            }\r\n        }else{\r\n            console.log(updateData.sessionUpdate)\r\n            changeData(updateData.sessionUpdate)\r\n        }\r\n    }, [queryLoading, queryData, updateLoading, updateData, refetch, props])\r\n\r\n    return (\r\n        <>\r\n            <h2>Play the game</h2>\r\n            {data!==undefined ? <PartyCharacters session={data}/> : <p>No characters in this party.</p>}\r\n        </>\r\n    )\r\n}\r\n\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport { useLazyQuery } from '@apollo/client';\r\nimport '../App.css';\r\nimport {UserContext} from '../misc/UserContext'\r\nimport {getUserID} from '../queries'\r\n\r\nexport default function MyAccount(props) {\r\n    const {user} = useContext(UserContext)\r\n\r\n    return (\r\n        <>\r\n\r\n        </>\r\n    )\r\n}","/**\r\n * This is the file that handles routing for the entire application\r\n */\r\nimport React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport '../../App.css';\r\nimport Home from '../../pages/Home';\r\nimport Campaigns from '../../pages/Campaigns';\r\nimport Characters from '../../pages/Characters'\r\nimport Play from '../../pages/Play'\r\nimport MyAccount from '../../pages/MyAccount'\r\n\r\nfunction PageSwitch(props){\r\n    return (\r\n        <header className=\"App-header\">\r\n            <Switch> {/* The Switch decides which component to show based on the current URL.*/}\r\n                <Route exact path='/' component={Home}/>\r\n                <Route exact path='/Campaigns' component={Campaigns}/>\r\n                <Route exact path='/Characters' component={Characters}/>\r\n                <Route exact path='/Play' component={Play}/>\r\n                <Route exact path='/MyAccount' component={MyAccount}/>\r\n            </Switch>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default PageSwitch;\r\n","import React from 'react';\r\nimport {NetworkStatus, useQuery} from '@apollo/client';\r\nimport {UserContext} from '../../misc/UserContext'\r\nimport {getUserByID} from '../../queries';\r\nimport '../../App.css';\r\nimport NavBar from './navbar'\r\nimport PageSwitch from './PageSwitch'\r\n\r\n\r\nexport default function Main(props){\r\n\r\n\tconst {loading, data, error, refetch, networkStatus} = useQuery(getUserByID, {variables:{id:props.id}, notifyOnNetworkStatusChange:true, fetchPolicy:'network-only'});\r\n\t\r\n\twhile(networkStatus===NetworkStatus.refetch){\r\n\t\treturn (<><NavBar currentUser={data.user}/><header><p>Retrieving your data...</p></header></>)\r\n\t}\r\n\twhile(loading){\r\n\t\treturn (<header><p>Loading...</p></header>);\r\n\t}\r\n\tif(error){\r\n\t\treturn (<p>There was an error. Please refresh the page and try again.</p>);\r\n\t}\r\n\tif(data !== undefined){\r\n\t\t//console.log(\"Logged in user\", data);\r\n\t\tconst context = { user:data.user, refreshUser:refetch }\r\n\t\treturn (\r\n\t\t\t<><NavBar currentUser={data.user}/>\r\n\t\t\t<UserContext.Provider value={context}>\r\n\t\t\t\t<PageSwitch/>\r\n\t\t\t</UserContext.Provider></>\r\n\t\t);\r\n\t}\r\n}\r\n","import React, {useEffect} from 'react';\r\nimport {useQuery, useMutation} from '@apollo/client'\r\nimport '../App.css';\r\nimport { Link } from \"react-router-dom\";\r\nimport {addUser, getUserID} from '../queries';\r\n\r\n\r\n\r\nclass Register extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\t\tthis.Registered = this.props.Registered;\r\n\t\tthis.handleNameChange = this.handleNameChange.bind(this);\r\n\t\tthis.handleEmailChange = this.handleEmailChange.bind(this);\r\n\t\tthis.handleUsernameChange = this.handleUsernameChange.bind(this);\r\n\t\tthis.handlePasswordChange = this.handlePasswordChange.bind(this);\r\n\t\tthis.handleRegisterAttempt = this.handleRegisterAttempt.bind(this);\r\n\t\tthis.state = {badForm:false, registered:false, name:\"\", email:\"\", username:\"\", password:\"\"};\r\n    }\r\n\thandleNameChange(e){\r\n\t\te.preventDefault();\r\n\t\tthis.setState({name: e.target.value});\r\n\t}\r\n\thandleEmailChange(e){\r\n\t\te.preventDefault();\r\n\t\tthis.setState({email: e.target.value});\r\n\t}\r\n\thandleUsernameChange(e){\r\n        e.preventDefault();\r\n        this.setState({username: e.target.value});\r\n    }\r\n    handlePasswordChange(e){\r\n        e.preventDefault();\r\n        this.setState({password: e.target.value});\r\n    }\r\n\r\n    handleRegisterAttempt(e){\r\n        e.preventDefault();\r\n\t\tif(!!this.state.name && !!this.state.email && !!this.state.username && !!this.state.password){\r\n\t\t\tthis.setState({registered: true});\r\n\t\t}else{\r\n\t\t\tthis.setState({badForm: true})\r\n\t\t}\r\n\t\t//need check all fields are filled out\r\n    }\r\n\r\n    render() {\r\n        return(//obviously needs more added\r\n            <>\r\n                {!this.state.registered && \r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<img src=\"images/Nooth_DnD.png\" width='300' alt=\"logo\"/>\r\n\t\t\t\t\t\t<h1 className=\"title\">\r\n\t\t\t\t\t\t\tSign Up\r\n\t\t\t\t\t\t</h1>\r\n\t\t\t\t\t\t<form className=\"Form\" onSubmit={this.handleRegisterAttempt}>\r\n\t\t\t\t\t\t\t<label htmlFor=\"fullname\" className=\"tbLabel\">Full Name: \r\n\t\t\t\t\t\t\t<input type=\"name\" id=\"fullname\" name=\"fullname\" required={true} onChange={this.handleNameChange} value={this.state.name}/></label><br/>\r\n\t\t\t\t\t\t\t<label htmlFor=\"email\" className=\"tbLabel\" name=\"tbLabel\">Email: \r\n\t\t\t\t\t\t\t<input type=\"email\" id=\"email\" name=\"email\" required={true} onChange={this.handleEmailChange} value={this.state.email}/></label><br/>\r\n\t\t\t\t\t\t\t<label htmlFor=\"username\" className=\"tbLabel\" name=\"tbLabel\">Username: \r\n\t\t\t\t\t\t\t<input type=\"username\" id=\"username\" name=\"username\" required={true} onChange={this.handleUsernameChange} value={this.state.username}/></label><br/>\r\n\t\t\t\t\t\t\t<label htmlFor=\"password\" className=\"tbLabel\" name=\"tbLabel\">Password: \r\n\t\t\t\t\t\t\t<input type=\"password\" id=\"password\" name=\"password\" required={true} onChange={this.handlePasswordChange} value={this.state.password}/></label><br/>\r\n\t\t\t\t\t\t\t<input type=\"submit\" value=\"Submit\"/>\r\n\t\t\t\t\t\t</form><br/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t}\r\n\t\t\t\t{this.state.registered && <AddUser name={this.state.name} email={this.state.email} username={this.state.username} password={this.state.password}/>}\r\n\t\t\t\t{this.state.badForm && <p>Please make sure all boxes are filled in</p>/**this check seems redundant with the boxes being marked as required */}\r\n\t\t\t\t<button onClick={this.Registered} name=\"next\" variant=\"outlined\">\r\n\t\t\t\t\tGo back to login\r\n\t\t\t\t</button>\r\n            </>\r\n\t\t)\r\n    }\r\n}\r\n\r\nfunction AddUser(props){\r\n\tconst {data:queryData, loading:queryLoading} = useQuery(getUserID, {variables: {username:props.username, password:props.password}}, {fetchPolicy:'network-only'});//looking for existing user\r\n\tconst [newUser, { data, loading }] = useMutation(addUser);\r\n\twhile (queryLoading||loading) {console.log(\"loading\");return(<p>Loading...</p>)}\r\n\tconsole.log(queryData.getUserID)\r\n\tif(queryData!==undefined){\r\n\t\tif(queryData.getUserID===null && !queryLoading){//apparently here cannot read 'undefined' user, but that same method works in login???\r\n\t\t\tconsole.log(\"user doesn't already exist\")\r\n\t\t\tif(data===undefined){\r\n\t\t\t\tconsole.log(\"adding user\")\r\n\t\t\t\tnewUser({variables:{name:props.name, email:props.email, username:props.username, password:props.password}});\r\n\t\t\t}else if(data!=null){\r\n\t\t\t\tconsole.log(data)\r\n\t\t\t\treturn(<>\r\n\t\t\t\t\t<p>Welcome, {props.name}</p>\r\n\t\t\t\t</>);\r\n\t\t\t}\r\n\t\t}else if(queryData.getUserID!==null && !queryLoading){\r\n\t\t\tconsole.log(\"user already exists\", queryData.getUserID)\r\n\t\t\treturn (\r\n\t\t\t\t<p>Error: User already exists, try again</p>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\treturn <p></p>\r\n}\r\n\r\nexport default Register;","import React, { useEffect, useState } from 'react';\r\nimport { useLazyQuery } from '@apollo/client';\r\nimport '../App.css';\r\nimport Register from './Register';\r\nimport {getUserID} from '../queries'\r\n\r\nexport default function Login(props) {\r\n    const [id, setID] = useState(null)\r\n    const [username, setUsername] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [registered, toggleRegistered] = useState(true)\r\n    const [stayLoggedIn, setStay] = useState(false)\r\n    const [badLogin, toggleBadLogin] = useState(false)\r\n    const [getID, {data, loading, called}] = useLazyQuery(getUserID, {fetchPolicy:'network-only'})\r\n\r\n    useEffect(()=>{//if the client recieves an id upon request, the user may continue. if not, they are stuck\r\n        if(!loading&&(id!==null)){\r\n            props.handleLogin(id)\r\n        }\r\n        if(!loading && called && id===null){\r\n            if(data!==undefined){\r\n                setID(data.getUserID)\r\n            }else{\r\n                toggleBadLogin(true)\r\n            }\r\n        }\r\n    }, [loading, called, id, data, props])\r\n\r\n    return (\r\n        <header className=\"App-header\">\r\n            {registered && //show login form if not logged in\r\n                (<><div><form id=\"Form\" className=\"Form\" onSubmit={(e)=>{e.preventDefault();getID({variables:{username:username, password:password}})}}>\r\n                        <p> Please enter your username and password </p>\r\n                        <label htmlFor=\"user\">Username: \r\n                            <input type=\"username\" name=\"user\" id=\"user\" required={true} autoFocus={true} value={username} onChange={(e)=>{e.preventDefault();setUsername(e.target.value)}}/>\r\n                        </label><br />\r\n                        <label htmlFor=\"pass\">Password: \r\n                            <input type=\"password\" name=\"pass\" id=\"pass\" required={true} value={password} onChange={(e)=>{e.preventDefault();setPassword(e.target.value);}}/>\r\n                        </label><br />\r\n                        <input type=\"submit\" value=\"Submit\" variant=\"outlined\"/>\r\n                        <label htmlFor=\"rememberLogin\"> Remember me\r\n                            <input type=\"checkbox\" id=\"rememberLogin\" name=\"rememberLogin\" value={stayLoggedIn}/>{/*not implemented yet*/}\r\n                        </label>\r\n                    </form>\r\n                    <button name=\"next2\" variant=\"outlined\" onClick={()=>{toggleRegistered(false)}}>\r\n                            register\r\n                    </button>\r\n                </div>\r\n                {badLogin && <p>Could not find a user to match input username and password.</p>}</>)\r\n            }\r\n            {loading && <p>loading...</p>}\r\n            {!registered && <Register Registered={()=>{toggleRegistered(true)}}/>}\r\n        </header>\r\n    )\r\n}\r\n\r\n/* class Login extends React.Component {//old version (class)\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.HandleLogin = this.props.HandleLogin;\r\n        this.SetLogin = this.props.SetLogin;\r\n        this.BadLogin = this.props.BadLogin;\r\n        this.Registered = this.Registered.bind(this);\r\n        this.NotRegistered = this.NotRegistered.bind(this);\r\n        this.handleLoginAttempt = this.handleLoginAttempt.bind(this);\r\n        this.handleUsernameChange = this.handleUsernameChange.bind(this);\r\n        this.handlePasswordChange = this.handlePasswordChange.bind(this);\r\n        this.state = {registered:true, loggedIn: false, username: \"\", password: \"\"};\r\n    }\r\n\r\n    handleUsernameChange(e){\r\n        e.preventDefault(); \r\n        this.setState({username: e.target.value});\r\n        //console.log(this.state.username);\r\n    }\r\n    handlePasswordChange(e){\r\n        e.preventDefault();\r\n        this.setState({password: e.target.value});\r\n        //console.log(this.state.password);\r\n    }\r\n\r\n    handleLoginAttempt(e){//logs the form\r\n        e.preventDefault();\r\n        this.HandleLogin(this.state.username, this.state.password);\r\n        this.setState({loggedIn: true});\r\n        this.SetLogin();\r\n    }\r\n\r\n    NotRegistered(){\r\n        this.setState({registered: false});\r\n    }\r\n\r\n    Registered(){\r\n        this.setState({registered: true});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <header className=\"App-header\">\r\n                {(!this.state.loggedIn && this.state.registered) && //show login form if not logged in\r\n                    (<div><form id=\"Form\" className=\"Form\" onSubmit={this.handleLoginAttempt}>\r\n                        <p> Please enter your username and password </p>\r\n                        <label htmlFor=\"user\">Username: \r\n                            <input type=\"username\" name=\"user\" id=\"user\" required={true} autoFocus={true} onChange={this.handleUsernameChange} value={this.state.username}/>\r\n                        </label><br />\r\n                        <label htmlFor=\"pass\">Password: \r\n                            <input type=\"password\" name=\"pass\" id=\"pass\" required={true} onChange={this.handlePasswordChange} value={this.state.password}/>\r\n                        </label><br />\r\n                        <input type=\"submit\" value=\"Submit\" variant=\"outlined\"/>\r\n                        <label htmlFor=\"rememberLogin\"> Remember me\r\n                            <input type=\"checkbox\" id=\"rememberLogin\" name=\"rememberLogin\" value={this.state.loggedIn}//not implemented yet, checkbox doesnt even return anything on submit\r\n                        </label>\r\n                    </form>\r\n                    <button name=\"next2\" variant=\"outlined\" onClick={this.NotRegistered}>\r\n                            register\r\n                    </button>\r\n                    {this.BadLogin && <p>Could not find a user to match input username and password.</p>}\r\n                    </div>)\r\n                }\r\n                {(!this.state.registered && !this.state.loggedIn) && <Register Registered={this.Registered}/>}\r\n            </header>\r\n        )\r\n    }\r\n} */","import React, { useState } from 'react';\r\nimport './App.css';\r\nimport Main from './components/main/Main.js';\r\nimport Login from './pages/Login';\r\n\r\nfunction App(){\r\n    \r\n    const [userID, setUserID] = useState(null)\r\n    //add function to save ID/token to local storage here\r\n    return (\r\n        <div className=\"App\">\r\n            {userID ? <Main id={userID}/> : <Login handleLogin={setUserID}/>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom';\nimport './index.css';\nimport App from './App';\n//import reportWebVitals from './reportWebVitals';\n\nimport {ApolloClient, ApolloProvider, InMemoryCache, split, HttpLink} from '@apollo/client';\nimport {getMainDefinition} from '@apollo/client/utilities'\nimport {WebSocketLink} from '@apollo/client/link/ws'\n\n//from Apollo docs\nconst wsLink = new WebSocketLink({\n  uri: `ws://${window.location.hostname}:8080/graphql`,//just host, not hostname, for build version (to include port by default)\n  options: {reconnect:true}\n})\nconst httpLink = new HttpLink({\n  uri: `http://${window.location.hostname}:8080/graphql`\n});\nconst splitLink = split(({query})=>{\n  const definition = getMainDefinition(query)\n  return (\n    definition.kind === 'OperationDefinition' && definition.operation === 'subscription'//uses wsLink if subscription operation\n  )\n}, wsLink, httpLink)\n\n\n//create apollo client\nexport const apolloClient = new ApolloClient({\n  link: splitLink,\n  cache: new InMemoryCache(),\n  onError: ({ networkError, graphQLErrors }) => {\n    console.log('graphQLErrors', graphQLErrors)\n    console.log('networkError', networkError)\n  },\n});\n\nReactDOM.render(\n  <ApolloProvider client = {apolloClient}>\n    <BrowserRouter>\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"/><App />\n    </BrowserRouter>\n  </ApolloProvider>,\n  document.getElementById('root')\n);\n\n\n/*\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();*/"],"sourceRoot":""}