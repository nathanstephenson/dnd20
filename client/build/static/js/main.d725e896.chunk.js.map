{"version":3,"sources":["misc/UserContext.js","queries.js","components/main/navbar.js","pages/Home.js","components/campaigns/EditCampaign.js","components/campaigns/DisplayCampaigns.js","pages/Campaigns.js","functions/GeneralFunctions.js","functions/CharacterCreation.js","components/characters/EditCharacter.js","components/characters/DisplayCharacters.js","pages/Characters.js","components/play/party.js","pages/Play.js","pages/MyAccount.js","components/main/PageSwitch.js","components/main/Main.js","pages/Register.js","pages/Login.js","App.js","index.js"],"names":["UserContext","React","createContext","user","refreshUser","toggleNavBar","getUserID","gql","doesUserExist","getUserByID","addUser","getCampaign","getCampaignPlayers","addCampaign","joinExistingCampaign","leaveCampaign","deleteCampaign","renameCampaign","getCharacter","addCharacter","updateCharacterInfo","updateCharacterStats","updateCharacterSkills","deleteCharacter","getClasses","getClass","getRaces","createSession","endSession","changeCharacterHealth","currentSession","onSessionUpdate","NavBar","props","window","location","pathname","useState","night","toggleNight","buttonText","changeButtonText","style","document","querySelector","toggleNightMode","className","onClick","setProperty","links","to","Home","me","useContext","setButtonText","src","alt","name","EditCampaign","campaignID","handleNameChange","bind","submit","delete","submitted","returnCampaign","toggleID","state","loaded","campaign","showID","e","preventDefault","this","setState","target","value","back","isDM","currentUserID","dm","session","LoadCampaign","ID","return","RemovePlayers","onSubmit","htmlFor","type","id","required","onChange","LeaveCampaign","SubmitCampaign","DeleteCampaign","Component","useQuery","variables","fetchPolicy","loading","data","error","console","log","useMutation","submitCampaign","undefined","currentUser","delCampaign","_id","tryLeaveCampaign","notifyOnNetworkStatusChange","refetch","removePlayer","waitingResponse","players","updatePlayers","useEffect","map","index","characters","filter","char","String","DisplayCampaigns","needsRefresh","refreshed","campaignList","campaigns","currentValue","Campaign","changeSelected","purpose","length","Campaigns","selected","chosen","changeChosen","wantsNew","changeWantsNew","newName","changeNewName","newSubmitted","changeNewSubmitted","changeNeedsRefresh","wantsJoin","changeWantsJoin","joinName","changeJoinName","joinSubmitted","changeJoinSubmitted","newCampaign","addData","addLoading","joinCampaign","joinData","joinLoading","arrayToOptions","array","newArray","i","push","levelsAreBalanced","levels","getRemainingLevelPoints","remaining","EditCharacter","character","updateCharacter","characterID","reloadCharacter","CharacterInfo","reload","NewGeneralInfo","changeName","background","changeBG","race","changeRace","changeCampaign","raceLoading","raceData","createNew","newLoading","newData","races","CampaignSelect","rows","cols","maxLength","RaceSelect","classLoading","classData","page","changePage","pages","ExistingGeneralInfo","classes","Proficiencies","class","charClass","changeClass","str","changeStr","dex","changeDex","con","changeCon","int","changeInt","wis","changeWis","cha","changeCha","rename","toggleRename","delCharacter","delLoading","delData","updateInfo","infoLoading","infoData","parseInt","updateStats","statsLoading","statsData","badStats","setBadStats","remainingLevelPoints","setRemaining","current","ClassSelect","min","max","newLevelsStr","Number","innerText","newLevelsDex","newLevelsCon","newLevelsInt","newLevelsWis","newLevelsCha","skills","defaults","changeDefaults","options","changeOptions","updated","changeUpdated","proficiencies","proficiency_choices","ProficienciesChooseFrom","from","includes","chosenOptions","updateChosen","Array","prototype","concat","updateSkills","profOptions","defaultChecked","checkbox","newer","newnumber","checked","choose","for","classOptions","selectedIndex","defaultValue","raceOptions","alignment","campaignOptions","DisplayCharacters","startSession","finishSession","characterList","cam","find","element","Character","Characters","needsSubmit","handleEditSubmit","clearSelected","context","PartyCharacters","partyCharacters","sessionID","changeHealth","hp","Play","setNeedsRefresh","needsRefetch","setNeedsRefetch","PlayView","refetched","queryData","queryLoading","useSubscription","updateData","updateLoading","changeData","sessionUpdate","MyAccount","username","contextType","PageSwitch","exact","path","component","Main","networkStatus","NetworkStatus","Provider","AddUser","newUser","email","password","Register","Registered","handleEmailChange","handleUsernameChange","handlePasswordChange","handleRegisterAttempt","badForm","registered","width","variant","Login","setID","setUsername","setPassword","toggleRegistered","stayLoggedIn","badLogin","toggleBadLogin","useLazyQuery","getID","called","handleLogin","autoFocus","App","userID","setUserID","wsLink","WebSocketLink","uri","hostname","reconnect","httpLink","HttpLink","splitLink","split","query","definition","getMainDefinition","kind","operation","apolloClient","ApolloClient","link","cache","InMemoryCache","onError","networkError","graphQLErrors","ReactDOM","render","client","content","getElementById"],"mappings":"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","file":"static/js/main.d725e896.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const UserContext = React.createContext({\r\n    user: null,\r\n    refreshUser: () => {},\r\n    toggleNavBar: () => {},\r\n})","import {gql} from '@apollo/client';\r\n\r\n//queries for client, import from here to necessary paths\r\n/* export const getUsers = gql`\r\n  query getAllUsers{\r\n    users {\r\n      name\r\n      username\r\n      password\r\n    }\r\n  }\r\n`; */\r\n/* export const getUser = gql`\r\n  query getUser($username:String, $password:String){\r\n    user(username: $username, password: $password){\r\n      _id\r\n      name\r\n      campaigns{\r\n        _id\r\n        name\r\n        dm\r\n      }\r\n      characters{\r\n        _id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`; */\r\n\r\nexport const getUserID = gql`\r\n  query getUserID($username:String, $password:String){\r\n    getUserID(username:$username, password:$password)\r\n  }\r\n`;\r\n\r\nexport const doesUserExist = gql`\r\n  query doesUserExist($username:String){\r\n    doesUserExist(username:$username)\r\n  }\r\n`;\r\n\r\nexport const getUserByID = gql`\r\n  query getUserByID($id: String){\r\n    user(id: $id){\r\n      _id\r\n      name\r\n      username\r\n      campaigns{\r\n        _id\r\n        name\r\n        dm\r\n        currentSession\r\n      }\r\n      characters{\r\n        _id\r\n        name\r\n        campaign\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const addUser = gql`\r\n  mutation addUser($name:String, $username:String, $password:String){\r\n    addUser(name:$name, username:$username, password:$password){\r\n      name\r\n    }\r\n  }\r\n`;\r\n\r\nexport const currentUser = gql`\r\n  subscription currentUser($id:String){\r\n    updateUser(id:$id){\r\n      _id\r\n      name\r\n      permissions\r\n      campaigns{\r\n        _id\r\n        name\r\n        dm\r\n        currentSession\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const getCampaignID = gql`\r\n  query getCampaignID($name:String){\r\n    campaign(name:$name){\r\n      _id\r\n    }\r\n  }\r\n`;\r\n\r\n\r\nexport const getCampaign = gql`\r\n  query getCampaign($id:String){\r\n    campaign(id:$id){\r\n      name\r\n      dm\r\n      characters{\r\n        name\r\n        user{\r\n          _id\r\n          name\r\n          username\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const getCampaignPlayers = gql`\r\n  query getCampaignPlayers($campaign:String){\r\n    players(campaign:$campaign){\r\n      _id\r\n      name\r\n      characters{\r\n        name\r\n        campaign\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const addCampaign = gql`\r\n  mutation addCampaign($dm:String, $name:String){\r\n    addCampaign(dm:$dm, name:$name){\r\n      _id\r\n    }\r\n  }\r\n`;\r\n\r\nexport const joinExistingCampaign = gql`\r\n  mutation joinExistingCampaign($id:String, $user:String){\r\n      joinCampaign(id:$id, user:$user){\r\n        _id\r\n        name\r\n      }\r\n  }\r\n`;\r\n\r\nexport const leaveCampaign = gql`\r\n  mutation leaveCampaign($campaign:String, $user:String){\r\n      leaveCampaign(campaign:$campaign, user:$user){\r\n        name\r\n      }\r\n  }\r\n`;\r\n\r\nexport const deleteCampaign = gql`\r\n  mutation deleteCampaign($user:String, $dm:String, $campaign:String){\r\n    deleteCampaign(user:$user, dm:$dm, campaign:$campaign)\r\n  }\r\n`;\r\n\r\nexport const renameCampaign = gql`\r\n  mutation renameCampaign($id:String, $name:String){\r\n    renameCampaign(id:$id, name:$name){\r\n      name\r\n    }\r\n  }\r\n`;\r\n\r\nexport const getCharacter = gql`\r\n  query getCharacter($id:String){\r\n    character(id:$id){\r\n      _id\r\n      user{\r\n        _id\r\n      }\r\n      campaign\r\n      name\r\n      race\r\n      background\r\n      class\r\n      level\r\n      hp\r\n      cha\r\n      con\r\n      dex\r\n      int\r\n      str\r\n      wis\r\n      skills\r\n    }\r\n  }\r\n`;\r\n\r\nexport const addCharacter = gql`\r\n  mutation addCharacter($user:String, $campaign:String, $name:String, $race:String, $background:String){\r\n    addCharacter(user:$user, campaign:$campaign, name:$name, race:$race, background:$background){\r\n      _id\r\n      name\r\n    }\r\n  }\r\n`;\r\n\r\nexport const updateCharacterInfo = gql`\r\n  mutation updateCharacterInfo($id:String, $name:String, $campaign:String){\r\n    updateCharacterInfo(id:$id, name:$name, campaign:$campaign){\r\n      _id\r\n      name\r\n    }\r\n  }\r\n`;\r\n\r\nexport const updateCharacterStats = gql`\r\n  mutation updateCharacterStats($id:String, $class:String, $cha:Int, $con:Int, $dex:Int, $int:Int, $str:Int, $wis:Int){\r\n    updateCharacterStats(id:$id, class:$class, cha:$cha, con:$con, dex:$dex, int:$int, str:$str, wis:$wis){\r\n      _id\r\n      campaign\r\n      name\r\n    }\r\n  }\r\n`;\r\n\r\nexport const updateCharacterSkills = gql`\r\n  mutation updateCharacterSkills($id:String, $skills:[String]){\r\n    updateCharacterSkills(id:$id, skills:$skills){\r\n      _id\r\n      campaign\r\n      name\r\n    }\r\n  }\r\n`;\r\n\r\nexport const deleteCharacter = gql`\r\n  mutation deleteCharacter($user:String, $campaign:String, $character:String){\r\n    deleteCharacter(user:$user, campaign:$campaign, character:$character)\r\n  }\r\n`;\r\n\r\nexport const getClasses = gql`\r\n  query getClasses{\r\n    classes{\r\n      index\r\n      name\r\n    }\r\n  }\r\n`;\r\n\r\nexport const getClass = gql`\r\n  query getClass($index:String){\r\n    class(index:$index){\r\n      index\r\n      name\r\n      proficiencies{\r\n        index\r\n        name\r\n      }\r\n      proficiency_choices{\r\n        choose\r\n        from{\r\n          index\r\n          name\r\n          type\r\n          races{\r\n            index\r\n          }\r\n        }\r\n      }\r\n      starting_equipment_options{\r\n        choose\r\n        from{\r\n          equipment{\r\n            index\r\n            name\r\n            damage{\r\n              damage_dice\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const getRaces = gql`\r\n  query getRaces{\r\n    races{\r\n      index\r\n      name\r\n      speed\r\n      age\r\n      alignment\r\n      size_description\r\n      language_desc\r\n    }\r\n  }\r\n`;\r\n\r\nexport const currentSessionID = gql`\r\n  query currentSessionID($campaign:String){\r\n    getCurrentSessionID(campaign:$campaign)\r\n  }\r\n`;\r\n\r\nexport const createSession = gql`\r\n  mutation createSession($campaign:String, $user:String){\r\n    createSession(campaign:$campaign, user:$user){\r\n      _id\r\n    }\r\n  }\r\n`;\r\n\r\nexport const endSession = gql`\r\n  mutation endSession($campaign:String, $user:String){\r\n    endSession(campaign:$campaign, user:$user)\r\n  }\r\n`;\r\n\r\n//gameplay\r\n\r\nexport const changeCharacterHealth = gql`\r\n  mutation changeCharacterHealth($session:String, $character:String, $hp:Int){\r\n    changeCharacterHealth(session:$session, character:$character, hp:$hp)\r\n  }\r\n`;\r\n\r\nexport const currentSession = gql`\r\n  query currentSession($id:String){\r\n    session(id:$id){\r\n      _id\r\n      campaign\r\n      characters{\r\n        _id\r\n        position\r\n        character{\r\n          user{\r\n            _id\r\n          }\r\n          name\r\n          race\r\n          background\r\n          class\r\n          level\r\n          hp\r\n          cha\r\n          con\r\n          dex\r\n          int\r\n          str\r\n          wis\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const onSessionUpdate = gql`\r\n  subscription onSessionUpdate($id:String){\r\n    sessionUpdate(id:$id){\r\n      _id\r\n      campaign\r\n      characters{\r\n        _id\r\n        position\r\n        character{\r\n          user{\r\n            _id\r\n          }\r\n          name\r\n          race\r\n          background\r\n          class\r\n          level\r\n          hp\r\n          cha\r\n          con\r\n          dex\r\n          int\r\n          str\r\n          wis\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;","import React, { useState } from 'react'\r\nimport '../../App.css'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function NavBar(props){\r\n\r\n    const current = window.location.pathname\r\n\r\n    const [night, toggleNight] = useState(false)\r\n    const [buttonText, changeButtonText] = useState(\"D\")\r\n    const style = document.querySelector(':root').style\r\n    var toggleNightMode = <span className=\"nav-button\"><button onClick={()=>{\r\n        if(night){\r\n            style.setProperty('--bg-primary', 'var(--bg-day)')\r\n            style.setProperty('--navTextColour', '#e6e6e6')\r\n            toggleNight(false)\r\n            changeButtonText(\"D\")\r\n        }else{\r\n            style.setProperty('--bg-primary', 'var(--bg-night)')\r\n            style.setProperty('--navTextColour', '#e6e6e6')\r\n            toggleNight(true)\r\n            changeButtonText(\"N\")\r\n        }\r\n    }} className=\"nav-link\">{buttonText}</button></span>\r\n    \r\n    var home = <li className=\"nav-title\"><Link to=\"/\" className=\"nav-link\">\r\n            <span className=\"nav-title-text\"> DND20 </span>\r\n        </Link></li>\r\n    var campaigns =  <li className=\"nav-item\"><Link to=\"/Campaigns\" className=\"nav-link\">\r\n            <span className=\"nav-text\"> Campaigns </span>\r\n        </Link></li>\r\n    var characters = <li className=\"nav-item\"><Link to=\"/Characters\" className=\"nav-link\">\r\n            <span className=\"nav-text\"> Characters </span>\r\n        </Link></li>\r\n    var play = <li className=\"nav-item\"><Link to=\"/Play\" className=\"nav-link\">\r\n           <span className=\"nav-text\"> Play </span>\r\n        </Link></li>\r\n    var account = <li className=\"nav-item\"><Link to=\"/MyAccount\" className=\"nav-link\">\r\n            <span className=\"nav-text\"> My Account </span>\r\n        </Link></li>\r\n    var links = [home, campaigns, characters, play, account, toggleNightMode]\r\n\r\n    //maybe set current page's link's background to different colour\r\n\r\n    return(\r\n        <nav className=\"navbar\">\r\n            <ul className=\"navbar-nav\">{links}</ul>\r\n        </nav>\r\n    )\r\n}","import React, { useContext } from 'react';\r\nimport {useState} from 'react';\r\nimport '../App.css';\r\nimport {UserContext} from '../misc/UserContext';\r\n\r\nfunction Home() {\r\n\t\r\n\tconst {user:me} = useContext(UserContext);\r\n\tconst [buttonText, setButtonText] = useState(\"Next\");\r\n\r\n\tfunction setButtonIfUser(){\r\n\t\tif(me){\r\n\t\t\tsetButtonText(me.name);\r\n\t\t}else{\r\n\t\t\tsetButtonText(\"no user\")\r\n\t\t}\r\n\t}\r\n\r\n\treturn(\r\n\t\t<>\r\n\t\t\t<br/>\r\n\t\t\t<img src=\"images/Nooth_DnD.png\" className=\"App-logo\" alt=\"logo\" />\r\n\t\t\t<br/>\r\n\t\t\t<h1 className=\"title\">\r\n\t\t\t\tDnD20\r\n\t\t\t</h1>\r\n\t\t\t<button name=\"showname\" onClick={() => setButtonIfUser()}>\r\n\t\t\t\t{buttonText}\r\n\t\t\t</button>\r\n\t\t\t<p>welcome to the app, gamer</p>\r\n\t\t</>\r\n\t)\r\n}\r\nexport default Home;\r\n","import React, {useContext, useEffect, useState} from 'react';\r\nimport {useMutation, useQuery} from '@apollo/client'\r\nimport '../../App.css';\r\nimport {UserContext} from '../../misc/UserContext'\r\nimport {getCampaign, getCampaignPlayers, renameCampaign, deleteCampaign, leaveCampaign} from '../../queries'\r\n\r\nexport default class EditCampaign extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.campaignID = this.props.campaignID\r\n        this.handleNameChange = this.handleNameChange.bind(this)\r\n        this.submit = this.submit.bind(this)\r\n        this.delete = this.delete.bind(this)\r\n        this.submitted = this.submitted.bind(this)\r\n        this.returnCampaign = this.returnCampaign.bind(this)\r\n        this.toggleID = this.toggleID.bind(this)\r\n        this.state = {submit:false, delete:false, loaded:false, campaign:null, name:\"\", showID:false}\r\n    }\r\n\r\n    handleNameChange(e){\r\n\t\te.preventDefault();\r\n\t\tthis.setState({name: e.target.value});\r\n\t}\r\n\r\n    submit(e){\r\n        this.setState({submit:true})\r\n        this.props.submit(e)\r\n    }\r\n\r\n    delete(){\r\n        this.setState({delete:true})\r\n    }\r\n\r\n    submitted(){\r\n        this.setState({submit:false, delete:false}, ()=>{this.props.back()})\r\n    }\r\n\r\n    returnCampaign(campaign){\r\n        //console.log(\"selected campaign:\", campaign)\r\n        this.setState({campaign:campaign, name:campaign.name, loaded:true})\r\n    }\r\n\r\n    toggleID(){\r\n        this.setState({showID:!this.state.showID})\r\n    }\r\n\r\n    render() {\r\n        if(this.campaignID != null){\r\n            let isDM = false\r\n            let isActive = false\r\n            if(this.state.campaign !== null){\r\n                isDM = (this.props.currentUserID===this.state.campaign.dm)\r\n                isActive = (this.state.campaign.session!==null)\r\n            }\r\n            return(\r\n                <>\r\n                    {(!this.state.loaded && !this.state.submit) && <div>\r\n                        <LoadCampaign ID={this.campaignID} return={this.returnCampaign}/>\r\n                    </div>}\r\n                    {(this.state.loaded && !this.state.submit) && <><img src=\"images/Nooth_DnD.png\" className=\"App-logo\" alt=\"logo\" />\r\n                        <h1 className=\"title\">\r\n                            Campaign: {this.state.campaign.name}\r\n                        </h1>\r\n                        {isDM && <>{<div>{<><RemovePlayers ID={this.campaignID}/><br/></>}\r\n                        {this.state.showID ? <><p>{this.campaignID}<button onClick={this.toggleID}>x</button></p></> : <button onClick={this.toggleID}>Show ID</button>}\r\n                        <button onClick={this.delete}>Delete this campaign</button><br/><br/>\r\n                        <form className=\"Form\" onSubmit={this.submit}>\r\n                            <div><label htmlFor=\"name\" className=\"tbLabel\">Campaign Name: \r\n                            <input type=\"name\" id=\"name\" name=\"name\" required={true} onChange={this.handleNameChange} value={this.state.name}/></label><br/></div>\r\n                            <input type=\"submit\" value=\"Submit\"/>\r\n                        </form><br/>\r\n                    </div>}</>}</>}\r\n                    {(!isDM ) && <LeaveCampaign ID={this.campaignID} back={this.props.back}/>}\r\n                    {this.state.submit && <SubmitCampaign submitted={this.submitted} id={this.campaignID} name={this.state.name}/>} \r\n                    {this.state.delete && <DeleteCampaign submitted={this.submitted} dm={this.state.campaign.dm} campaignID={this.campaignID}/>}\r\n                    <button onClick={this.props.back}>Go Back</button>\r\n                </>\r\n            )\r\n        }else{\r\n            return (\r\n                <div>\r\n                    <p>Error: No Campaign</p>\r\n                    <button onClick={this.props.back}>Go Back</button>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nfunction LoadCampaign(props){\r\n    const {loading, data, error} = useQuery(getCampaign, {variables:{id:props.ID}, fetchPolicy:'network-only'})\r\n    while(loading){\r\n        return(<p>loading...</p>)\r\n    }\r\n    if(error){//no need to print errors here, as they wont. just if data && data.variable\r\n        console.log(error)\r\n        return(<p></p>)\r\n    }else{\r\n        props.return(data.campaign)\r\n        return(<p>done</p>)\r\n    }\r\n}\r\n\r\nfunction SubmitCampaign(props){\r\n    const [submitCampaign, {data, loading}] = useMutation(renameCampaign)\r\n    while(loading){\r\n        return(<p>loading</p>)\r\n    }\r\n    if(data===undefined){\r\n        submitCampaign({variables:{id:props.id, name:props.name}})\r\n    }else{\r\n        console.log(data)\r\n        props.submitted()\r\n    }\r\n    return null\r\n}\r\n\r\nfunction DeleteCampaign(props){\r\n    const {user:currentUser} = useContext(UserContext)\r\n    const [delCampaign, { data, loading }] = useMutation(deleteCampaign);//this method means it only gets added once\r\n\twhile(loading){\r\n\t\treturn(<p>Loading...</p>);\r\n\t}\r\n    if(data===undefined){\r\n        delCampaign({variables:{user:currentUser._id, dm:props.dm, campaign:props.campaignID}})\r\n        console.log('attempted deleteCampaign')\r\n    }else if(data != null){\r\n        console.log('done', data)\r\n        props.submitted()\r\n    }\r\n    return null\r\n}\r\n\r\nfunction LeaveCampaign(props){\r\n    const {user:currentUser} = useContext(UserContext)\r\n    const [tryLeaveCampaign, { data, loading }] = useMutation(leaveCampaign);\r\n\twhile(loading){\r\n\t\treturn(<p>Loading...</p>);\r\n\t}\r\n    return <button onClick={()=>{tryLeaveCampaign({variables:{user:currentUser._id, campaign:props.ID}});props.back()}}>Leave Campaign</button>\r\n}\r\n\r\nfunction RemovePlayers(props){\r\n    const {user} = useContext(UserContext)\r\n    const { data, loading, refetch } = useQuery(getCampaignPlayers, {variables:{campaign:props.ID}, notifyOnNetworkStatusChange:'true'})\r\n    const [removePlayer, { data:response, loading:waitingResponse }] = useMutation(leaveCampaign)//this method means it only gets added once\r\n    const [players, updatePlayers] = useState([])\r\n    useEffect(()=>{\r\n        if(loading||waitingResponse){\r\n            console.log(\"loading\")\r\n        }\r\n        if(data!==undefined && loading===false){\r\n            if(data!==null){\r\n                console.log(data.players)\r\n                if(data.players===null){\r\n                    refetch()\r\n                }else{\r\n                    updatePlayers(data.players.map((value, index)=>{\r\n                        if(value._id!==user._id){\r\n                            const matchingChar = value.characters.filter(char => String(char.campaign)===props.ID)[0]\r\n                            return <button onClick={()=>{removePlayer({variables:{user:value._id, campaign:props.ID}});refetch()}}>Remove {value.name}</button>\r\n                        }else{return null}\r\n                    }))\r\n                }\r\n            }\r\n        }\r\n    },[data, loading])\r\n    return <>{players}</>\r\n}","import React, {useContext} from 'react'\r\nimport {UserContext} from '../../misc/UserContext'\r\n\r\nexport function DisplayCampaigns(props){//need to render the Campaign function for as many as there are in campaigns collection\r\n    const {user, refreshUser} = useContext(UserContext)\r\n    if(props.needsRefresh){\r\n        refreshUser()\r\n        props.refreshed()\r\n    }\r\n    const campaignList = user.campaigns.map((currentValue, index)=>{\r\n        return <Campaign key={index} campaign={currentValue} changeSelected={props.changeSelected} purpose={props.purpose} currentUser={user._id}/>\r\n    })\r\n    return (\r\n        <>\r\n            {(user.campaigns.length===0) && <p>You are not currently participating in any campaigns.</p>}\r\n            {(user.campaigns.length!==0) && campaignList}\r\n        </>\r\n    )\r\n}\r\n\r\nfunction Campaign(props){\r\n    return (\r\n        <div className=\"campaign\">\r\n            <p key=\"c1\" className=\"campaign-name\">{props.campaign.name}</p>\r\n            <ul><li key=\"editButton\">\r\n                {props.purpose===\"Edit\" && <button onClick={() => props.changeSelected(props.campaign._id)}>\r\n                    ...\r\n                </button>}\r\n            </li></ul>\r\n        </div>\r\n    )\r\n}","import React, { useState, useContext, useEffect } from 'react';\r\nimport '../App.css';\r\nimport {useMutation} from '@apollo/client';\r\nimport {UserContext} from '../misc/UserContext';\r\nimport EditCampaign from '../components/campaigns/EditCampaign'\r\nimport {addCampaign, joinExistingCampaign} from '../queries'\r\nimport {DisplayCampaigns} from '../components/campaigns/DisplayCampaigns'\r\n\r\nexport default function Campaigns(props) {\r\n    const {user} = useContext(UserContext)\r\n    const [selected, changeSelected] = useState(null)\r\n    const [chosen, changeChosen] = useState(false)\r\n    const [wantsNew, changeWantsNew] = useState(false)\r\n    const [newName, changeNewName] = useState(\"\")\r\n    const [newSubmitted, changeNewSubmitted] = useState(false)\r\n    const [needsRefresh, changeNeedsRefresh] = useState(false)\r\n    const [wantsJoin, changeWantsJoin] = useState(false)\r\n    const [joinName, changeJoinName] = useState(\"\")\r\n    const [joinSubmitted, changeJoinSubmitted] = useState(false)\r\n    const [newCampaign, { data: addData, loading: addLoading }] = useMutation(addCampaign)\r\n    const [joinCampaign, {data: joinData, loading: joinLoading}] = useMutation(joinExistingCampaign)\r\n\r\n    useEffect(()=>{\r\n        if(wantsNew && newSubmitted && !addLoading && addData===undefined){\r\n            newCampaign({variables:{dm:user._id, name:newName}})\r\n        }\r\n        if(addData!==undefined){\r\n            changeWantsNew(false)\r\n            changeNewSubmitted(false)\r\n            changeChosen(true)\r\n            changeSelected(addData.addCampaign._id)\r\n        }\r\n    }, [addData, addLoading, newCampaign, newName, newSubmitted, user._id, wantsNew])\r\n\r\n    useEffect(()=>{\r\n        if(wantsJoin && joinSubmitted && !joinLoading && joinData===undefined){\r\n            joinCampaign({variables:{id:joinName, user:user._id}})//causes bad request error 400 for some reason, but works in playground\r\n        }\r\n        if(joinData!==undefined){\r\n            changeWantsJoin(false)\r\n            changeJoinSubmitted(false)\r\n            changeChosen(true)\r\n            changeSelected(joinData.joinCampaign._id)\r\n        }\r\n    }, [joinCampaign, joinData, joinLoading, joinName, joinSubmitted, user._id, wantsJoin])\r\n\r\n    return(<>\r\n        {!chosen && <><h1 className=\"title\"> Campaigns </h1>\r\n            {!wantsJoin && <button onClick={()=>{changeWantsJoin(!wantsJoin)}}>Join Campaign</button>}\r\n            {wantsJoin && <>\r\n                <input type=\"campaign\" onChange={(e)=>{e.preventDefault();changeJoinName(e.target.value)}} value={joinName}></input>\r\n                <button onClick={()=>{changeJoinSubmitted(!joinSubmitted)}}>Join</button>\r\n                <button onClick={()=>{changeWantsJoin(!wantsJoin)}}>x</button>\r\n            </>}\r\n            {(!wantsNew && !newSubmitted) && <button onClick={()=>{changeWantsNew(!wantsNew)}}>+</button>}\r\n            {(wantsNew && !newSubmitted) && <>\r\n                <form className=\"Form\" onSubmit={(e)=>{e.preventDefault();changeNewSubmitted(!newSubmitted)}}>\r\n                    <label htmlFor=\"name\" className=\"tbLabel\">Campaign Name: \r\n                    <input type=\"name\" id=\"name\" name=\"name\" required={true} onChange={(e)=>{e.preventDefault();changeNewName(e.target.value)}} value={newName}/></label>\r\n                    <input type=\"submit\" value=\"Submit\"/>\r\n                    <button onClick={()=>{changeWantsNew(!wantsNew)}}>x</button>\r\n                </form>\r\n            </>}<br/><br/>\r\n            <DisplayCampaigns needsRefresh={needsRefresh} refreshed={()=>{changeNeedsRefresh(false)}} changeSelected={(selected)=>{changeSelected(selected);changeChosen(true)}} purpose=\"Edit\"/>\r\n        </>}\r\n        {chosen && <EditCampaign currentUserID={user._id} campaignID={selected} submit={()=>{}} back={()=>{changeSelected(null);changeChosen(false);changeNeedsRefresh(true)}}/>}\r\n    </>)\r\n}","export function arrayToOptions(array, selected){\r\n    let newArray = []\r\n    if(array[0]!==undefined){\r\n        if(array[0].index!==undefined){\r\n            for (let i=0; i<array.length; i++){\r\n                newArray.push(<option value={array[i].index} key={i}>{array[i].name}</option>)\r\n            }\r\n        }else if (array[0]._id!==undefined){\r\n            for (let i=0; i<array.length; i++){\r\n                newArray.push(<option value={array[i]._id} key={i}>{array[i].name}</option>)\r\n            }\r\n        }\r\n    }\r\n    return newArray\r\n}","export function levelsAreBalanced(levels){//input an array [str, dex, con, int, wis, cha]\r\n    return (0 <= getRemainingLevelPoints(levels) && getRemainingLevelPoints(levels) <= 25) ? true : false\r\n}\r\n\r\nexport function getRemainingLevelPoints(levels){\r\n    let remaining = 25\r\n    levels.map((value)=>{\r\n        switch(value) {\r\n            case 0: case 1: case 2: case 3: case 4: case 5: case 6: case 7: case 8: case 9: case 10: case 11: case 12: case 13: case 14:\r\n                remaining -= (value - 8)\r\n                break\r\n            case 15:\r\n                remaining -= 8\r\n                break\r\n            case 16:\r\n                remaining -= 10\r\n                break\r\n            case 17:\r\n                remaining -= 13\r\n                break\r\n            case 18:\r\n                remaining -= 18\r\n                break\r\n            default:\r\n                remaining -= 100\r\n                break\r\n        }\r\n    })\r\n    return remaining\r\n}","import React, {useContext, useEffect, useState} from 'react'\r\nimport {useQuery, useLazyQuery, useMutation} from '@apollo/client'\r\nimport '../../App.css'\r\nimport {addCharacter, deleteCharacter, getCharacter, getClasses, getClass, getRaces, updateCharacterInfo, updateCharacterStats, updateCharacterSkills} from '../../queries'\r\nimport { arrayToOptions } from '../../functions/GeneralFunctions'\r\nimport { UserContext } from '../../misc/UserContext'\r\nimport { levelsAreBalanced, getRemainingLevelPoints } from '../../functions/CharacterCreation'\r\n\r\n\r\n\r\nexport default function EditCharacter(props){\r\n    const user = props.currentUser\r\n    const [character, updateCharacter] = useState(null)\r\n    const {loading, data, refetch: reloadCharacter} = useQuery(getCharacter, {variables:{id:props.characterID}, fetchPolicy:'network-only'})\r\n    useEffect(()=>{\r\n        if (loading===false && data!==undefined){\r\n            updateCharacter(data.character)\r\n        }\r\n        if(loading){\r\n            return(<p>Loading..</p>)\r\n        }\r\n    }, [data, loading, props.characterID])\r\n    while(loading){\r\n        return(<p>Loading...</p>)\r\n    }\r\n    return(<>\r\n        <button className=\"backButton\" onClick={props.back}>Back</button>{/* vvv unloaded and unentered*/}\r\n        {loading===false && (character!==null ? <CharacterInfo user={user} character={character} reload={reloadCharacter} back={props.back}/> : <NewGeneralInfo user={user} back={props.back}/>)}\r\n    </>)\r\n}\r\n\r\nfunction NewGeneralInfo(props){\r\n    const [name, changeName] = useState(\"\")\r\n    const [background, changeBG] = useState(\"\")\r\n    const [race, changeRace] = useState(\"\")\r\n    const [campaign, changeCampaign] = useState(\"\")\r\n    const {loading:raceLoading, data:raceData} = useQuery(getRaces)\r\n    const [createNew, {loading:newLoading, data:newData}] = useMutation(addCharacter)\r\n    useEffect(()=>{\r\n        if (props.user.campaigns[0]!==undefined){\r\n            changeCampaign(props.user.campaigns[0]._id)\r\n        }\r\n        if(raceData!==undefined){\r\n            if (raceData.races[0]!==undefined){\r\n                changeRace(raceData.races[0].index)\r\n            }\r\n        }\r\n    },[raceData, props.user.campaigns])\r\n    while(raceLoading||newLoading){\r\n        return(<p>Loading...</p>)\r\n    }\r\n    if(newData!==undefined){\r\n        props.back()\r\n    }\r\n    return (<form onSubmit={()=>{console.log(props.user._id, campaign, name, race, background);createNew({variables:{user:props.user._id, campaign:campaign, name:name, race:race, background:background}})}}>\r\n        <input type=\"submit\" /><br/>\r\n        <label htmlFor=\"name\" className=\"tbLabel\">Name: \r\n        <input type=\"name\" id=\"name\" name=\"name\" required={true} onChange={(e)=>{e.preventDefault();changeName(e.target.value)}} value={name}/></label>\r\n        <CampaignSelect id=\"campaign\" campaigns={props.user.campaigns} changeCampaign={changeCampaign}/><br/>\r\n        <label htmlFor=\"bg\" className=\"tbLabel\">Background Info / Lore: \r\n        <textarea id=\"bg\" name=\"bg\" onChange={(e)=>{e.preventDefault();changeBG(e.target.value)}} value={background} rows=\"4\" cols=\"50\" maxLength=\"500\"/></label><br/>\r\n        <RaceSelect id=\"race\" races={raceData.races} changeRace={changeRace}/><br/>\r\n    </form>)\r\n}\r\n\r\nfunction CharacterInfo(props){\r\n    //console.log(props.character)\r\n    const {loading:classLoading, data:classData} = useQuery(getClasses)\r\n    const [page, changePage] = useState(0)\r\n    while(classLoading){\r\n        return(<p>Loading...</p>)\r\n    }\r\n    let pages = <>{[\r\n            page===0 && <ExistingGeneralInfo character={props.character} classes={classData.classes} back={props.back}/>,\r\n            page===1 && <Proficiencies reload={props.reload} character={props.character}/>\r\n        ]}<p className=\"Form\">Page:\r\n            <button onClick={()=>{changePage(0)}}>1</button>\r\n            <button onClick={()=>{changePage(1)}}>2</button>\r\n        </p></>\r\n    return (<div><h2>{props.character.name}</h2>\r\n        <div className=\"Form\">{pages}</div>\r\n    </div>)\r\n}\r\n\r\nfunction ExistingGeneralInfo(props){\r\n    const {user} = useContext(UserContext)\r\n    const character = props.character\r\n    const [campaign, changeCampaign] = useState(character.campaign)\r\n    const [charClass, changeClass] = useState(character.class)\r\n    const [str, changeStr] = useState(character.str)\r\n    const [dex, changeDex] = useState(character.dex)\r\n    const [con, changeCon] = useState(character.con)\r\n    const [int, changeInt] = useState(character.int)\r\n    const [wis, changeWis] = useState(character.wis)\r\n    const [cha, changeCha] = useState(character.cha)//need to implement for maximum levels etc.\r\n    const [rename, toggleRename] = useState(false)\r\n    const [name, changeName] = useState(character.name)\r\n    const [delCharacter, {loading:delLoading, data:delData}] = useMutation(deleteCharacter, {variables:{character:character._id, user:character.user._id, campaign:character.campaign}})\r\n    const [updateInfo, {loading:infoLoading, data:infoData}] = useMutation(updateCharacterInfo, {variables:{id:character._id, name:name, campaign:campaign}})\r\n    const [updateStats, {loading:statsLoading, data:statsData}] = useMutation(updateCharacterStats, {variables:{id:character._id, class:charClass, cha:parseInt(cha), con:parseInt(con), str:parseInt(str), dex:parseInt(dex), int:parseInt(int), wis:parseInt(wis)}})\r\n    const [badStats, setBadStats] = useState(false)\r\n    const levels = [str, dex, con, int, wis, cha]\r\n    const [remainingLevelPoints, setRemaining] = useState(getRemainingLevelPoints(levels))\r\n\r\n    useEffect(()=>{//only runs once, because props.classes never changes\r\n        if (props.classes[0]!==undefined){\r\n            changeClass(props.classes[0].index)\r\n        }\r\n    },[props.classes])\r\n\r\n    while(delLoading||infoLoading||statsLoading){\r\n        if(delLoading){\r\n            console.log(character._id, character.user._id, character.campaign)\r\n        }\r\n        return(<p>loading</p>)\r\n    }\r\n    if(delData!==undefined||infoData!==undefined||statsData!==undefined){\r\n        props.back()\r\n    }\r\n    return (<><div>\r\n        <button onClick={delCharacter}>Delete Character</button></div>\r\n        {rename ? <>\r\n            <form onSubmit={updateInfo}>\r\n                <label htmlFor=\"name\" className=\"tbLabel\">Name: \r\n                <input type=\"text\" id=\"name\" name=\"name\" required={true} onChange={(e)=>{e.preventDefault();changeName(e.target.value)}} value={name}/></label>\r\n                <CampaignSelect id=\"campaign\" current={campaign} campaigns={user.campaigns} changeCampaign={changeCampaign}/>\r\n                <input type=\"submit\"/><button onClick={()=>{toggleRename(!rename)}}>Cancel</button>\r\n            </form>\r\n        </> : <><button onClick={()=>{toggleRename(!rename)}}>Rename/ChangeCampaign</button><br/></>}\r\n        <form className=\"Form\" onSubmit={()=>{if(levelsAreBalanced([str, dex, con, int, wis, cha])){updateStats();setBadStats(false)}else{setBadStats(true)}}}>\r\n            <input type=\"submit\" /><br/>\r\n            <ClassSelect id=\"class\" current={charClass} classes={props.classes} changeClass={changeClass}/><br/>\r\n            <label htmlFor=\"str\" className=\"tbLabel\">Str: \r\n            <input type=\"number\" id=\"str\" name=\"str\" min=\"1\" max=\"20\" required={true} onChange={(e)=>{const newLevelsStr = [str + (Number.parseInt(e.target.value) - str), dex, con, int, wis, cha];e.preventDefault();if(levelsAreBalanced(newLevelsStr)){changeStr(Number.parseInt(e.target.value));setRemaining(getRemainingLevelPoints(newLevelsStr))}else{e.target.innerText = str}}} value={str}/></label>\r\n            <label htmlFor=\"dex\" className=\"tbLabel\">Dex: \r\n            <input type=\"number\" id=\"dex\" name=\"dex\" min=\"1\" max=\"20\" required={true} onChange={(e)=>{const newLevelsDex = [str, dex + (Number.parseInt(e.target.value) - dex), con, int, wis, cha];e.preventDefault();if(levelsAreBalanced(newLevelsDex)){changeDex(Number.parseInt(e.target.value));setRemaining(getRemainingLevelPoints(newLevelsDex))}else{e.target.innerText = dex}}} value={dex}/></label>\r\n            <label htmlFor=\"con\" className=\"tbLabel\">Con: \r\n            <input type=\"number\" id=\"con\" name=\"con\" min=\"1\" max=\"20\" required={true} onChange={(e)=>{const newLevelsCon = [str, dex, con + (Number.parseInt(e.target.value) - con), int, wis, cha];e.preventDefault();if(levelsAreBalanced(newLevelsCon)){changeCon(Number.parseInt(e.target.value));setRemaining(getRemainingLevelPoints(newLevelsCon))}else{e.target.innerText = con}}} value={con}/></label>\r\n            <label htmlFor=\"int\" className=\"tbLabel\">Int: \r\n            <input type=\"number\" id=\"int\" name=\"int\" min=\"1\" max=\"20\" required={true} onChange={(e)=>{const newLevelsInt = [str, dex, con, int + (Number.parseInt(e.target.value) - int), wis, cha];e.preventDefault();if(levelsAreBalanced(newLevelsInt)){changeInt(Number.parseInt(e.target.value));setRemaining(getRemainingLevelPoints(newLevelsInt))}else{e.target.innerText = int}}} value={int}/></label>\r\n            <label htmlFor=\"wis\" className=\"tbLabel\">Wis: \r\n            <input type=\"number\" id=\"wis\" name=\"wis\" min=\"1\" max=\"20\" required={true} onChange={(e)=>{const newLevelsWis = [str, dex, con, int, wis + (Number.parseInt(e.target.value) - wis), cha];e.preventDefault();if(levelsAreBalanced(newLevelsWis)){changeWis(Number.parseInt(e.target.value));setRemaining(getRemainingLevelPoints(newLevelsWis))}else{e.target.innerText = wis}}} value={wis}/></label>\r\n            <label htmlFor=\"cha\" className=\"tbLabel\">Cha: \r\n            <input type=\"number\" id=\"cha\" name=\"cha\" min=\"1\" max=\"20\" required={true} onChange={(e)=>{const newLevelsCha = [str, dex, con, int, wis, cha + (Number.parseInt(e.target.value) - cha)];e.preventDefault();if(levelsAreBalanced(newLevelsCha)){changeCha(Number.parseInt(e.target.value));setRemaining(getRemainingLevelPoints(newLevelsCha))}else{e.target.innerText = cha}}} value={cha}/></label>\r\n            <p>{remainingLevelPoints} points remaining</p>\r\n        </form>\r\n        {badStats && <p>bad stats</p>}\r\n    </>)\r\n}\r\n\r\nfunction Proficiencies(props){//works(only for first set of choices), just needs submit button\r\n    console.log(props.character.skills)\r\n    const {data, loading} = useQuery(getClass, {variables:{index:props.character.class}})\r\n    const [defaults, changeDefaults] = useState([])\r\n    const [options, changeOptions] = useState([])\r\n    const [updated, changeUpdated] = useState(false)\r\n    useEffect(()=>{\r\n        if (!(data===null||data===undefined) && loading===false && updated===false){\r\n            changeDefaults(data.class.proficiencies.map((currentValue, index)=>{if(index===0){return currentValue.index}else{return \", \"+currentValue.index}}))\r\n            changeOptions(data.class.proficiency_choices.map((current, index)=>{\r\n                return <ProficienciesChooseFrom defaults={data.class.proficiencies.map((currentValue)=>{return currentValue.index})} character={props.character} options={data.class.proficiency_choices[index]} reload={props.reload}/>\r\n            }))\r\n            changeUpdated(true)\r\n        }\r\n    },[data, loading, props, props.character, props.classes, updated])\r\n    while(loading){\r\n        return(<p>Loading data...</p>)\r\n    }\r\n    return(<><h3>Proficiencies</h3>{options}<p>Defaults: {defaults}</p></>)\r\n}\r\n\r\nfunction ProficienciesChooseFrom(props){\r\n    const [chosenOptions, changeChosen] = useState(props.options.from.map((currentValue, index)=>{if(props.character.skills.includes(currentValue.index)){return currentValue.index}else{return null}}))\r\n    const [chosen, updateChosen] = useState(chosenOptions.filter(current => current!==null).length)\r\n    const [updateSkills, {data:infoData}] = useMutation(updateCharacterSkills, {variables:{id:props.character._id, skills:Array.prototype.concat(props.defaults, chosenOptions.filter(current => current!==null))}})\r\n    const profOptions = (props.options.from.map((currentValue, index)=>{//trying to get preselection to work based on db data\r\n        return (<>\r\n            <input type=\"checkbox\" defaultChecked={props.character.skills.includes(currentValue.index)} name={index} id={currentValue.index} onChange={(e)=>{choose(e.target)}}/>\r\n            <label for={index}>{currentValue.name}</label>\r\n        </>)\r\n    }))\r\n\r\n    function choose(checkbox){\r\n        var newer = []\r\n        var newnumber = chosen\r\n        if(checkbox.checked){\r\n            if(chosen+1 <= props.options.choose){\r\n                newnumber++\r\n                newer = chosenOptions.map((currentValue, index)=>{if(index === Number.parseInt(checkbox.name)){return checkbox.id}else{return currentValue}})\r\n            }else{\r\n                checkbox.checked = false\r\n                newer = chosenOptions\r\n            }\r\n        }else{\r\n            newnumber--\r\n            newer = chosenOptions.map((currentValue, index)=>{if(index === Number.parseInt(checkbox.name)){return null}else{return currentValue}})\r\n        }\r\n        changeChosen(newer)\r\n        updateChosen(newnumber)\r\n    }\r\n    \r\n    return (props.options.from[0].type===\"Skills\" && <>\r\n         <p>Choose {props.options.choose}:</p>\r\n        <form onSubmit={(e)=>{e.preventDefault();updateSkills();props.reload()}}>\r\n            {profOptions}<input type=\"submit\"/>\r\n        </form>\r\n    </>)\r\n}\r\n\r\nfunction ClassSelect(props){\r\n    let classOptions = arrayToOptions(props.classes)\r\n    return(\r\n        <label htmlFor=\"class\" className=\"tbLabel\">Class:\r\n            <select id=\"classes\" required={true} name=\"classes\" onChange={(e)=>{props.changeClass(props.classes[e.target.selectedIndex].index)}} defaultValue={props.current}>\r\n                {classOptions}\r\n            </select>\r\n        </label>\r\n    )\r\n}\r\n\r\nfunction RaceSelect(props){\r\n    const [selected, changeSelected] = useState(0)\r\n    let raceOptions = arrayToOptions(props.races)\r\n    return(\r\n        <div><label htmlFor=\"races\" required={true} className=\"tbLabel\">Race:\r\n            <select id=\"races\" name=\"races\" selectedIndex=\"0\" onChange={(e)=>{props.changeRace(props.races[e.target.selectedIndex].index); changeSelected(e.target.selectedIndex)}}>\r\n                {raceOptions}\r\n            </select></label>\r\n            <p>{props.races[selected].alignment}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction CampaignSelect(props){\r\n    const campaignOptions = arrayToOptions(props.campaigns)\r\n    if(props.campaigns.length===1){\r\n        props.changeCampaign(props.campaigns[0]._id)\r\n    }\r\n    return(<>\r\n        <label htmlFor=\"campaigns\" className=\"tbLabel\">Campaign:\r\n            <select id=\"campaigns\" name=\"campaigns\" selectedIndex=\"0\" required={true} onChange={(e)=>{props.changeCampaign(props.campaigns[e.target.selectedIndex]._id)}} defaultValue={props.current}>\r\n                {campaignOptions}\r\n            </select>\r\n        </label>\r\n    </>)\r\n}\r\n","import { useQuery, useMutation, useSubscription } from '@apollo/client'\r\nimport React, {useContext, useEffect} from 'react'\r\nimport {UserContext} from '../../misc/UserContext'\r\nimport { currentSessionID, createSession, endSession } from '../../queries'\r\n\r\nexport function DisplayCharacters(props){//need to render the Campaign function for as many as there are in campaigns collection\r\n    const {user, refreshUser} = useContext(UserContext)\r\n    if(props.needsRefresh){\r\n        refreshUser()\r\n        props.refreshed()\r\n    }\r\n    const [startSession, {data: createSessionData}] = useMutation(createSession)\r\n    const [finishSession, {data: endSessionData}] = useMutation(endSession)\r\n    const currentUser = user\r\n    const characterList = currentUser.characters.map((currentValue, index)=>{//doesn't render if user doesn't have campaign\r\n        var cam = currentUser.campaigns.find(element => element._id===currentValue.campaign)\r\n        return <Character key={index} character={currentValue} changeSelected={props.changeSelected} purpose={props.purpose} currentUser={user} campaign={cam}/>\r\n    })\r\n    if(props.purpose===\"Play\"){\r\n        characterList.push(currentUser.campaigns.map(element=>{\r\n            return (<>\r\n                {user._id===element.dm && element.currentSession===null && \r\n                    <button onClick={() => startSession({variables:{campaign:element._id, user:user._id}})}>\r\n                        Begin {element.name}\r\n                    </button>\r\n                }\r\n                {user._id===element.dm && element.currentSession!==null && \r\n                    <button onClick={() => finishSession({variables:{campaign:element._id, user:user._id}})}>\r\n                        End {element.name} session\r\n                    </button>\r\n                }\r\n            </>)\r\n        }))\r\n    }\r\n    return (\r\n        <div>\r\n            {props.purpose===\"Play\" && <button onClick={()=>{refreshUser()}}>Refresh</button>}\r\n            {(user.characters.length===0) && <p>You do not currently have any characters.</p>}\r\n            {(user.campaigns.length!==0) && characterList}\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction Character(props){\r\n        console.log(props.campaign)\r\n    return (\r\n        <div className=\"character\">\r\n            <p key=\"c1\" className=\"character-name\">{props.character.name}</p>\r\n            <ul>\r\n                <li key=\"mainButton\">\r\n                    {props.purpose===\"Edit\" && <button onClick={() => props.changeSelected(props.character._id)}>\r\n                        Edit\r\n                    </button>}\r\n                    {((props.purpose===\"Play\" && props.campaign!==undefined) && props.campaign.currentSession!==null) && <button onClick={() => props.changeSelected(props.campaign.currentSession)}>\r\n                        Play\r\n                    </button>}\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}","import React, { useContext } from 'react';\r\nimport '../App.css';\r\nimport {UserContext} from '../misc/UserContext';\r\nimport EditCharacter from '../components/characters/EditCharacter'\r\nimport {DisplayCharacters} from '../components/characters/DisplayCharacters'\r\n\r\nexport default class Characters extends React.Component {\r\n\r\n    static contextType = UserContext;\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {selected:null, chosen:false, needsRefresh:false, needsSubmit:false}\r\n        this.handleEditSubmit = this.handleEditSubmit.bind(this)\r\n        this.changeSelected = this.changeSelected.bind(this)\r\n        this.clearSelected = this.clearSelected.bind(this)\r\n        this.wantsNew = this.wantsNew.bind(this)\r\n        this.refreshed = this.refreshed.bind(this)\r\n    }\r\n\r\n    handleEditSubmit(e){\r\n        e.preventDefault();\r\n    }\r\n\r\n    changeSelected(selected){\r\n        this.setState({selected:selected, chosen:true})\r\n    }\r\n\r\n    clearSelected(){//need to update context\r\n        this.setState({selected:null, chosen:false, needsRefresh:true})\r\n    }\r\n    wantsNew(){\r\n        this.setState({chosen:true})\r\n    }\r\n    refreshed(){\r\n        this.setState({needsRefresh:false})\r\n    }\r\n\r\n    render() {\r\n        const {user} = this.context\r\n        return(\r\n            <>\r\n                <h1 className=\"title\"> Characters </h1>\r\n                {!this.state.chosen && <>\r\n                    <button onClick={this.wantsNew}>New Character</button>\r\n                    <DisplayCharacters needsRefresh={this.state.needsRefresh} refreshed={this.refreshed} changeSelected={this.changeSelected} purpose=\"Edit\"/> \r\n                </>}\r\n                {this.state.chosen && <EditCharacter currentUser={user} characterID={this.state.selected} submit={this.handleEditSubmit} back={this.clearSelected}/>}\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import { useMutation } from '@apollo/client'\r\nimport React, { useContext } from 'react'\r\nimport { UserContext } from '../../misc/UserContext'\r\nimport { changeCharacterHealth } from '../../queries'\r\n\r\nexport function PartyCharacters(props){\r\n    const {user} = useContext(UserContext)\r\n    const session = props.session\r\n    const partyCharacters = session.characters.map((currentValue, index)=>{return <CharacterInfo key={index} character={currentValue} sessionID={session._id} currentUser={user._id}/>})\r\n    return (\r\n        <>\r\n            {(session.characters.length===0) && <p>No characters in this party.</p>}\r\n            {(session.characters.length!==0) && partyCharacters}\r\n        </>\r\n    )\r\n}\r\n\r\nfunction CharacterInfo(props){\r\n    const character = props.character.character\r\n    const [changeHealth, {data}] = useMutation(changeCharacterHealth, {variables:{session:props.sessionID, character:props.character._id}})\r\n    return (<div className=\"campaign\">\r\n        <p key=\"c1\" className=\"campaign-name\">{character.name}</p>\r\n        <ul>\r\n            <li key=\"hp\">\r\n                <p>{character.hp}</p>\r\n                {character.user._id===props.currentUser && <>\r\n                    <button onClick={()=>{changeHealth({variables:{hp:character.hp+1}})}}>+</button>\r\n                    <button onClick={()=>{changeHealth({variables:{hp:character.hp-1}})}}>-</button>\r\n                </>}\r\n            </li>\r\n        </ul>\r\n    </div>)\r\n}","import React, { useContext, useEffect, useState } from 'react';\r\nimport { useSubscription, Subscription, useQuery } from '@apollo/client';\r\nimport '../App.css';\r\nimport {UserContext} from '../misc/UserContext'\r\nimport {currentSession, getUserID, onSessionUpdate} from '../queries'\r\nimport {PartyCharacters} from '../components/play/party'\r\nimport { DisplayCharacters } from '../components/characters/DisplayCharacters';\r\n\r\nexport default function Play(props) {\r\n    const {user} = useContext(UserContext)\r\n    const [selected, changeSelected] = useState(null)\r\n    const [needsRefresh, setNeedsRefresh] = useState(false)\r\n    const [needsRefetch, setNeedsRefetch] = useState(true)\r\n\r\n    return (<header className=\"App-header\">\r\n        {selected!==null ? <PlayView sessionID={selected} needsRefetch={needsRefetch} refetched={()=>{setNeedsRefetch(false)}}/> : <DisplayCharacters needsRefresh={needsRefresh} refreshed={()=>{setNeedsRefresh(true)}} changeSelected={changeSelected} purpose=\"Play\"/>}\r\n    </header>)\r\n}\r\n\r\nfunction PlayView(props){\r\n    const {data:queryData, loading:queryLoading, refetch} = useQuery(currentSession, {variables:{id:props.sessionID}})\r\n    const {data:updateData, loading:updateLoading} = useSubscription(onSessionUpdate, {variables:{id:props.sessionID}})\r\n    const [data, changeData] = useState(undefined)\r\n\r\n    useEffect(()=>{\r\n        if(props.needsRefetch){\r\n            refetch()\r\n            props.refetched()\r\n        }\r\n        if(updateData===undefined){\r\n            if(queryLoading){\r\n                console.log(\"loading\")\r\n            }\r\n            if(queryData!==undefined){\r\n                console.log(queryData.session)\r\n                changeData(queryData.session)\r\n            }\r\n        }else{\r\n            console.log(updateData.sessionUpdate)\r\n            changeData(updateData.sessionUpdate)\r\n        }\r\n    }, [queryLoading, queryData, updateLoading, updateData, refetch, props])\r\n\r\n    return (\r\n        <>\r\n            <h2>Play the game</h2>\r\n            {data!==undefined ? \r\n                <div className=\"play\">\r\n                    <PartyCharacters session={data}/>\r\n                </div>\r\n                : <p>No characters in this party.</p>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport { useLazyQuery } from '@apollo/client';\r\nimport '../App.css';\r\nimport {UserContext} from '../misc/UserContext'\r\nimport {getUserID} from '../queries'\r\n\r\nexport default function MyAccount(props) {\r\n    const {user} = useContext(UserContext)\r\n    return (\r\n        <>\r\n            <div>Name: {user.name}</div>\r\n            <div>Username: {user.username}</div>\r\n            <div>Campaigns participated in: {user.campaigns.length} (DM of {user.campaigns.filter(current => current.dm===user._id).length})</div>\r\n            <div>Characters: {user.characters.length}</div>\r\n        </>\r\n    )\r\n}","/**\r\n * This is the file that handles routing for the entire application\r\n */\r\nimport React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport '../../App.css';\r\nimport Home from '../../pages/Home';\r\nimport Campaigns from '../../pages/Campaigns';\r\nimport Characters from '../../pages/Characters'\r\nimport Play from '../../pages/Play'\r\nimport MyAccount from '../../pages/MyAccount'\r\n\r\nfunction PageSwitch(props){\r\n    return (\r\n        <header className=\"App-header\">\r\n            <Switch> {/* The Switch decides which component to show based on the current URL.*/}\r\n                <Route exact path='/' component={Home}/>\r\n                <Route exact path='/Campaigns' component={Campaigns}/>\r\n                <Route exact path='/Characters' component={Characters}/>\r\n                <Route exact path='/Play' component={Play}/>\r\n                <Route exact path='/MyAccount' component={MyAccount}/>\r\n            </Switch>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default PageSwitch;\r\n","import React from 'react';\r\nimport {NetworkStatus, useQuery} from '@apollo/client';\r\nimport {UserContext} from '../../misc/UserContext'\r\nimport {getUserByID} from '../../queries';\r\nimport '../../App.css';\r\nimport NavBar from './navbar'\r\nimport PageSwitch from './PageSwitch'\r\n\r\n\r\nexport default function Main(props){\r\n\r\n\tconst {loading, data, error, refetch, networkStatus} = useQuery(getUserByID, {variables:{id:props.id}, notifyOnNetworkStatusChange:true, fetchPolicy:'network-only'});\r\n\t\r\n\twhile(networkStatus===NetworkStatus.refetch){\r\n\t\treturn (<><NavBar currentUser={data.user}/><header><p>Retrieving your data...</p></header></>)\r\n\t}\r\n\twhile(loading){\r\n\t\treturn (<header><p>Loading...</p></header>);\r\n\t}\r\n\tif(error){\r\n\t\treturn (<p>There was an error. Please refresh the page and try again.</p>);\r\n\t}\r\n\tif(data !== undefined){\r\n\t\t//console.log(\"Logged in user\", data);\r\n\t\tconst context = { user:data.user, refreshUser:refetch }\r\n\t\treturn (\r\n\t\t\t<><NavBar currentUser={data.user}/>\r\n\t\t\t<UserContext.Provider value={context}>\r\n\t\t\t\t<PageSwitch/>\r\n\t\t\t</UserContext.Provider></>\r\n\t\t);\r\n\t}\r\n}\r\n","import React, {useEffect} from 'react';\r\nimport {useQuery, useMutation} from '@apollo/client'\r\nimport '../App.css';\r\nimport { Link } from \"react-router-dom\";\r\nimport {addUser, doesUserExist, getUserID} from '../queries';\r\n\r\n\r\n\r\nclass Register extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\t\tthis.Registered = this.props.Registered;\r\n\t\tthis.handleNameChange = this.handleNameChange.bind(this);\r\n\t\tthis.handleEmailChange = this.handleEmailChange.bind(this);\r\n\t\tthis.handleUsernameChange = this.handleUsernameChange.bind(this);\r\n\t\tthis.handlePasswordChange = this.handlePasswordChange.bind(this);\r\n\t\tthis.handleRegisterAttempt = this.handleRegisterAttempt.bind(this);\r\n\t\tthis.state = {badForm:false, registered:false, name:\"\", email:\"\", username:\"\", password:\"\"};\r\n    }\r\n\thandleNameChange(e){\r\n\t\te.preventDefault();\r\n\t\tthis.setState({name: e.target.value});\r\n\t}\r\n\thandleEmailChange(e){\r\n\t\te.preventDefault();\r\n\t\tthis.setState({email: e.target.value});\r\n\t}\r\n\thandleUsernameChange(e){\r\n        e.preventDefault();\r\n        this.setState({username: e.target.value});\r\n    }\r\n    handlePasswordChange(e){\r\n        e.preventDefault();\r\n        this.setState({password: e.target.value});\r\n    }\r\n\r\n    handleRegisterAttempt(e){\r\n        e.preventDefault();\r\n\t\tif(!!this.state.name && !!this.state.email && !!this.state.username && !!this.state.password){\r\n\t\t\tthis.setState({registered: true});\r\n\t\t}else{\r\n\t\t\tthis.setState({badForm: true})\r\n\t\t}\r\n\t\t//need check all fields are filled out\r\n    }\r\n\r\n    render() {\r\n        return(//obviously needs more added\r\n            <>\r\n                {!this.state.registered && \r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<img src=\"images/Nooth_DnD.png\" width='300' alt=\"logo\"/>\r\n\t\t\t\t\t\t<h1 className=\"title\">\r\n\t\t\t\t\t\t\tSign Up\r\n\t\t\t\t\t\t</h1>\r\n\t\t\t\t\t\t<form className=\"Form\" onSubmit={this.handleRegisterAttempt}>\r\n\t\t\t\t\t\t\t<label htmlFor=\"fullname\" className=\"tbLabel\">Full Name: \r\n\t\t\t\t\t\t\t<input type=\"name\" id=\"fullname\" name=\"fullname\" required={true} onChange={this.handleNameChange} value={this.state.name}/></label><br/>\r\n\t\t\t\t\t\t\t<label htmlFor=\"email\" className=\"tbLabel\" name=\"tbLabel\">Email: \r\n\t\t\t\t\t\t\t<input type=\"email\" id=\"email\" name=\"email\" required={true} onChange={this.handleEmailChange} value={this.state.email}/></label><br/>\r\n\t\t\t\t\t\t\t<label htmlFor=\"username\" className=\"tbLabel\" name=\"tbLabel\">Username: \r\n\t\t\t\t\t\t\t<input type=\"username\" id=\"username\" name=\"username\" required={true} onChange={this.handleUsernameChange} value={this.state.username}/></label><br/>\r\n\t\t\t\t\t\t\t<label htmlFor=\"password\" className=\"tbLabel\" name=\"tbLabel\">Password: \r\n\t\t\t\t\t\t\t<input type=\"password\" id=\"password\" name=\"password\" required={true} onChange={this.handlePasswordChange} value={this.state.password}/></label><br/>\r\n\t\t\t\t\t\t\t<input type=\"submit\" value=\"Submit\"/>\r\n\t\t\t\t\t\t</form><br/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t}\r\n\t\t\t\t{this.state.registered && <AddUser name={this.state.name} email={this.state.email} username={this.state.username} password={this.state.password}/>}\r\n\t\t\t\t{this.state.badForm && <p>Please make sure all boxes are filled in</p>/**this check seems redundant with the boxes being marked as required */}\r\n\t\t\t\t<button onClick={this.Registered} name=\"next\" variant=\"outlined\">\r\n\t\t\t\t\tGo back to login\r\n\t\t\t\t</button>\r\n            </>\r\n\t\t)\r\n    }\r\n}\r\n\r\nfunction AddUser(props){\r\n\tconst {data:queryData, loading:queryLoading} = useQuery(doesUserExist, {variables: {username:props.username}}, {fetchPolicy:'network-only'});//check email instead of password here, as password does not need to be unique\r\n\tconst [newUser, { data, loading }] = useMutation(addUser);\r\n\twhile (queryLoading||loading) {console.log(\"loading\");return(<p>Loading...</p>)}\r\n\tconsole.log(queryData.getUserID)\r\n\tif(queryData!==undefined){\r\n\t\tif(queryData.doesUserExist===false && !queryLoading){//apparently here cannot read 'undefined' user, but that same method works in login???\r\n\t\t\tconsole.log(\"user doesn't already exist\")\r\n\t\t\tif(data===undefined){\r\n\t\t\t\tconsole.log(\"adding user\")\r\n\t\t\t\tnewUser({variables:{name:props.name, email:props.email, username:props.username, password:props.password}});\r\n\t\t\t}else if(data!=null){\r\n\t\t\t\tconsole.log(data)\r\n\t\t\t\treturn(<>\r\n\t\t\t\t\t<p>Welcome, {props.name}</p>\r\n\t\t\t\t</>);\r\n\t\t\t}\r\n\t\t}else if(queryData.doesUserExist===true && !queryLoading){\r\n\t\t\tconsole.log(\"user already exists\", queryData.getUserID)\r\n\t\t\treturn (\r\n\t\t\t\t<p>Error: Username already exists, try again</p>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\treturn <p></p>\r\n}\r\n\r\nexport default Register;","import React, { useEffect, useState } from 'react';\r\nimport { useLazyQuery } from '@apollo/client';\r\nimport '../App.css';\r\nimport Register from './Register';\r\nimport {getUserID} from '../queries'\r\n\r\nexport default function Login(props) {\r\n    const [id, setID] = useState(null)\r\n    const [username, setUsername] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [registered, toggleRegistered] = useState(true)\r\n    const [stayLoggedIn, setStay] = useState(false)\r\n    const [badLogin, toggleBadLogin] = useState(false)\r\n    const [getID, {data, loading, called}] = useLazyQuery(getUserID, {fetchPolicy:'network-only'})\r\n\r\n    useEffect(()=>{//if the client recieves an id upon request, the user may continue. if not, they are stuck\r\n        if(!loading&&(id!==null)){\r\n            props.handleLogin(id)\r\n        }\r\n        if(!loading && called && id===null){\r\n            if(data!==undefined){\r\n                setID(data.getUserID)\r\n            }else{\r\n                toggleBadLogin(true)\r\n            }\r\n        }\r\n    }, [loading, called, id, data, props])\r\n\r\n    return (\r\n        <header className=\"App-header\">\r\n            {registered && //show login form if not logged in\r\n                (<><div><form id=\"Form\" className=\"Form\" onSubmit={(e)=>{e.preventDefault();getID({variables:{username:username, password:password}})}}>\r\n                        <p> Please enter your username and password </p>\r\n                        <label htmlFor=\"user\">Username: \r\n                            <input type=\"username\" name=\"user\" id=\"user\" required={true} autoFocus={true} value={username} onChange={(e)=>{e.preventDefault();setUsername(e.target.value)}}/>\r\n                        </label><br />\r\n                        <label htmlFor=\"pass\">Password: \r\n                            <input type=\"password\" name=\"pass\" id=\"pass\" required={true} value={password} onChange={(e)=>{e.preventDefault();setPassword(e.target.value);}}/>\r\n                        </label><br />\r\n                        <input type=\"submit\" value=\"Submit\" variant=\"outlined\"/>\r\n                        <label htmlFor=\"rememberLogin\"> Remember me\r\n                            <input type=\"checkbox\" id=\"rememberLogin\" name=\"rememberLogin\" value={stayLoggedIn}/>{/*not implemented yet*/}\r\n                        </label>\r\n                    </form>\r\n                    <button name=\"next2\" variant=\"outlined\" onClick={()=>{toggleRegistered(false)}}>\r\n                            register\r\n                    </button>\r\n                </div>\r\n                {badLogin && <p>Could not find a user to match input username and password.</p>}</>)\r\n            }\r\n            {loading && <p>loading...</p>}\r\n            {!registered && <Register Registered={()=>{toggleRegistered(true)}}/>}\r\n        </header>\r\n    )\r\n}\r\n\r\n/* class Login extends React.Component {//old version (class)\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.HandleLogin = this.props.HandleLogin;\r\n        this.SetLogin = this.props.SetLogin;\r\n        this.BadLogin = this.props.BadLogin;\r\n        this.Registered = this.Registered.bind(this);\r\n        this.NotRegistered = this.NotRegistered.bind(this);\r\n        this.handleLoginAttempt = this.handleLoginAttempt.bind(this);\r\n        this.handleUsernameChange = this.handleUsernameChange.bind(this);\r\n        this.handlePasswordChange = this.handlePasswordChange.bind(this);\r\n        this.state = {registered:true, loggedIn: false, username: \"\", password: \"\"};\r\n    }\r\n\r\n    handleUsernameChange(e){\r\n        e.preventDefault(); \r\n        this.setState({username: e.target.value});\r\n        //console.log(this.state.username);\r\n    }\r\n    handlePasswordChange(e){\r\n        e.preventDefault();\r\n        this.setState({password: e.target.value});\r\n        //console.log(this.state.password);\r\n    }\r\n\r\n    handleLoginAttempt(e){//logs the form\r\n        e.preventDefault();\r\n        this.HandleLogin(this.state.username, this.state.password);\r\n        this.setState({loggedIn: true});\r\n        this.SetLogin();\r\n    }\r\n\r\n    NotRegistered(){\r\n        this.setState({registered: false});\r\n    }\r\n\r\n    Registered(){\r\n        this.setState({registered: true});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <header className=\"App-header\">\r\n                {(!this.state.loggedIn && this.state.registered) && //show login form if not logged in\r\n                    (<div><form id=\"Form\" className=\"Form\" onSubmit={this.handleLoginAttempt}>\r\n                        <p> Please enter your username and password </p>\r\n                        <label htmlFor=\"user\">Username: \r\n                            <input type=\"username\" name=\"user\" id=\"user\" required={true} autoFocus={true} onChange={this.handleUsernameChange} value={this.state.username}/>\r\n                        </label><br />\r\n                        <label htmlFor=\"pass\">Password: \r\n                            <input type=\"password\" name=\"pass\" id=\"pass\" required={true} onChange={this.handlePasswordChange} value={this.state.password}/>\r\n                        </label><br />\r\n                        <input type=\"submit\" value=\"Submit\" variant=\"outlined\"/>\r\n                        <label htmlFor=\"rememberLogin\"> Remember me\r\n                            <input type=\"checkbox\" id=\"rememberLogin\" name=\"rememberLogin\" value={this.state.loggedIn}//not implemented yet, checkbox doesnt even return anything on submit\r\n                        </label>\r\n                    </form>\r\n                    <button name=\"next2\" variant=\"outlined\" onClick={this.NotRegistered}>\r\n                            register\r\n                    </button>\r\n                    {this.BadLogin && <p>Could not find a user to match input username and password.</p>}\r\n                    </div>)\r\n                }\r\n                {(!this.state.registered && !this.state.loggedIn) && <Register Registered={this.Registered}/>}\r\n            </header>\r\n        )\r\n    }\r\n} */","import React, { useState } from 'react';\r\nimport './App.css';\r\nimport Main from './components/main/Main.js';\r\nimport Login from './pages/Login';\r\n\r\nfunction App(){\r\n    \r\n    const [userID, setUserID] = useState(null)\r\n    //add function to save ID/token to local storage here\r\n    return (\r\n        <div className=\"App\">\r\n            {userID ? <Main id={userID}/> : <Login handleLogin={setUserID}/>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom';\nimport './index.css';\nimport App from './App';\n//import reportWebVitals from './reportWebVitals';\n\nimport {ApolloClient, ApolloProvider, InMemoryCache, split, HttpLink} from '@apollo/client';\nimport {getMainDefinition} from '@apollo/client/utilities'\nimport {WebSocketLink} from '@apollo/client/link/ws'\n\n//from Apollo docs\nconst wsLink = new WebSocketLink({\n  uri: `ws://${window.location.hostname}:8080/graphql`,//just host, not hostname, for build version (to include port by default)\n  options: {reconnect:true}\n})\nconst httpLink = new HttpLink({\n  uri: `http://${window.location.hostname}:8080/graphql`\n});\nconst splitLink = split(({query})=>{\n  const definition = getMainDefinition(query)\n  return (\n    (definition.kind === 'OperationDefinition') \n    && (definition.operation === 'subscription')//uses wsLink if subscription operation\n  )\n}, wsLink, httpLink)\n\n\n//create apollo client\nexport const apolloClient = new ApolloClient({\n  link: splitLink,\n  cache: new InMemoryCache(),\n  onError: ({ networkError, graphQLErrors }) => {\n    console.log('graphQLErrors', graphQLErrors)\n    console.log('networkError', networkError)\n  },\n});\n\nReactDOM.render(\n  <ApolloProvider client = {apolloClient}>\n    <BrowserRouter>\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"/><App />\n    </BrowserRouter>\n  </ApolloProvider>,\n  document.getElementById('root')\n);\n\n\n/*\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();*/"],"sourceRoot":""}