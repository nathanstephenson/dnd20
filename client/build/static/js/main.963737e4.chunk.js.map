{"version":3,"sources":["misc/UserContext.js","queries.js","components/navbar.js","pages/Home.js","components/EditCampaign.js","pages/Campaigns.js","functions/GeneralFunctions.js","components/EditCharacter.js","pages/Characters.js","components/PageSwitch.js","components/Main.js","pages/Register.js","pages/Login.js","App.js","index.js"],"names":["UserContext","React","createContext","user","refreshUser","toggleNavBar","getUser","gql","addUser","getCampaign","addCampaign","deleteCampaign","renameCampaign","getCharacter","addCharacter","updateCharacterInfo","updateCharacterStats","deleteCharacter","getClasses","getRaces","NavBar","props","window","location","pathname","links","to","className","Home","me","useContext","useState","buttonText","setButtonText","src","alt","name","onClick","EditCampaign","campaignID","handleNameChange","bind","submit","delete","submitted","returnCampaign","state","loaded","campaign","e","preventDefault","this","setState","target","value","back","console","log","isDM","currentUserID","dm","LoadCampaign","ID","return","onSubmit","htmlFor","type","id","required","onChange","SubmitCampaign","DeleteCampaign","Component","useQuery","variables","fetchPolicy","loading","data","error","useMutation","submitCampaign","undefined","currentUser","delCampaign","_id","Campaigns","selected","chosen","wantsNew","newName","newSubmitted","needsRefresh","handleEditSubmit","changeSelected","clearSelected","cancelNew","newNameChanged","resetWithNew","refreshed","newID","context","DisplayCampaigns","AddCampaign","handleAdded","campaignList","push","i","campaigns","length","Campaign","newCampaign","arrayToOptions","array","newArray","index","contextType","EditCharacter","characterID","returnLoaded","submittedNew","character","submitNew","submitGeneral","race","bg","CharacterInfo","new","LoadCharacter","raceLoading","raceData","classLoading","classData","page","pages","NewGeneralInfo","races","ExistingGeneralInfo","classes","forEach","element","changeName","background","changeBG","changeRace","changeCampaign","createNew","newLoading","newData","CampaignSelect","rows","cols","maxLength","RaceSelect","class","charClass","changeClass","str","changeStr","dex","changeDex","con","changeCon","int","changeInt","wis","changeWis","cha","changeCha","rename","toggleRename","delCharacter","delLoading","delData","updateInfo","infoLoading","infoData","parseInt","updateStats","statsLoading","statsData","current","ClassSelect","min","max","classOptions","selectedIndex","raceOptions","alignment","campaignOptions","Characters","needsSubmit","DisplayCharacters","characterList","characters","Character","PageSwitch","exact","path","component","Main","username","password","notifyOnNetworkStatusChange","refetch","networkStatus","NetworkStatus","Provider","BadLogin","AddUser","passsword","queryData","queryLoading","newUser","email","Register","Registered","handleEmailChange","handleUsernameChange","handlePasswordChange","handleRegisterAttempt","badForm","registered","width","variant","Login","HandleLogin","SetLogin","NotRegistered","handleLoginAttempt","loggedIn","autoFocus","App","LoginUser","SetLoggedIn","InvalidLogin","GoodLogin","loginError","isLoggedIn","BadAttempt","apolloClient","ApolloClient","uri","cache","InMemoryCache","onError","networkError","graphQLErrors","ReactDOM","render","client","content","document","getElementById"],"mappings":"6UAIaA,EAAcC,IAAMC,cAAc,CAC3CC,KAAM,KACNC,YAAa,aACbC,aAAc,e,QCKLC,GATWC,cAAH,uHASEA,cAAH,oSA0BPC,GATcD,cAAH,qIASDA,cAAH,8LAgCPE,GAxBcF,cAAH,sNAeKA,cAAH,oHASCA,cAAH,wHASXG,EAAcH,cAAH,4IAQXI,EAAiBJ,cAAH,qKAMdK,EAAiBL,cAAH,mJAQdM,EAAeN,cAAH,0RAsBZO,EAAeP,cAAH,4QASZQ,EAAsBR,cAAH,8MASnBS,EAAuBT,cAAH,qTAUpBU,EAAkBV,cAAH,4LAMfW,EAAaX,cAAH,oGASVY,EAAWZ,cAAH,sL,OClKN,SAASa,EAAOC,GAEXC,OAAOC,SAASC,SAAhC,IAiBIC,EAAQ,CAfD,cAAC,IAAD,CAAMC,GAAG,IAAKC,UAAU,eAAxB,SACH,2CAES,cAAC,IAAD,CAAMD,GAAG,aAAaC,UAAU,UAAhC,SACT,8CAES,cAAC,IAAD,CAAMD,GAAG,cAAcC,UAAU,UAAjC,SACT,+CAEG,cAAC,IAAD,CAAMA,UAAU,UAAhB,SACH,yCAEM,cAAC,IAAD,CAAMA,UAAU,UAAhB,SACN,gDAMR,OACI,qBAAKA,UAAU,SAAf,SACKF,I,mBCIEG,MA5Bf,WAAiB,IAEJC,EAAMC,qBAAW9B,GAAtBG,KAFQ,EAGqB4B,mBAAS,QAH9B,mBAGRC,EAHQ,KAGIC,EAHJ,KAaf,OACC,qCACC,uBACA,qBAAKC,IAAI,uBAAuBP,UAAU,WAAWQ,IAAI,SACzD,uBACA,oBAAIR,UAAU,QAAd,mBAGA,wBAAQS,KAAK,WAAWC,QAAS,WAdjCJ,EADEJ,EACYA,EAAGO,KAEH,YAYd,SACEJ,IAEF,8DCvBkBM,E,kDACjB,WAAYjB,GAAQ,IAAD,8BACf,cAAMA,IACDkB,WAAa,EAAKlB,MAAMkB,WAC7B,EAAKC,iBAAmB,EAAKA,iBAAiBC,KAAtB,gBACxB,EAAKC,OAAS,EAAKA,OAAOD,KAAZ,gBACd,EAAKE,OAAS,EAAKA,OAAOF,KAAZ,gBACd,EAAKG,UAAY,EAAKA,UAAUH,KAAf,gBACjB,EAAKI,eAAiB,EAAKA,eAAeJ,KAApB,gBACtB,EAAKK,MAAQ,CAACJ,QAAO,EAAOC,QAAO,EAAOI,QAAO,EAAOC,SAAS,KAAMZ,KAAK,IAR7D,E,oDAWnB,SAAiBa,GACnBA,EAAEC,iBACFC,KAAKC,SAAS,CAAChB,KAAMa,EAAEI,OAAOC,U,oBAG5B,SAAOL,GACHE,KAAKC,SAAS,CAACV,QAAO,IACtBS,KAAK9B,MAAMqB,OAAOO,K,oBAGtB,WACIE,KAAKC,SAAS,CAACT,QAAO,M,uBAG1B,WAAY,IAAD,OACPQ,KAAKC,SAAS,CAACV,QAAO,EAAOC,QAAO,IAAQ,WAAK,EAAKtB,MAAMkC,Y,4BAGhE,SAAeP,GACXQ,QAAQC,IAAI,qBAAsBT,GAClCG,KAAKC,SAAS,CAACJ,SAASA,EAAUZ,KAAKY,EAASZ,KAAMW,QAAO,M,oBAGjE,WACI,GAAsB,MAAnBI,KAAKZ,WAAmB,CACvB,IAAImB,GAAO,EAIX,OAH2B,OAAxBP,KAAKL,MAAME,WACVU,EAAQP,KAAK9B,MAAMsC,gBAAgBR,KAAKL,MAAME,SAASY,IAGvD,cADG,CACH,uBACOT,KAAKL,MAAMC,SAAWI,KAAKL,MAAMJ,QAAW,8BAC3C,cAACmB,EAAD,CAAcC,GAAIX,KAAKZ,WAAYwB,OAAQZ,KAAKN,mBAElDM,KAAKL,MAAMC,SAAWI,KAAKL,MAAMJ,QAAW,gCAAK,qBAAKR,IAAI,uBAAuBP,UAAU,WAAWQ,IAAI,SACxG,oBAAIR,UAAU,QAAd,2BAGA,wBAAQU,QAASc,KAAKR,OAAtB,kCACA,uBAAMhB,UAAU,OAAOqC,SAAUb,KAAKT,OAAtC,UACKgB,GAAQ,gCAAK,wBAAOO,QAAQ,OAAOtC,UAAU,UAAhC,2BACd,uBAAOuC,KAAK,OAAOC,GAAG,OAAO/B,KAAK,OAAOgC,UAAU,EAAMC,SAAUlB,KAAKX,iBAAkBc,MAAOH,KAAKL,MAAMV,UAAe,0BAC3H,uBAAO8B,KAAK,SAASZ,MAAM,cACxB,0BAEVH,KAAKL,MAAMJ,QAAU,cAAC4B,EAAD,CAAgB1B,UAAWO,KAAKP,UAAWuB,GAAIhB,KAAKZ,WAAYH,KAAMe,KAAKL,MAAMV,OACtGe,KAAKL,MAAMH,QAAU,cAAC4B,GAAD,CAAgB3B,UAAWO,KAAKP,UAAWgB,GAAIT,KAAKL,MAAME,SAASY,GAAIrB,WAAYY,KAAKZ,aAC9G,wBAAQF,QAASc,KAAK9B,MAAMkC,KAA5B,wBAIR,OACI,gCACI,mDACA,wBAAQlB,QAASc,KAAK9B,MAAMkC,KAA5B,4B,GAlEsBtD,IAAMuE,WAyEhD,SAASX,EAAaxC,GAElB,IAFyB,IAAD,EACOoD,mBAAShE,EAAa,CAACiE,UAAU,CAACP,GAAG9C,EAAMyC,IAAKa,YAAY,iBAApFC,EADiB,EACjBA,QAASC,EADQ,EACRA,KAAMC,EADE,EACFA,MAChBF,GACF,OAAO,2CAEX,OAAGE,GACCtB,QAAQC,IAAIqB,GACL,wBAEPzD,EAAM0C,OAAOc,EAAK7B,UACX,sCAIf,SAASsB,EAAejD,GAEpB,IAF2B,IAAD,EACgB0D,sBAAYnE,GAD5B,mBACnBoE,EADmB,YACFH,EADE,EACFA,KAAMD,EADJ,EACIA,QACxBA,GACF,OAAO,wCAQX,YANUK,IAAPJ,EACCG,EAAe,CAACN,UAAU,CAACP,GAAG9C,EAAM8C,GAAI/B,KAAKf,EAAMe,SAEnDoB,QAAQC,IAAIoB,GACZxD,EAAMuB,aAEH,KAGX,SAAS2B,GAAelD,GAGvB,IAH8B,IACf6D,EAAepD,qBAAW9B,GAA/BG,KADmB,EAEe4E,sBAAYpE,GAF3B,mBAEnBwE,EAFmB,YAEJN,EAFI,EAEJA,KAAMD,EAFF,EAEEA,QACzBA,GACL,OAAO,2CASL,YAPUK,IAAPJ,GACCM,EAAY,CAACT,UAAU,CAACvE,KAAK+E,EAAYE,IAAKxB,GAAGvC,EAAMuC,GAAIZ,SAAS3B,EAAMkB,cAC1EiB,QAAQC,IAAI,6BACC,MAARoB,IACLrB,QAAQC,IAAI,OAAQoB,GACpBxD,EAAMuB,aAEH,K,ICjHUyC,G,kDAIjB,WAAYhE,GAAQ,IAAD,8BACf,cAAMA,IACDyB,MAAQ,CAACwC,SAAS,KAAMC,QAAO,EAAOC,UAAS,EAAOC,QAAQ,GAAIC,cAAa,EAAOC,cAAa,GACxG,EAAKC,iBAAmB,EAAKA,iBAAiBnD,KAAtB,gBACxB,EAAKoD,eAAiB,EAAKA,eAAepD,KAApB,gBACtB,EAAKqD,cAAgB,EAAKA,cAAcrD,KAAnB,gBACrB,EAAK+C,SAAW,EAAKA,SAAS/C,KAAd,gBAChB,EAAKsD,UAAY,EAAKA,UAAUtD,KAAf,gBACjB,EAAKiD,aAAe,EAAKA,aAAajD,KAAlB,gBACpB,EAAKuD,eAAiB,EAAKA,eAAevD,KAApB,gBACtB,EAAKwD,aAAe,EAAKA,aAAaxD,KAAlB,gBACpB,EAAKyD,UAAY,EAAKA,UAAUzD,KAAf,gBAXF,E,oDAcnB,SAAiBQ,GACbA,EAAEC,mB,4BAGN,SAAeoC,GACXnC,KAAKC,SAAS,CAACkC,SAASA,EAAUC,QAAO,M,2BAG7C,WACIpC,KAAKC,SAAS,CAACkC,SAAS,KAAMC,QAAO,EAAOI,cAAa,M,4BAG7D,SAAe1C,GACXA,EAAEC,iBACFC,KAAKC,SAAS,CAACqC,QAAQxC,EAAEI,OAAOC,U,sBAEpC,WACIH,KAAKC,SAAS,CAACoC,UAAS,M,uBAE5B,WACIrC,KAAKC,SAAS,CAACoC,UAAS,M,0BAE5B,SAAavC,GACTA,EAAEC,iBACFC,KAAKC,SAAS,CAACsC,cAAa,M,0BAEhC,SAAaS,GAAO,IAAD,OACfhD,KAAKC,SAAS,CAACoC,UAAS,EAAOE,cAAa,EAAOD,QAAQ,KAAK,WAAK,EAAKI,eAAeM,Q,uBAE7F,WACIhD,KAAKC,SAAS,CAACuC,cAAa,M,oBAGhC,WAAU,IACCxF,EAAQgD,KAAKiD,QAAbjG,KACP,OACI,sCACMgD,KAAKL,MAAMyC,QAAU,qCAAE,oBAAI5D,UAAU,QAAd,0BAClBwB,KAAKL,MAAM0C,WAAarC,KAAKL,MAAM4C,cAAiB,wBAAQrD,QAASc,KAAKqC,SAAtB,eACrDrC,KAAKL,MAAM0C,WAAarC,KAAKL,MAAM4C,cAAiB,mCAClD,uBAAM/D,UAAU,OAAOqC,SAAUb,KAAKuC,aAAtC,UACI,wBAAOzB,QAAQ,OAAOtC,UAAU,UAAhC,2BACA,uBAAOuC,KAAK,OAAOC,GAAG,OAAO/B,KAAK,OAAOgC,UAAU,EAAMC,SAAUlB,KAAK6C,oBACxE,uBAAO9B,KAAK,SAASZ,MAAM,WAC3B,wBAAQjB,QAASc,KAAK4C,UAAtB,oBACO,uBAAK,uBACpB,cAACM,GAAD,CAAkBV,aAAcxC,KAAKL,MAAM6C,aAAcO,UAAW/C,KAAK+C,UAAWL,eAAgB1C,KAAK0C,iBACvG1C,KAAKL,MAAM0C,UAAYrC,KAAKL,MAAM4C,cAAiB,cAACY,GAAD,CAAa1C,GAAIzD,EAAKiF,IAAKhD,KAAMe,KAAKL,MAAM2C,QAASc,YAAapD,KAAK8C,kBAE/H9C,KAAKL,MAAMyC,QAAU,cAAC,EAAD,CAAc5B,cAAexD,EAAKiF,IAAK7C,WAAYY,KAAKL,MAAMwC,SAAU5C,OAAQS,KAAKyC,iBAAkBrC,KAAMJ,KAAK2C,uB,GAnEjH7F,IAAMuE,WAyEtC,SAAS6B,GAAiBhF,GAAM,MACPS,qBAAW9B,GAAhCG,EAD4B,EAC5BA,KAAMC,EADsB,EACtBA,YACViB,EAAMsE,eACLvF,IACAiB,EAAM6E,aAEV,IAAMM,EAAe,GACrBA,EAAaC,OACb,IAAK,IAAIC,EAAI,EAAGA,EAAEvG,EAAKwG,UAAUC,OAAQF,IACrCF,EAAaC,KAAK,cAACI,GAAD,CAAU7D,SAAU7C,EAAKwG,UAAUD,GAAIb,eAAgBxE,EAAMwE,kBAEnF,OACI,qCAC8B,IAAxB1F,EAAKwG,UAAUC,QAAe,sFACN,IAAxBzG,EAAKwG,UAAUC,QAAeJ,KAK5C,SAASK,GAASxF,GACd,OACI,sBAAKM,UAAU,WAAf,UACI,mBAAYA,UAAU,gBAAtB,SAAuCN,EAAM2B,SAASZ,MAA/C,MACP,6BAAI,6BACA,wBAAQC,QAAS,kBAAMhB,EAAMwE,eAAexE,EAAM2B,SAASoC,MAA3D,mBADQ,mBASxB,SAASkB,GAAYjF,GACjBmC,QAAQC,IAAI,UAGf,IAJ0B,IAEXyB,EAAepD,qBAAW9B,GAA/BG,KAFgB,EAGkB4E,sBAAYrE,GAH9B,mBAGhBoG,EAHgB,YAGDjC,EAHC,EAGDA,KAAMD,EAHL,EAGKA,QACzBA,GACL,OAAO,2CASL,YAPUK,IAAPJ,GACCiC,EAAY,CAACpC,UAAU,CAACd,GAAGsB,EAAYE,IAAKhD,KAAKf,EAAMe,QACvDoB,QAAQC,IAAI,0BACC,MAARoB,IACLrB,QAAQC,IAAI,OAAQoB,GACpBxD,EAAMkF,YAAY1B,EAAKnE,YAAY0E,MAEhC,KC9HJ,SAAS2B,GAAeC,EAAO1B,GAClC,IAAI2B,EAAW,GACf,QAAoBhC,IAAjB+B,EAAM,GAAGE,MACR,IAAK,IAAIR,EAAE,EAAGA,EAAEM,EAAMJ,OAAQF,IACvBM,EAAMN,GAAGQ,QAAQ5B,EAChB2B,EAASR,KAAK,wBAAQnD,MAAO0D,EAAMN,GAAGQ,MAAxB,SAAwCF,EAAMN,GAAGtE,MAAbsE,IAElDO,EAASR,KAAK,wBAAQnD,MAAO0D,EAAMN,GAAGQ,MAAe5B,UAAQ,EAA/C,SAAiD0B,EAAMN,GAAGtE,MAAtBsE,SAGxD,QAAmBzB,IAAf+B,EAAM,GAAG5B,IACf,IAAK,IAAIsB,EAAE,EAAGA,EAAEM,EAAMJ,OAAQF,IACvBM,EAAMN,GAAGQ,QAAQ5B,EAChB2B,EAASR,KAAK,wBAAQnD,MAAO0D,EAAMN,GAAGtB,IAAxB,SAAsC4B,EAAMN,GAAGtE,MAAbsE,IAEhDO,EAASR,KAAK,wBAAQnD,MAAO0D,EAAMN,GAAGtB,IAAaE,UAAQ,EAA7C,SAA+C0B,EAAMN,GAAGtE,MAAtBsE,IAI5D,OAAOO,EDZU5B,GAEV8B,YAAcnH,E,IEFJoH,G,kDAIjB,WAAY/F,GAAO,IAAD,8BACd,cAAMA,IACDlB,KAAO,EAAKkB,MAAM6D,YACvB,EAAKmC,YAAc,EAAKhG,MAAMgG,YAC9B,EAAKC,aAAe,EAAKA,aAAa7E,KAAlB,gBACpB,EAAK8E,aAAe,EAAKA,aAAa9E,KAAlB,gBACpB,EAAKK,MAAQ,CAAC0E,UAAU,KAAMC,WAAU,EAAOC,eAAc,EAAOtF,KAAK,GAAIuF,KAAK,GAAIC,GAAG,GAAI5E,SAAS,IANxF,E,gDASlB,SAAawE,GACTrE,KAAKC,SAAS,CAACoE,UAAUA,M,0BAG7B,WACIrE,KAAKC,SAAS,CAACqE,WAAU,EAAOrF,KAAK,GAAIuF,KAAK,GAAIC,GAAG,GAAI5E,SAAS,KAClEG,KAAK9B,MAAMkC,S,oBAGf,WAEI,OADAC,QAAQC,IAAIN,KAAKL,MAAMV,KAAMe,KAAKL,MAAM6E,KAAMxE,KAAKL,MAAME,SAAUG,KAAKL,MAAM8E,IACvE,qCACH,wBAAQjG,UAAU,aAAaU,QAASc,KAAK9B,MAAMkC,KAAnD,kBAEA,cAACsE,GAAD,CAAeJ,UAAWtE,KAAKsE,UAAWC,cAAevE,KAAKuE,cAAevH,KAAMgD,KAAKhD,KAAMqH,UAAWrE,KAAKL,MAAM0E,UAAWM,IAA4B,OAAvB3E,KAAKL,MAAM0E,UAAkBjE,KAAMJ,KAAK9B,MAAMkC,OAC5J,OAAnBJ,KAAKkE,aAA6C,OAAvBlE,KAAKL,MAAM0E,WAAsB,cAACO,GAAD,CAAejE,GAAIX,KAAKkE,YAAatD,OAAQZ,KAAKmE,sB,GA5BlFrH,IAAMuE,WAiCjD,SAASuD,GAAc1G,GACnBmC,QAAQC,IAAIpC,EAAMyC,IAElB,IAHyB,MAEMW,mBAAS5D,EAAc,CAAC6D,UAAU,CAACP,GAAG9C,EAAMyC,IAAKa,YAAY,iBAArFC,EAFkB,EAElBA,QAASC,EAFS,EAETA,KAAMC,EAFG,EAEHA,MAChBF,GACF,OAAO,2CAEX,OAAGE,GACCtB,QAAQC,IAAIqB,GACL,wBAEPtB,QAAQC,IAAIoB,GACZxD,EAAM0C,OAAOc,EAAK2C,WACX,sCAgBf,SAASK,GAAcxG,GACnBmC,QAAQC,IAAI,iBAAkBpC,EAAMyG,KADX,MAEoBrD,mBAAStD,GAAvC6G,EAFU,EAElBpD,QAA0BqD,EAFR,EAEGpD,KAFH,EAGsBJ,mBAASvD,GAAzCgH,EAHU,EAGlBtD,QAA2BuD,EAHT,EAGItD,KAHJ,EAIE9C,mBAAS,GAJX,mBAIlBqG,EAJkB,KAKzB,IALyB,KAKnBF,GAAcF,GAChB,OAAO,2CAEX,IAAIK,EAAQ,CACPhH,EAAMyG,IAAM,cAACQ,GAAD,CAAgBC,MAAON,EAASM,MAAOpI,KAAMkB,EAAMlB,KAAMuC,OAAQrB,EAAMoG,UAAWlE,KAAMlC,EAAMkC,OAAU,cAACiF,GAAD,CAAqBhB,UAAWnG,EAAMmG,UAAWiB,QAASN,EAAUM,QAAS/F,OAAQrB,EAAMqG,cAAenE,KAAMlC,EAAMkC,QAQ/O,OANA8E,EAAMK,SAAQ,SAAAC,GACPA,IAAUN,EAAMD,KACfO,EAAU,SAIV,8BACHN,IAIT,SAASC,GAAejH,GAOpB,IAP2B,IACpBlB,EAAQ2B,qBAAW9B,GAAnBG,KADmB,EAEC4B,mBAAS,IAFV,mBAEnBK,EAFmB,KAEbwG,EAFa,OAGK7G,mBAAS,IAHd,mBAGnB8G,EAHmB,KAGPC,EAHO,OAIC/G,mBAAS,IAJV,mBAInB4F,EAJmB,KAIboB,EAJa,OAKShH,mBAAS,IALlB,mBAKnBiB,EALmB,KAKTgG,EALS,OAM8BjE,sBAAYjE,EAAc,CAAC4D,UAAU,CAACvE,KAAKA,EAAKiF,IAAKpC,SAASA,EAAUZ,KAAKA,EAAMuF,KAAKA,EAAMkB,WAAWA,KANvI,mBAMnBI,EANmB,YAMCC,EAND,EAMPtE,QAAyBuE,EANlB,EAMatE,KACjCqE,GACF,OAAO,2CAKX,YAHajE,IAAVkE,GACC9H,EAAMkC,OAEF,uBAAMS,SAAUiF,EAAhB,UACJ,uBAAO/E,KAAK,WAAW,uBACvB,wBAAOD,QAAQ,OAAOtC,UAAU,UAAhC,kBACA,uBAAOuC,KAAK,OAAOC,GAAG,OAAO/B,KAAK,OAAOgC,UAAU,EAAMC,SAAU,SAACpB,GAAKA,EAAEC,iBAAiB0F,EAAW3F,EAAEI,OAAOC,QAASA,MAAOlB,OAChI,cAACgH,GAAD,CAAgBjF,GAAG,WAAWwC,UAAWxG,EAAKwG,UAAWqC,eAAgBA,IAAiB,uBAC1F,wBAAO/E,QAAQ,KAAKtC,UAAU,UAA9B,oCACA,0BAAUwC,GAAG,KAAK/B,KAAK,KAAKiC,SAAU,SAACpB,GAAKA,EAAEC,iBAAiB4F,EAAS7F,EAAEI,OAAOC,QAASA,MAAOuF,EAAYQ,KAAK,IAAIC,KAAK,KAAKC,UAAU,WAAe,uBACzJ,cAACC,GAAD,CAAYrF,GAAG,OAAOoE,MAAOlH,EAAMkH,MAAOQ,WAAYA,IAAa,0BAI3E,SAASP,GAAoBnH,GAAO,IACzBlB,EAAQ2B,qBAAW9B,GAAnBG,KACDqH,EAAYnG,EAAMmG,UAFO,EAGIzF,mBAASyF,EAAUxE,UAHvB,mBAGxBA,EAHwB,KAGdgG,EAHc,OAIEjH,mBAASyF,EAAUiC,OAJrB,mBAIxBC,EAJwB,KAIbC,EAJa,OAKN5H,mBAASyF,EAAUoC,KALb,mBAKxBA,EALwB,KAKnBC,EALmB,OAMN9H,mBAASyF,EAAUsC,KANb,mBAMxBA,EANwB,KAMnBC,EANmB,OAONhI,mBAASyF,EAAUwC,KAPb,mBAOxBA,EAPwB,KAOnBC,EAPmB,OAQNlI,mBAASyF,EAAU0C,KARb,mBAQxBA,EARwB,KAQnBC,EARmB,OASNpI,mBAASyF,EAAU4C,KATb,mBASxBA,EATwB,KASnBC,EATmB,OAUNtI,mBAASyF,EAAU8C,KAVb,mBAUxBA,EAVwB,KAUnBC,EAVmB,KAW/B/G,QAAQC,IAAIiG,GAMZ,IAjB+B,MAYA3H,oBAAS,GAZT,mBAYxByI,EAZwB,KAYhBC,EAZgB,OAaJ1I,mBAASyF,EAAUpF,MAbf,mBAaxBA,EAbwB,KAalBwG,EAbkB,OAc4B7D,sBAAY9D,EAAiB,CAACyD,UAAU,CAAC8C,UAAUA,EAAUpC,IAAKjF,KAAKqH,EAAUrH,KAAM6C,SAASwE,EAAUxE,YAdtI,mBAcxB0H,EAdwB,aAcDC,GAdC,GAcT/F,QAAyBgG,GAdhB,GAcW/F,KAdX,GAe4BE,sBAAYhE,EAAqB,CAAC2D,UAAU,CAACP,GAAGqD,EAAUpC,IAAKhD,KAAKA,EAAMY,SAASA,KAf/G,qBAexB6H,GAfwB,eAeHC,GAfG,GAeXlG,QAA0BmG,GAff,GAeUlG,KAfV,GAgB+BE,sBAAY/D,EAAsB,CAAC0D,UAAU,CAACP,GAAGqD,EAAUpC,IAAKqE,MAAMC,EAAWY,IAAIU,SAASV,GAAMN,IAAIgB,SAAShB,GAAMJ,IAAIoB,SAASpB,GAAME,IAAIkB,SAASlB,GAAMI,IAAIc,SAASd,GAAME,IAAIY,SAASZ,MAhB5N,qBAgBxBa,GAhBwB,eAgBFC,GAhBE,GAgBVtG,QAA2BuG,GAhBjB,GAgBYtG,KACrC8F,IAAYG,IAAaI,IAI3B,OAHGP,IACCnH,QAAQC,IAAI+D,EAAUpC,IAAKoC,EAAUrH,KAAMqH,EAAUxE,UAElD,wCAKX,YAHaiC,IAAV2F,SAAgC3F,IAAX8F,SAAkC9F,IAAZkG,IAC1C9J,EAAMkC,OAEF,qCAAE,gCAAK,6BAAKiE,EAAUpF,OAC1B,wBAAQC,QAASqI,EAAjB,iCACCF,EAAS,mCACN,uBAAMxG,SAAU6G,GAAhB,UACI,wBAAO5G,QAAQ,OAAOtC,UAAU,UAAhC,kBACA,uBAAOuC,KAAK,OAAOC,GAAG,OAAO/B,KAAK,OAAOgC,UAAU,EAAMC,SAAU,SAACpB,GAAKA,EAAEC,iBAAiB0F,EAAW3F,EAAEI,OAAOC,QAASA,MAAOlB,OAChI,cAACgH,GAAD,CAAgBjF,GAAG,WAAWiH,QAASpI,EAAU2D,UAAWxG,EAAKwG,UAAWqC,eAAgBA,IAC5F,uBAAO9E,KAAK,WAAU,wBAAQ7B,QAAS,WAAKoI,GAAcD,IAApC,yBAExB,qCAAE,wBAAQnI,QAAS,WAAKoI,GAAcD,IAApC,mCAA4E,0BACpF,uBAAMxG,SAAUiH,GAAhB,UACI,uBAAO/G,KAAK,WAAW,uBACvB,cAACmH,GAAD,CAAalH,GAAG,QAAQiH,QAAS1B,EAAWjB,QAASpH,EAAMoH,QAASkB,YAAaA,IAAc,uBAC/F,wBAAO1F,QAAQ,MAAMtC,UAAU,UAA/B,iBACA,uBAAOuC,KAAK,SAASC,GAAG,MAAM/B,KAAK,MAAMkJ,IAAI,IAAIC,IAAI,KAAKnH,UAAU,EAAMC,SAAU,SAACpB,GAAKA,EAAEC,iBAAiB2G,EAAU5G,EAAEI,OAAOC,QAASA,MAAOsG,OAChJ,wBAAO3F,QAAQ,MAAMtC,UAAU,UAA/B,iBACA,uBAAOuC,KAAK,SAASC,GAAG,MAAM/B,KAAK,MAAMkJ,IAAI,IAAIC,IAAI,KAAKnH,UAAU,EAAMC,SAAU,SAACpB,GAAKA,EAAEC,iBAAiB6G,EAAU9G,EAAEI,OAAOC,QAASA,MAAOwG,OAChJ,wBAAO7F,QAAQ,MAAMtC,UAAU,UAA/B,iBACA,uBAAOuC,KAAK,SAASC,GAAG,MAAM/B,KAAK,MAAMkJ,IAAI,IAAIC,IAAI,KAAKnH,UAAU,EAAMC,SAAU,SAACpB,GAAKA,EAAEC,iBAAiB+G,EAAUhH,EAAEI,OAAOC,QAASA,MAAO0G,OAChJ,wBAAO/F,QAAQ,MAAMtC,UAAU,UAA/B,iBACA,uBAAOuC,KAAK,SAASC,GAAG,MAAM/B,KAAK,MAAMkJ,IAAI,IAAIC,IAAI,KAAKnH,UAAU,EAAMC,SAAU,SAACpB,GAAKA,EAAEC,iBAAiBiH,EAAUlH,EAAEI,OAAOC,QAASA,MAAO4G,OAChJ,wBAAOjG,QAAQ,MAAMtC,UAAU,UAA/B,iBACA,uBAAOuC,KAAK,SAASC,GAAG,MAAM/B,KAAK,MAAMkJ,IAAI,IAAIC,IAAI,KAAKnH,UAAU,EAAMC,SAAU,SAACpB,GAAKA,EAAEC,iBAAiBmH,EAAUpH,EAAEI,OAAOC,QAASA,MAAO8G,OAChJ,wBAAOnG,QAAQ,MAAMtC,UAAU,UAA/B,iBACA,uBAAOuC,KAAK,SAASC,GAAG,MAAM/B,KAAK,MAAMkJ,IAAI,IAAIC,IAAI,KAAKnH,UAAU,EAAMC,SAAU,SAACpB,GAAKA,EAAEC,iBAAiBqH,EAAUtH,EAAEI,OAAOC,QAASA,MAAOgH,aAK5J,SAASe,GAAYhK,GACjB,IAAImK,EAAezE,GAAe1F,EAAMoH,QAASpH,EAAM+J,SACvD,OACI,wBAAOnH,QAAQ,QAAQtC,UAAU,UAAjC,mBACI,wBAAQwC,GAAG,UAAU/B,KAAK,UAAUiC,SAAU,SAACpB,GAAK5B,EAAMsI,YAAYtI,EAAMoH,QAAQxF,EAAEI,OAAOoI,eAAevE,QAA5G,SACKsE,OAMjB,SAAShC,GAAWnI,GAAO,IAAD,EACaU,mBAAS,GADtB,mBACfuD,EADe,KACLO,EADK,KAElB6F,EAAc3E,GAAe1F,EAAMkH,OACvC,OACI,gCAAK,wBAAOtE,QAAQ,QAAQtC,UAAU,UAAjC,kBACD,wBAAQwC,GAAG,QAAQ/B,KAAK,QAAQiC,SAAU,SAACpB,GAAK5B,EAAM0H,WAAW1H,EAAMkH,MAAMtF,EAAEI,OAAOoI,eAAevE,OAAQrB,EAAe5C,EAAEI,OAAOoI,gBAArI,SACKC,OAEL,4BAAIrK,EAAMkH,MAAMjD,GAAUqG,eAKtC,SAASvC,GAAe/H,GACpB,IAAMuK,EAAkB7E,GAAe1F,EAAMsF,UAAWtF,EAAM+J,SAC9D,OAAO,mCACH,wBAAOnH,QAAQ,YAAYtC,UAAU,UAArC,sBACI,wBAAQwC,GAAG,YAAY/B,KAAK,YAAYiC,SAAU,SAACpB,GAAK5B,EAAM2H,eAAe3H,EAAMsF,UAAU1D,EAAEI,OAAOoI,eAAerG,MAArH,SACKwG,SA/LIxE,GAEVD,YAAcnH,E,ICJJ6L,G,kDAIjB,WAAYxK,GAAQ,IAAD,8BACf,cAAMA,IACDyB,MAAQ,CAACwC,SAAS,KAAMC,QAAO,EAAOI,cAAa,EAAOmG,aAAY,GAC3E,EAAKlG,iBAAmB,EAAKA,iBAAiBnD,KAAtB,gBACxB,EAAKoD,eAAiB,EAAKA,eAAepD,KAApB,gBACtB,EAAKqD,cAAgB,EAAKA,cAAcrD,KAAnB,gBACrB,EAAK+C,SAAW,EAAKA,SAAS/C,KAAd,gBAChB,EAAKyD,UAAY,EAAKA,UAAUzD,KAAf,gBAPF,E,oDAUnB,SAAiBQ,GACbA,EAAEC,mB,4BAGN,SAAeoC,GACXnC,KAAKC,SAAS,CAACkC,SAASA,EAAUC,QAAO,M,2BAG7C,WACIpC,KAAKC,SAAS,CAACkC,SAAS,KAAMC,QAAO,EAAOI,cAAa,M,sBAE7D,WACIxC,KAAKC,SAAS,CAACmC,QAAO,M,uBAE1B,WACIpC,KAAKC,SAAS,CAACuC,cAAa,M,oBAGhC,WAAU,IACCxF,EAAQgD,KAAKiD,QAAbjG,KACP,OACI,qCACI,oBAAIwB,UAAU,QAAd,2BACEwB,KAAKL,MAAMyC,QAAU,qCACnB,wBAAQlD,QAASc,KAAKqC,SAAtB,2BACA,cAACuG,GAAD,CAAmBpG,aAAcxC,KAAKL,MAAM6C,aAAcO,UAAW/C,KAAK+C,UAAWL,eAAgB1C,KAAK0C,oBAE7G1C,KAAKL,MAAMyC,QAAU,cAAC,GAAD,CAAeL,YAAa/E,EAAMkH,YAAalE,KAAKL,MAAMwC,SAAU5C,OAAQS,KAAKyC,iBAAkBrC,KAAMJ,KAAK2C,uB,GAzC5G7F,IAAMuE,WA+C9C,SAASuH,GAAkB1K,GAAM,MACDS,qBAAW9B,GAAhCG,EADsB,EACtBA,KAAMC,EADgB,EAChBA,YACViB,EAAMsE,eACLvF,IACAiB,EAAM6E,aAGV,IADA,IAAM8F,EAAgB,GACbtF,EAAI,EAAGA,EAAEvG,EAAK8L,WAAWrF,OAAQF,IACtCsF,EAAcvF,KAAK,cAACyF,GAAD,CAAW1E,UAAWrH,EAAK8L,WAAWvF,GAAIb,eAAgBxE,EAAMwE,kBAEvF,OACI,gCAC+B,IAAzB1F,EAAK8L,WAAWrF,QAAe,0EACP,IAAxBzG,EAAKwG,UAAUC,QAAeoF,KAK5C,SAASE,GAAU7K,GACf,OACI,sBAAKM,UAAU,YAAf,UACI,mBAAYA,UAAU,gBAAtB,SAAuCN,EAAMmG,UAAUpF,MAAhD,MACP,6BAAI,6BACA,wBAAQC,QAAS,kBAAMhB,EAAMwE,eAAexE,EAAMmG,UAAUpC,MAA5D,mBADQ,mBArEHyG,GAEV1E,YAAcnH,ECeVmM,OAZf,SAAoB9K,GAChB,OACI,wBAAQM,UAAU,aAAlB,SACI,eAAC,IAAD,eACI,cAAC,IAAD,CAAOyK,OAAK,EAACC,KAAK,IAAIC,UAAW1K,IACjC,cAAC,IAAD,CAAOwK,OAAK,EAACC,KAAK,aAAaC,UAAWjH,KAC1C,cAAC,IAAD,CAAO+G,OAAK,EAACC,KAAK,cAAcC,UAAWT,WCP5C,SAASU,GAAKlL,GAAM,MAIqBoD,mBAASnE,EAAS,CAACoE,UAAU,CAAC8H,SAAUnL,EAAMmL,SAAUC,SAAUpL,EAAMoL,UAAWC,6BAA4B,EAAM/H,YAAY,iBAAjLC,EAJ2B,EAI3BA,QAASC,EAJkB,EAIlBA,KAAMC,EAJY,EAIZA,MAAO6H,EAJK,EAILA,QAASC,EAJJ,EAIIA,cAGtC,IAFApJ,QAAQC,IAAI,iBAAkBoB,GAExB+H,IAAgBC,gBAAcF,SACnC,OAAQ,qCAAE,cAACvL,EAAD,CAAQ8D,YAAaL,EAAK1E,OAAO,iCAAQ,6DAEpD,KAAMyE,GACL,OAAQ,iCAAyB,6CAElC,GAAGE,EACF,OAAQ,2FAET,GAAW,MAARD,EAAa,CACf,IAAMuB,EAAU,CAAEjG,KAAK0E,EAAK1E,KAAMC,YAAYuM,GAC9C,OACC,qCAAE,cAACvL,EAAD,CAAQ8D,YAAaL,EAAK1E,OAC5B,cAACH,EAAY8M,SAAb,CAAsBxJ,MAAO8C,EAA7B,SACC,cAAC,GAAD,SAKF,OADA/E,EAAM0L,WACE,sDC2CV,SAASC,GAAQ3L,GAGhB,IAHuB,IAAD,EACyBoD,mBAASnE,EAAS,CAACoE,UAAW,CAAC8H,SAASnL,EAAMmL,SAAUC,SAASpL,EAAM4L,aAA1GC,EADU,EACfrI,KAAwBsI,EADT,EACCvI,QADD,EAEeG,sBAAYvE,GAF3B,mBAEf4M,EAFe,YAEJvI,EAFI,EAEJA,KAAMD,EAFF,EAEEA,QAClBuI,GACL,OAAO,8DAER,GAAoB,OAAjBD,EAAU/M,KAAY,CAExB,IADAqD,QAAQC,IAAI,8BACNmB,GACL,OAAO,2CAER,QAAUK,IAAPJ,EACFrB,QAAQC,IAAI,eACZ2J,EAAQ,CAAC1I,UAAU,CAACtC,KAAKf,EAAMe,KAAMiL,MAAMhM,EAAMgM,MAAOb,SAASnL,EAAMmL,SAAUC,SAASpL,EAAMoL,iBAC3F,GAAS,MAAN5H,EAER,OADArB,QAAQC,IAAIoB,GAEX,qCACC,0CAAaxD,EAAMe,QACnB,cAAC,IAAD,CAAMV,GAAG,GAAT,6BAMH,GAAe,OAAZwL,EAEH,OADA1J,QAAQC,IAAI,sBAAuByJ,EAAWrI,GAE7C,sEAKYyI,O,kDAtGX,WAAYjM,GAAQ,IAAD,8BACf,cAAMA,IACPkM,WAAa,EAAKlM,MAAMkM,WAC7B,EAAK/K,iBAAmB,EAAKA,iBAAiBC,KAAtB,gBACxB,EAAK+K,kBAAoB,EAAKA,kBAAkB/K,KAAvB,gBACzB,EAAKgL,qBAAuB,EAAKA,qBAAqBhL,KAA1B,gBAC5B,EAAKiL,qBAAuB,EAAKA,qBAAqBjL,KAA1B,gBAC5B,EAAKkL,sBAAwB,EAAKA,sBAAsBlL,KAA3B,gBAC7B,EAAKK,MAAQ,CAAC8K,SAAQ,EAAOC,YAAW,EAAOzL,KAAK,GAAIiL,MAAM,GAAIb,SAAS,GAAIC,SAAS,IARnE,E,oDAUtB,SAAiBxJ,GAChBA,EAAEC,iBACFC,KAAKC,SAAS,CAAChB,KAAMa,EAAEI,OAAOC,U,+BAE/B,SAAkBL,GACjBA,EAAEC,iBACFC,KAAKC,SAAS,CAACiK,MAAOpK,EAAEI,OAAOC,U,kCAEhC,SAAqBL,GACdA,EAAEC,iBACFC,KAAKC,SAAS,CAACoJ,SAAUvJ,EAAEI,OAAOC,U,kCAEtC,SAAqBL,GACjBA,EAAEC,iBACFC,KAAKC,SAAS,CAACqJ,SAAUxJ,EAAEI,OAAOC,U,mCAGtC,SAAsBL,GAClBA,EAAEC,iBACHC,KAAKL,MAAMV,MAAUe,KAAKL,MAAMuK,OAAWlK,KAAKL,MAAM0J,UAAcrJ,KAAKL,MAAM2J,SACnFtJ,KAAKC,SAAS,CAACyK,YAAY,IAE3B1K,KAAKC,SAAS,CAACwK,SAAS,M,oBAKvB,WACI,OACI,cADG,CACH,uBACMzK,KAAKL,MAAM+K,YACxB,gCACC,qBAAK3L,IAAI,uBAAuB4L,MAAM,MAAM3L,IAAI,SAChD,oBAAIR,UAAU,QAAd,qBAGA,uBAAMA,UAAU,OAAOqC,SAAUb,KAAKwK,sBAAtC,UACC,wBAAO1J,QAAQ,WAAWtC,UAAU,UAApC,uBACA,uBAAOuC,KAAK,OAAOC,GAAG,WAAW/B,KAAK,WAAWgC,UAAU,EAAMC,SAAUlB,KAAKX,iBAAkBc,MAAOH,KAAKL,MAAMV,UAAe,uBACnI,wBAAO6B,QAAQ,QAAQtC,UAAU,UAAUS,KAAK,UAAhD,mBACA,uBAAO8B,KAAK,QAAQC,GAAG,QAAQ/B,KAAK,QAAQgC,UAAU,EAAMC,SAAUlB,KAAKqK,kBAAmBlK,MAAOH,KAAKL,MAAMuK,WAAgB,uBAChI,wBAAOpJ,QAAQ,WAAWtC,UAAU,UAAUS,KAAK,UAAnD,sBACA,uBAAO8B,KAAK,WAAWC,GAAG,WAAW/B,KAAK,WAAWgC,UAAU,EAAMC,SAAUlB,KAAKsK,qBAAsBnK,MAAOH,KAAKL,MAAM0J,cAAmB,uBAC/I,wBAAOvI,QAAQ,WAAWtC,UAAU,UAAUS,KAAK,UAAnD,sBACA,uBAAO8B,KAAK,WAAWC,GAAG,WAAW/B,KAAK,WAAWgC,UAAU,EAAMC,SAAUlB,KAAKuK,qBAAsBpK,MAAOH,KAAKL,MAAM2J,cAAmB,uBAC/I,uBAAOvI,KAAK,SAASZ,MAAM,cACrB,0BAGRH,KAAKL,MAAM+K,YAAc,cAACb,GAAD,CAAS5K,KAAMe,KAAKL,MAAMV,KAAMiL,MAAOlK,KAAKL,MAAMuK,MAAOb,SAAUrJ,KAAKL,MAAM0J,SAAUC,SAAUtJ,KAAKL,MAAM2J,WACtItJ,KAAKL,MAAM8K,SAAW,yEACvB,wBAAQvL,QAASc,KAAKoK,WAAYnL,KAAK,OAAO2L,QAAQ,WAAtD,qC,GA9DmB9N,IAAMuE,WCkEdwJ,G,kDApEX,WAAY3M,GAAQ,IAAD,8BACf,cAAMA,IACD4M,YAAc,EAAK5M,MAAM4M,YAC9B,EAAKC,SAAW,EAAK7M,MAAM6M,SAC3B,EAAKnB,SAAW,EAAK1L,MAAM0L,SAC3B,EAAKQ,WAAa,EAAKA,WAAW9K,KAAhB,gBAClB,EAAK0L,cAAgB,EAAKA,cAAc1L,KAAnB,gBACrB,EAAK2L,mBAAqB,EAAKA,mBAAmB3L,KAAxB,gBAC1B,EAAKgL,qBAAuB,EAAKA,qBAAqBhL,KAA1B,gBAC5B,EAAKiL,qBAAuB,EAAKA,qBAAqBjL,KAA1B,gBAC5B,EAAKK,MAAQ,CAAC+K,YAAW,EAAMQ,UAAU,EAAO7B,SAAU,GAAIC,SAAU,IAVzD,E,wDAanB,SAAqBxJ,GACjBA,EAAEC,iBACFC,KAAKC,SAAS,CAACoJ,SAAUvJ,EAAEI,OAAOC,U,kCAGtC,SAAqBL,GACjBA,EAAEC,iBACFC,KAAKC,SAAS,CAACqJ,SAAUxJ,EAAEI,OAAOC,U,gCAItC,SAAmBL,GACfA,EAAEC,iBACFC,KAAK8K,YAAY9K,KAAKL,MAAM0J,SAAUrJ,KAAKL,MAAM2J,UACjDtJ,KAAKC,SAAS,CAACiL,UAAU,IACzBlL,KAAK+K,a,2BAGT,WACI/K,KAAKC,SAAS,CAACyK,YAAY,M,wBAG/B,WACI1K,KAAKC,SAAS,CAACyK,YAAY,M,oBAG/B,WACI,OACI,yBAAQlM,UAAU,aAAlB,WACOwB,KAAKL,MAAMuL,UAAYlL,KAAKL,MAAM+K,YAChC,gCAAK,uBAAM1J,GAAG,OAAOxC,UAAU,OAAOqC,SAAUb,KAAKiL,mBAAhD,UACF,0EACA,wBAAOnK,QAAQ,OAAf,sBACI,uBAAOC,KAAK,WAAW9B,KAAK,OAAO+B,GAAG,OAAOC,UAAU,EAAMkK,WAAW,EAAMjK,SAAUlB,KAAKsK,qBAAsBnK,MAAOH,KAAKL,MAAM0J,cACjI,uBACR,wBAAOvI,QAAQ,OAAf,sBACI,uBAAOC,KAAK,WAAW9B,KAAK,OAAO+B,GAAG,OAAOC,UAAU,EAAMC,SAAUlB,KAAKuK,qBAAsBpK,MAAOH,KAAKL,MAAM2J,cAChH,uBACR,uBAAOvI,KAAK,SAASZ,MAAM,SAASyK,QAAQ,aAC5C,wBAAO9J,QAAQ,gBAAf,yBACI,uBAAOC,KAAK,WAAWC,GAAG,gBAAgB/B,KAAK,gBAAgBkB,MAAOH,KAAKL,MAAMuL,iBAGzF,wBAAQjM,KAAK,QAAQ2L,QAAQ,WAAW1L,QAASc,KAAKgL,cAAtD,sBAGChL,KAAK4J,UAAY,gGAGnB5J,KAAKL,MAAM+K,aAAe1K,KAAKL,MAAMuL,UAAa,cAAC,GAAD,CAAUd,WAAYpK,KAAKoK,oB,GAhE5EtN,IAAMuE,WCuCX+J,G,kDArCX,WAAYlN,GAAQ,IAAD,8BACf,cAAMA,IACPmN,UAAY,EAAKA,UAAU/L,KAAf,gBACX,EAAKgM,YAAc,EAAKA,YAAYhM,KAAjB,gBACnB,EAAKiM,aAAe,EAAKA,aAAajM,KAAlB,gBACpB,EAAKkM,UAAY,EAAKA,UAAUlM,KAAf,gBACvB,EAAKK,MAAQ,CAAC0J,SAAS,GAAIC,SAAS,GAAItI,GAAG,GAAIyK,YAAY,EAAOC,YAAY,GANzD,E,6CAStB,SAAUrC,EAAUC,GAAU,IAAD,OAC5BtJ,KAAKC,SAAS,CAACoJ,SAAUA,EAAUC,SAAUA,IAAW,WAAKjJ,QAAQC,IAAI,EAAKX,MAAM0J,SAAU,EAAK1J,MAAM2J,e,yBAIvG,WACItJ,KAAKC,SAAS,CAACyL,YAAY,EAAMD,YAAY,IAAQ,WAAKpL,QAAQC,IAAI,kB,0BAG1E,WACIN,KAAKC,SAAS,CAACwL,YAAY,EAAMC,YAAY,IAAQ,WAAKrL,QAAQC,IAAI,gC,uBAG1E,SAAUU,GAAI,IAAD,OACThB,KAAKC,SAAS,CAACqJ,SAAS,GAAItI,GAAGA,EAAI0K,YAAW,IAAQ,WAAK,EAAKJ,mB,oBAGpE,WAEI,OACI,sBAAK9M,UAAU,MAAf,WACMwB,KAAKL,MAAM+L,YAAc,cAAC,GAAD,CAAOC,WAAY3L,KAAKL,MAAM8L,WAAYX,YAAa9K,KAAKqL,UAAWN,SAAU/K,KAAKsL,cAChHtL,KAAKL,MAAM+L,YAAc,cAACtC,GAAD,CAAMC,SAAUrJ,KAAKL,MAAM0J,SAAUC,SAAUtJ,KAAKL,MAAM2J,SAAUtI,GAAIhB,KAAKL,MAAMqB,GAAI4I,SAAU5J,KAAKuL,aAAcC,UAAWxL,KAAKwL,mB,GAhC5J1O,IAAMuE,WCOXuK,GAAe,IAAIC,eAAa,CAC3CC,IAAK,WACLC,MAAO,IAAIC,gBACXC,QAAS,YAAsC,IAAnCC,EAAkC,EAAlCA,aAAcC,EAAoB,EAApBA,cACxB9L,QAAQC,IAAI,gBAAiB6L,GAC7B9L,QAAQC,IAAI,eAAgB4L,MAIhCE,IAASC,OACP,cAAC,iBAAD,CAAgBC,OAAUV,GAA1B,SACE,eAAC,IAAD,WACE,sBAAM3M,KAAK,WAAWsN,QAAQ,0CAAyC,cAAC,GAAD,SAG3EC,SAASC,eAAe,W","file":"static/js/main.963737e4.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n/* export const UserContext = React.createContext(null); */\r\n\r\nexport const UserContext = React.createContext({\r\n    user: null,\r\n    refreshUser: () => {},\r\n    toggleNavBar: () => {},\r\n})","import {gql} from '@apollo/client';\r\n\r\n//queries for client, import from here to necessary paths\r\nexport const getUsers = gql`\r\n  query getAllUsers{\r\n    users {\r\n      name\r\n      username\r\n      password\r\n    }\r\n  }\r\n`;\r\nexport const getUser = gql`\r\n  query getUser($username:String, $password:String){\r\n    user(username: $username, password: $password){\r\n      _id\r\n      name\r\n      campaigns{\r\n        _id\r\n        name\r\n        dm\r\n      }\r\n      characters{\r\n        _id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\nexport const getUserByID = gql`\r\n  query getUserByID($_id: String){\r\n    userByID(_id: $_id){\r\n      name\r\n      permissions\r\n    }\r\n  }\r\n`;\r\n\r\nexport const addUser = gql`\r\n  mutation addUser($name:String, $username:String, $password:String){\r\n    addUser(name:$name, username:$username, password:$password){\r\n      name\r\n    }\r\n  }\r\n`;\r\n\r\nexport const currentUser = gql`\r\n  subscription currentUser($id:String){\r\n    updateUser(id:$id){\r\n      _id\r\n      name\r\n      permissions\r\n      campaigns{\r\n        _id\r\n        name\r\n        dm\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const getCampaignID = gql`\r\n  query getCampaignID($name:String){\r\n    campaign(name:$name){\r\n      _id\r\n    }\r\n  }\r\n`;\r\n\r\n\r\nexport const getCampaign = gql`\r\n  query getCampaign($id:String){\r\n    campaign(id:$id){\r\n      name\r\n      dm\r\n    }\r\n  }\r\n`;\r\n\r\nexport const addCampaign = gql`\r\n  mutation addCampaign($dm:String, $name:String){\r\n    addCampaign(dm:$dm, name:$name){\r\n      _id\r\n    }\r\n  }\r\n`;\r\n\r\nexport const deleteCampaign = gql`\r\n  mutation deleteCampaign($user:String, $dm:String, $campaign:String){\r\n    deleteCampaign(user:$user, dm:$dm, campaign:$campaign)\r\n  }\r\n`;\r\n\r\nexport const renameCampaign = gql`\r\n  mutation renameCampaign($id:String, $name:String){\r\n    renameCampaign(id:$id, name:$name){\r\n      name\r\n    }\r\n  }\r\n`;\r\n\r\nexport const getCharacter = gql`\r\n  query getCharacter($id:String){\r\n    character(id:$id){\r\n      _id\r\n      user\r\n      campaign\r\n      name\r\n      race\r\n      background\r\n      class\r\n      level\r\n      hp\r\n      cha\r\n      con\r\n      dex\r\n      int\r\n      str\r\n      wis\r\n    }\r\n  }\r\n`;\r\n\r\nexport const addCharacter = gql`\r\n  mutation addCharacter($user:String, $campaign:String, $name:String, $race:String, $background:String){\r\n    addCharacter(user:$user, campaign:$campaign, name:$name, race:$race, background:$background){\r\n      _id\r\n      name\r\n    }\r\n  }\r\n`;\r\n\r\nexport const updateCharacterInfo = gql`\r\n  mutation updateCharacterInfo($id:String, $name:String, $campaign:String){\r\n    updateCharacterInfo(id:$id, name:$name, campaign:$campaign){\r\n      _id\r\n      name\r\n    }\r\n  }\r\n`;\r\n\r\nexport const updateCharacterStats = gql`\r\n  mutation updateCharacterStats($id:String, $class:String, $cha:Int, $con:Int, $dex:Int, $int:Int, $str:Int, $wis:Int){\r\n    updateCharacterStats(id:$id, class:$class, cha:$cha, con:$con, dex:$dex, int:$int, str:$str, wis:$wis){\r\n      _id\r\n      campaign\r\n      name\r\n    }\r\n  }\r\n`;\r\n\r\nexport const deleteCharacter = gql`\r\n  mutation deleteCharacter($user:String, $campaign:String, $character:String){\r\n    deleteCharacter(user:$user, campaign:$campaign, character:$character)\r\n  }\r\n`;\r\n\r\nexport const getClasses = gql`\r\n  query getClasses{\r\n    classes{\r\n      index\r\n      name\r\n    }\r\n  }\r\n`;\r\n\r\nexport const getRaces = gql`\r\n  query getRaces{\r\n    races{\r\n      index\r\n      name\r\n      speed\r\n      age\r\n      alignment\r\n      size_description\r\n      language_desc\r\n    }\r\n  }\r\n`;","import React from 'react'\r\nimport '../App.css'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function NavBar(props){\r\n\r\n    const current = window.location.pathname\r\n    \r\n    var home = <Link to=\"/\"  className=\"navLink-home\">\r\n            <h3> DND20 </h3>\r\n        </Link>\r\n    var campaigns =  <Link to=\"/Campaigns\" className=\"navLink\">\r\n            <p> Campaigns </p>\r\n        </Link>\r\n    var characters = <Link to=\"/Characters\" className=\"navLink\">\r\n            <p> Characters </p>\r\n        </Link>\r\n    var play = <Link className=\"navLink\">\r\n            <p> Play </p>\r\n        </Link>\r\n    var account = <Link className=\"navLink\">\r\n            <p> My Account </p>\r\n        </Link>\r\n    var links = [home, campaigns, characters, play, account]\r\n\r\n    //maybe set current page's link's background to different colour\r\n\r\n    return(\r\n        <nav className=\"navbar\">\r\n            {links}\r\n        </nav>\r\n    )\r\n}","import React, { useContext } from 'react';\r\nimport {useState} from 'react';\r\nimport '../App.css';\r\nimport {UserContext} from '../misc/UserContext';\r\n\r\nfunction Home() {\r\n\t\r\n\tconst {user:me} = useContext(UserContext);\r\n\tconst [buttonText, setButtonText] = useState(\"Next\");\r\n\r\n\tfunction setButtonIfUser(){\r\n\t\tif(me){\r\n\t\t\tsetButtonText(me.name);\r\n\t\t}else{\r\n\t\t\tsetButtonText(\"no user\")\r\n\t\t}\r\n\t}\r\n\r\n\treturn(\r\n\t\t<>\r\n\t\t\t<br/>\r\n\t\t\t<img src=\"images/Nooth_DnD.png\" className=\"App-logo\" alt=\"logo\" />\r\n\t\t\t<br/>\r\n\t\t\t<h1 className=\"title\">\r\n\t\t\t\tDnD20\r\n\t\t\t</h1>\r\n\t\t\t<button name=\"showpong\" onClick={() => setButtonIfUser()}>\r\n\t\t\t\t{buttonText}\r\n\t\t\t</button>\r\n\t\t\t<p>welcome to the app, gamer</p>\r\n\t\t</>\r\n\t)\r\n}\r\nexport default Home;\r\n","import React, {useContext} from 'react';\r\nimport {useMutation, useQuery} from '@apollo/client'\r\nimport '../App.css';\r\nimport {UserContext} from '../misc/UserContext'\r\nimport {getCampaign, renameCampaign, deleteCampaign} from '../queries'\r\n\r\nexport default class EditCampaign extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.campaignID = this.props.campaignID\r\n        this.handleNameChange = this.handleNameChange.bind(this)\r\n        this.submit = this.submit.bind(this)\r\n        this.delete = this.delete.bind(this)\r\n        this.submitted = this.submitted.bind(this)\r\n        this.returnCampaign = this.returnCampaign.bind(this)\r\n        this.state = {submit:false, delete:false, loaded:false, campaign:null, name:\"\"}\r\n    }\r\n\r\n    handleNameChange(e){\r\n\t\te.preventDefault();\r\n\t\tthis.setState({name: e.target.value});\r\n\t}\r\n\r\n    submit(e){\r\n        this.setState({submit:true})\r\n        this.props.submit(e)\r\n    }\r\n\r\n    delete(){\r\n        this.setState({delete:true})\r\n    }\r\n\r\n    submitted(){\r\n        this.setState({submit:false, delete:false}, ()=>{this.props.back()})\r\n    }\r\n\r\n    returnCampaign(campaign){\r\n        console.log(\"selected campaign:\", campaign)\r\n        this.setState({campaign:campaign, name:campaign.name, loaded:true})\r\n    }\r\n\r\n    render() {\r\n        if(this.campaignID != null){\r\n            let isDM = false\r\n            if(this.state.campaign !== null){\r\n                isDM = (this.props.currentUserID===this.state.campaign.dm)\r\n            }\r\n            return(//also need to add characters/users +/-\r\n                <>\r\n                    {(!this.state.loaded && !this.state.submit) && <div>\r\n                        <LoadCampaign ID={this.campaignID} return={this.returnCampaign}/>\r\n                    </div>}\r\n                    {(this.state.loaded && !this.state.submit) && <div><img src=\"images/Nooth_DnD.png\" className=\"App-logo\" alt=\"logo\" />\r\n                        <h1 className=\"title\">\r\n                            Edit Campaign\r\n                        </h1>\r\n                        <button onClick={this.delete}>Delete this campaign</button>\r\n                        <form className=\"Form\" onSubmit={this.submit}>\r\n                            {isDM && <div><label htmlFor=\"name\" className=\"tbLabel\">Campaign Name: \r\n                            <input type=\"name\" id=\"name\" name=\"name\" required={true} onChange={this.handleNameChange} value={this.state.name}/></label><br/></div>}\r\n                            <input type=\"submit\" value=\"Submit\"/>\r\n                        </form><br/>\r\n                    </div>}\r\n                    {this.state.submit && <SubmitCampaign submitted={this.submitted} id={this.campaignID} name={this.state.name}/>}\r\n                    {this.state.delete && <DeleteCampaign submitted={this.submitted} dm={this.state.campaign.dm} campaignID={this.campaignID}/>}\r\n                    <button onClick={this.props.back}>Go Back</button>\r\n                </>\r\n            )\r\n        }else{\r\n            return (\r\n                <div>\r\n                    <p>Error: No Campaign</p>\r\n                    <button onClick={this.props.back}>Go Back</button>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nfunction LoadCampaign(props){\r\n    const {loading, data, error} = useQuery(getCampaign, {variables:{id:props.ID}, fetchPolicy:'network-only'})\r\n    while(loading){\r\n        return(<p>loading...</p>)\r\n    }\r\n    if(error){//no need to print errors here, as they wont. just if data && data.variable\r\n        console.log(error)\r\n        return(<p></p>)\r\n    }else{\r\n        props.return(data.campaign)\r\n        return(<p>done</p>)\r\n    }\r\n}\r\n\r\nfunction SubmitCampaign(props){\r\n    const [submitCampaign, {data, loading}] = useMutation(renameCampaign)\r\n    while(loading){\r\n        return(<p>loading</p>)\r\n    }\r\n    if(data===undefined){\r\n        submitCampaign({variables:{id:props.id, name:props.name}})\r\n    }else{\r\n        console.log(data)\r\n        props.submitted()\r\n    }\r\n    return null\r\n}\r\n\r\nfunction DeleteCampaign(props){\r\n    const {user:currentUser} = useContext(UserContext)\r\n    const [delCampaign, { data, loading }] = useMutation(deleteCampaign);//this method means it only gets added once\r\n\twhile(loading){\r\n\t\treturn(<p>Loading...</p>);\r\n\t}\r\n    if(data===undefined){\r\n        delCampaign({variables:{user:currentUser._id, dm:props.dm, campaign:props.campaignID}})\r\n        console.log('attempted deleteCampaign')\r\n    }else if(data != null){\r\n        console.log('done', data)\r\n        props.submitted()\r\n    }\r\n    return null\r\n}","import React, { useContext } from 'react';\r\nimport '../App.css';\r\nimport {useMutation} from '@apollo/client';\r\nimport {UserContext} from '../misc/UserContext';\r\nimport EditCampaign from '../components/EditCampaign'\r\nimport {addCampaign} from '../queries'\r\n\r\nexport default class Campaigns extends React.Component {\r\n\r\n    static contextType = UserContext;\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {selected:null, chosen:false, wantsNew:false, newName:\"\", newSubmitted:false, needsRefresh:false}\r\n        this.handleEditSubmit = this.handleEditSubmit.bind(this)\r\n        this.changeSelected = this.changeSelected.bind(this)\r\n        this.clearSelected = this.clearSelected.bind(this)\r\n        this.wantsNew = this.wantsNew.bind(this)\r\n        this.cancelNew = this.cancelNew.bind(this)\r\n        this.newSubmitted = this.newSubmitted.bind(this)\r\n        this.newNameChanged = this.newNameChanged.bind(this)\r\n        this.resetWithNew = this.resetWithNew.bind(this)\r\n        this.refreshed = this.refreshed.bind(this)\r\n    }\r\n\r\n    handleEditSubmit(e){\r\n        e.preventDefault();\r\n    }\r\n\r\n    changeSelected(selected){\r\n        this.setState({selected:selected, chosen:true})\r\n    }\r\n\r\n    clearSelected(){//need to update context\r\n        this.setState({selected:null, chosen:false, needsRefresh:true})\r\n    }\r\n\r\n    newNameChanged(e){\r\n        e.preventDefault();\r\n        this.setState({newName:e.target.value})\r\n    }\r\n    wantsNew(){\r\n        this.setState({wantsNew:true})\r\n    }\r\n    cancelNew(){\r\n        this.setState({wantsNew:false})\r\n    }\r\n    newSubmitted(e){\r\n        e.preventDefault()\r\n        this.setState({newSubmitted:true})\r\n    }\r\n    resetWithNew(newID){\r\n        this.setState({wantsNew:false, newSubmitted:false, newName:\"\"}, ()=>{this.changeSelected(newID)})\r\n    }\r\n    refreshed(){\r\n        this.setState({needsRefresh:false})\r\n    }\r\n\r\n    render() {\r\n        const {user} = this.context\r\n        return(\r\n            <>\r\n                {!this.state.chosen && <><h1 className=\"title\"> Campaigns </h1>\r\n                    {(!this.state.wantsNew && !this.state.newSubmitted) && <button onClick={this.wantsNew}>+</button>}\r\n                    {(this.state.wantsNew && !this.state.newSubmitted) && <>\r\n                        <form className=\"Form\" onSubmit={this.newSubmitted}>\r\n                            <label htmlFor=\"name\" className=\"tbLabel\">Campaign Name: \r\n                            <input type=\"name\" id=\"name\" name=\"name\" required={true} onChange={this.newNameChanged}/></label>\r\n                            <input type=\"submit\" value=\"Submit\"/>\r\n                            <button onClick={this.cancelNew}>x</button>\r\n                        </form></>}<br/><br/>\r\n                    <DisplayCampaigns needsRefresh={this.state.needsRefresh} refreshed={this.refreshed} changeSelected={this.changeSelected}/>\r\n                    {(this.state.wantsNew && this.state.newSubmitted) && <AddCampaign dm={user._id} name={this.state.newName} handleAdded={this.resetWithNew}/>}\r\n                </>}\r\n                {this.state.chosen && <EditCampaign currentUserID={user._id} campaignID={this.state.selected} submit={this.handleEditSubmit} back={this.clearSelected}/>}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport function DisplayCampaigns(props){//need to render the Campaign function for as many as there are in campaigns collection\r\n    const {user, refreshUser} = useContext(UserContext)\r\n    if(props.needsRefresh){\r\n        refreshUser()\r\n        props.refreshed()\r\n    }\r\n    const campaignList = []\r\n    campaignList.push()\r\n    for (let i = 0; i<user.campaigns.length; i++){//adds jsx elemnts to the array\r\n        campaignList.push(<Campaign campaign={user.campaigns[i]} changeSelected={props.changeSelected}/>)\r\n    }\r\n    return (\r\n        <>\r\n            {(user.campaigns.length===0) && <p>You are not currently participating in any campaigns.</p>}\r\n            {(user.campaigns.length!==0) && campaignList}\r\n        </>\r\n    )\r\n}\r\n\r\nfunction Campaign(props){\r\n    return (\r\n        <div className=\"campaign\">\r\n            <p key=\"c1\" className=\"campaign-name\">{props.campaign.name}</p>\r\n            <ul><li key=\"editButton\">\r\n                <button onClick={() => props.changeSelected(props.campaign._id)}>\r\n                    Edit\r\n                </button>\r\n            </li></ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction AddCampaign(props){//here we just pray that no 2 campaigns have the same id (unlikely as it is 24-char hex)\r\n    console.log(\"adding\")\r\n    const {user:currentUser} = useContext(UserContext)\r\n    const [newCampaign, { data, loading }] = useMutation(addCampaign);//this method means it only gets added once\r\n\twhile(loading){\r\n\t\treturn(<p>Loading...</p>);\r\n\t}\r\n    if(data===undefined){\r\n        newCampaign({variables:{dm:currentUser._id, name:props.name}})\r\n        console.log('attempted addCampaign')\r\n    }else if(data != null){\r\n        console.log('done', data)\r\n        props.handleAdded(data.addCampaign._id)\r\n    }\r\n    return null\r\n}","export function arrayToOptions(array, selected){\r\n    let newArray = []\r\n    if(array[0].index!==undefined){\r\n        for (let i=0; i<array.length; i++){\r\n            if(array[i].index!==selected){\r\n                newArray.push(<option value={array[i].index} key={i}>{array[i].name}</option>)\r\n            }else{\r\n                newArray.push(<option value={array[i].index} key={i} selected>{array[i].name}</option>)\r\n            }\r\n        }\r\n    }else if (array[0]._id!==undefined){\r\n        for (let i=0; i<array.length; i++){\r\n            if(array[i].index!==selected){\r\n                newArray.push(<option value={array[i]._id} key={i}>{array[i].name}</option>)\r\n            }else{\r\n                newArray.push(<option value={array[i]._id} key={i} selected>{array[i].name}</option>)\r\n            }\r\n        }\r\n    }\r\n    return newArray\r\n}","import React, {useContext, useState} from 'react'\r\nimport {useQuery, useMutation} from '@apollo/client'\r\nimport '../App.css'\r\nimport {addCharacter, deleteCharacter, getCharacter, getClasses, getRaces, updateCharacterInfo, updateCharacterStats} from '../queries'\r\nimport { arrayToOptions } from '../functions/GeneralFunctions'\r\nimport { UserContext } from '../misc/UserContext'\r\n\r\nexport default class EditCharacter extends React.Component {\r\n\r\n    static contextType = UserContext\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.user = this.props.currentUser\r\n        this.characterID = this.props.characterID\r\n        this.returnLoaded = this.returnLoaded.bind(this)\r\n        this.submittedNew = this.submittedNew.bind(this)\r\n        this.state = {character:null, submitNew:false, submitGeneral:false, name:\"\", race:\"\", bg:\"\", campaign:\"\"}\r\n    }\r\n\r\n    returnLoaded(character){\r\n        this.setState({character:character})\r\n    }\r\n\r\n    submittedNew(){\r\n        this.setState({submitNew:false, name:\"\", race:\"\", bg:\"\", campaign:\"\"})\r\n        this.props.back()\r\n    }\r\n\r\n    render(){\r\n        console.log(this.state.name, this.state.race, this.state.campaign, this.state.bg)\r\n        return(<>\r\n            <button className=\"backButton\" onClick={this.props.back}>Back</button>{/* vvv unloaded and unentered*/}\r\n            {/* ((this.characterID!==null)&&(this.state.character===null)) ? <LoadCharacter ID={this.characterID} return={this.returnLoaded}/> : <CharacterInfo submitNewGeneral={this.submitNewGeneral} user={this.user} character={this.state.character} new={this.state.character===null}/> */}\r\n            <CharacterInfo submitNew={this.submitNew} submitGeneral={this.submitGeneral} user={this.user} character={this.state.character} new={this.state.character===null} back={this.props.back}/>\r\n            {((this.characterID!==null)&&(this.state.character===null)) && <LoadCharacter ID={this.characterID} return={this.returnLoaded}/>}\r\n        </>)\r\n    }\r\n}\r\n\r\nfunction LoadCharacter(props){\r\n    console.log(props.ID)\r\n    const {loading, data, error} = useQuery(getCharacter, {variables:{id:props.ID}, fetchPolicy:'network-only'})\r\n    while(loading){\r\n        return(<p>loading...</p>)\r\n    }\r\n    if(error){//no need to print errors here, as they wont. just if data && data.variable\r\n        console.log(error)\r\n        return(<p></p>)\r\n    }else{\r\n        console.log(data)\r\n        props.return(data.character)\r\n        return(<p>done</p>)\r\n    }\r\n}\r\n\r\nfunction DeleteCharacter(props){\r\n    const [del, {loading, data}] = useMutation(deleteCharacter)\r\n    while(loading){\r\n        return(<p>loading...</p>)\r\n    }\r\n    if(data===undefined){\r\n        del({variables:{character:props.characterID, user:props.userID, campaign:props.campaignID}})\r\n    }else if(data!==null){\r\n        props.back()\r\n    }return null\r\n}\r\n\r\nfunction CharacterInfo(props){\r\n    console.log('character info', props.new)\r\n    const {loading:raceLoading, data:raceData} = useQuery(getRaces)\r\n    const {loading:classLoading, data:classData} = useQuery(getClasses)\r\n    const [page, changePage] = useState(0)\r\n    while(classLoading||raceLoading){\r\n        return(<p>Loading...</p>)\r\n    }\r\n    let pages = [\r\n        (props.new ? <NewGeneralInfo races={raceData.races} user={props.user} submit={props.submitNew} back={props.back}/> : <ExistingGeneralInfo character={props.character} classes={classData.classes} submit={props.submitGeneral} back={props.back}/>),\r\n    ]\r\n    pages.forEach(element => {\r\n        if(element!==pages[page]){\r\n            element = null\r\n        }\r\n    })\r\n    //make a set of buttons to change page with the index of the pages array\r\n    return (<div>\r\n        {pages}\r\n    </div>)\r\n}\r\n\r\nfunction NewGeneralInfo(props){\r\n    const {user} = useContext(UserContext)\r\n    const [name, changeName] = useState(\"\")\r\n    const [background, changeBG] = useState(\"\")\r\n    const [race, changeRace] = useState(\"\")\r\n    const [campaign, changeCampaign] = useState(\"\")\r\n    const [createNew, {loading:newLoading, data:newData}] = useMutation(addCharacter, {variables:{user:user._id, campaign:campaign, name:name, race:race, background:background}})\r\n    while(newLoading){\r\n        return(<p>Loading...</p>)\r\n    }\r\n    if(newData!==undefined){\r\n        props.back()\r\n    }\r\n    return (<form onSubmit={createNew}>\r\n        <input type=\"submit\" /><br/>\r\n        <label htmlFor=\"name\" className=\"tbLabel\">Name: \r\n        <input type=\"name\" id=\"name\" name=\"name\" required={true} onChange={(e)=>{e.preventDefault();changeName(e.target.value)}} value={name}/></label>\r\n        <CampaignSelect id=\"campaign\" campaigns={user.campaigns} changeCampaign={changeCampaign}/><br/>\r\n        <label htmlFor=\"bg\" className=\"tbLabel\">Background Info / Lore: \r\n        <textarea id=\"bg\" name=\"bg\" onChange={(e)=>{e.preventDefault();changeBG(e.target.value)}} value={background} rows=\"4\" cols=\"50\" maxLength=\"500\"/></label><br/>\r\n        <RaceSelect id=\"race\" races={props.races} changeRace={changeRace}/><br/>\r\n    </form>)\r\n}\r\n\r\nfunction ExistingGeneralInfo(props){\r\n    const {user} = useContext(UserContext)\r\n    const character = props.character\r\n    const [campaign, changeCampaign] = useState(character.campaign)\r\n    const [charClass, changeClass] = useState(character.class)\r\n    const [str, changeStr] = useState(character.str)\r\n    const [dex, changeDex] = useState(character.dex)\r\n    const [con, changeCon] = useState(character.con)\r\n    const [int, changeInt] = useState(character.int)\r\n    const [wis, changeWis] = useState(character.wis)\r\n    const [cha, changeCha] = useState(character.cha)//need to implement for maximum levels etc, although maybe later\r\n    console.log(charClass)\r\n    const [rename, toggleRename] = useState(false)\r\n    const [name, changeName] = useState(character.name)\r\n    const [delCharacter, {loading:delLoading, data:delData}] = useMutation(deleteCharacter, {variables:{character:character._id, user:character.user, campaign:character.campaign}})\r\n    const [updateInfo, {loading:infoLoading, data:infoData}] = useMutation(updateCharacterInfo, {variables:{id:character._id, name:name, campaign:campaign}})\r\n    const [updateStats, {loading:statsLoading, data:statsData}] = useMutation(updateCharacterStats, {variables:{id:character._id, class:charClass, cha:parseInt(cha), con:parseInt(con), str:parseInt(str), dex:parseInt(dex), int:parseInt(int), wis:parseInt(wis)}})\r\n    while(delLoading||infoLoading||statsLoading){\r\n        if(delLoading){\r\n            console.log(character._id, character.user, character.campaign)\r\n        }\r\n        return(<p>loading</p>)\r\n    }\r\n    if(delData!==undefined||infoData!==undefined||statsData!==undefined){\r\n        props.back()\r\n    }\r\n    return (<><div><h2>{character.name}</h2>\r\n        <button onClick={delCharacter}>Delete Character</button></div>\r\n        {rename ? <>\r\n            <form onSubmit={updateInfo}>\r\n                <label htmlFor=\"name\" className=\"tbLabel\">Name: \r\n                <input type=\"text\" id=\"name\" name=\"name\" required={true} onChange={(e)=>{e.preventDefault();changeName(e.target.value)}} value={name}/></label>\r\n                <CampaignSelect id=\"campaign\" current={campaign} campaigns={user.campaigns} changeCampaign={changeCampaign}/>\r\n                <input type=\"submit\"/><button onClick={()=>{toggleRename(!rename)}}>Cancel</button>\r\n            </form>\r\n        </> : <><button onClick={()=>{toggleRename(!rename)}}>Rename/ChangeCampaign</button><br/></>}\r\n        <form onSubmit={updateStats}>\r\n            <input type=\"submit\" /><br/>\r\n            <ClassSelect id=\"class\" current={charClass} classes={props.classes} changeClass={changeClass}/><br/>\r\n            <label htmlFor=\"str\" className=\"tbLabel\">Str: \r\n            <input type=\"number\" id=\"str\" name=\"str\" min=\"1\" max=\"20\" required={true} onChange={(e)=>{e.preventDefault();changeStr(e.target.value)}} value={str}/></label>\r\n            <label htmlFor=\"dex\" className=\"tbLabel\">Dex: \r\n            <input type=\"number\" id=\"dex\" name=\"dex\" min=\"1\" max=\"20\" required={true} onChange={(e)=>{e.preventDefault();changeDex(e.target.value)}} value={dex}/></label>\r\n            <label htmlFor=\"con\" className=\"tbLabel\">Con: \r\n            <input type=\"number\" id=\"con\" name=\"con\" min=\"1\" max=\"20\" required={true} onChange={(e)=>{e.preventDefault();changeCon(e.target.value)}} value={con}/></label>\r\n            <label htmlFor=\"int\" className=\"tbLabel\">Int: \r\n            <input type=\"number\" id=\"int\" name=\"int\" min=\"1\" max=\"20\" required={true} onChange={(e)=>{e.preventDefault();changeInt(e.target.value)}} value={int}/></label>\r\n            <label htmlFor=\"wis\" className=\"tbLabel\">Wis: \r\n            <input type=\"number\" id=\"wis\" name=\"wis\" min=\"1\" max=\"20\" required={true} onChange={(e)=>{e.preventDefault();changeWis(e.target.value)}} value={wis}/></label>\r\n            <label htmlFor=\"cha\" className=\"tbLabel\">Cha: \r\n            <input type=\"number\" id=\"cha\" name=\"cha\" min=\"1\" max=\"20\" required={true} onChange={(e)=>{e.preventDefault();changeCha(e.target.value)}} value={cha}/></label>\r\n        </form>\r\n    </>)\r\n}\r\n\r\nfunction ClassSelect(props){\r\n    let classOptions = arrayToOptions(props.classes, props.current)\r\n    return(\r\n        <label htmlFor=\"class\" className=\"tbLabel\">Class:\r\n            <select id=\"classes\" name=\"classes\" onChange={(e)=>{props.changeClass(props.classes[e.target.selectedIndex].index)}}>\r\n                {classOptions}\r\n            </select>\r\n        </label>\r\n    )\r\n}\r\n\r\nfunction RaceSelect(props){\r\n    const [selected, changeSelected] = useState(0)\r\n    let raceOptions = arrayToOptions(props.races)\r\n    return(\r\n        <div><label htmlFor=\"races\" className=\"tbLabel\">Race:\r\n            <select id=\"races\" name=\"races\" onChange={(e)=>{props.changeRace(props.races[e.target.selectedIndex].index); changeSelected(e.target.selectedIndex)}}>\r\n                {raceOptions}\r\n            </select></label>\r\n            <p>{props.races[selected].alignment}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction CampaignSelect(props){\r\n    const campaignOptions = arrayToOptions(props.campaigns, props.current)\r\n    return(<>\r\n        <label htmlFor=\"campaigns\" className=\"tbLabel\">Campaign:\r\n            <select id=\"campaigns\" name=\"campaigns\" onChange={(e)=>{props.changeCampaign(props.campaigns[e.target.selectedIndex]._id)}}>\r\n                {campaignOptions}\r\n            </select>\r\n        </label>\r\n    </>)\r\n}\r\n","import React, { useContext } from 'react';\r\nimport '../App.css';\r\nimport {UserContext} from '../misc/UserContext';\r\nimport EditCharacter from '../components/EditCharacter'\r\n\r\nexport default class Characters extends React.Component {\r\n\r\n    static contextType = UserContext;\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {selected:null, chosen:false, needsRefresh:false, needsSubmit:false}\r\n        this.handleEditSubmit = this.handleEditSubmit.bind(this)\r\n        this.changeSelected = this.changeSelected.bind(this)\r\n        this.clearSelected = this.clearSelected.bind(this)\r\n        this.wantsNew = this.wantsNew.bind(this)\r\n        this.refreshed = this.refreshed.bind(this)\r\n    }\r\n\r\n    handleEditSubmit(e){\r\n        e.preventDefault();\r\n    }\r\n\r\n    changeSelected(selected){\r\n        this.setState({selected:selected, chosen:true})\r\n    }\r\n\r\n    clearSelected(){//need to update context\r\n        this.setState({selected:null, chosen:false, needsRefresh:true})\r\n    }\r\n    wantsNew(){\r\n        this.setState({chosen:true})\r\n    }\r\n    refreshed(){\r\n        this.setState({needsRefresh:false})\r\n    }\r\n\r\n    render() {\r\n        const {user} = this.context\r\n        return(\r\n            <>\r\n                <h1 className=\"title\"> Characters </h1>\r\n                {!this.state.chosen && <>\r\n                    <button onClick={this.wantsNew}>New Character</button>\r\n                    <DisplayCharacters needsRefresh={this.state.needsRefresh} refreshed={this.refreshed} changeSelected={this.changeSelected}/> \r\n                </>}\r\n                {this.state.chosen && <EditCharacter currentUser={user} characterID={this.state.selected} submit={this.handleEditSubmit} back={this.clearSelected}/>}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nfunction DisplayCharacters(props){//need to render the Campaign function for as many as there are in campaigns collection\r\n    const {user, refreshUser} = useContext(UserContext)\r\n    if(props.needsRefresh){\r\n        refreshUser()\r\n        props.refreshed()\r\n    }\r\n    const characterList = []\r\n    for (let i = 0; i<user.characters.length; i++){//adds jsx elemnts to the array\r\n        characterList.push(<Character character={user.characters[i]} changeSelected={props.changeSelected}/>)\r\n    }\r\n    return (\r\n        <div>\r\n            {(user.characters.length===0) && <p>You do not currently have any characters.</p>}\r\n            {(user.campaigns.length!==0) && characterList}\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction Character(props){\r\n    return (\r\n        <div className=\"character\">\r\n            <p key=\"c1\" className=\"characer-name\">{props.character.name}</p>\r\n            <ul><li key=\"editButton\">\r\n                <button onClick={() => props.changeSelected(props.character._id)}>\r\n                    Edit\r\n                </button>\r\n            </li></ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction SubmitNew(){\r\n    \r\n}","/**\r\n * This is the file that handles routing for the entire application\r\n */\r\nimport React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport '../App.css';\r\nimport Home from '../pages/Home';\r\nimport Campaigns from '../pages/Campaigns';\r\nimport Characters from '../pages/Characters'\r\n\r\nfunction PageSwitch(props){\r\n    return (\r\n        <header className=\"App-header\">\r\n            <Switch> {/* The Switch decides which component to show based on the current URL.*/}\r\n                <Route exact path='/' component={Home}/>\r\n                <Route exact path='/Campaigns' component={Campaigns}/>\r\n                <Route exact path='/Characters' component={Characters}/>\r\n            </Switch>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default PageSwitch;\r\n","import React from 'react';\r\nimport {NetworkStatus, useQuery} from '@apollo/client';\r\nimport {UserContext} from '../misc/UserContext'\r\nimport {getUser} from '../queries';\r\nimport '../App.css';\r\nimport NavBar from './navbar'\r\nimport PageSwitch from './PageSwitch'\r\n\r\n\r\nexport default function Main(props){\r\n\r\n\r\n\t//console.log(props.username, props.password);\r\n\tconst {loading, data, error, refetch, networkStatus} = useQuery(getUser, {variables:{username: props.username, password: props.password}, notifyOnNetworkStatusChange:true, fetchPolicy:'network-only'});\r\n\tconsole.log(\"Logged in user\", data);\r\n\t\r\n\twhile(networkStatus===NetworkStatus.refetch){\r\n\t\treturn (<><NavBar currentUser={data.user}/><header><p>Retrieving your data...</p></header></>)\r\n\t}\r\n\twhile(loading){\r\n\t\treturn (<header>{/* <NavBar/> */}<p>Loading...</p></header>);\r\n\t}\r\n\tif(error){\r\n\t\treturn (<p>There was an error. Please refresh the page and try again.</p>);\r\n\t}\r\n\tif(data != null){\r\n\t\tconst context = { user:data.user, refreshUser:refetch }\r\n\t\treturn (\r\n\t\t\t<><NavBar currentUser={data.user}/>\r\n\t\t\t<UserContext.Provider value={context}>\r\n\t\t\t\t<PageSwitch/>\r\n\t\t\t</UserContext.Provider></>\r\n\t\t);\r\n\t}else{\r\n\t\tprops.BadLogin();\r\n\t\treturn (<p>Error: User not found</p>);\r\n\t}\r\n}\r\n","import React from 'react';\r\nimport {useQuery, useMutation} from '@apollo/client'\r\nimport '../App.css';\r\nimport { Link } from \"react-router-dom\";\r\nimport {getUser, addUser} from '../queries';\r\n\r\n\r\n\r\nclass Register extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\t\tthis.Registered = this.props.Registered;\r\n\t\tthis.handleNameChange = this.handleNameChange.bind(this);\r\n\t\tthis.handleEmailChange = this.handleEmailChange.bind(this);\r\n\t\tthis.handleUsernameChange = this.handleUsernameChange.bind(this);\r\n\t\tthis.handlePasswordChange = this.handlePasswordChange.bind(this);\r\n\t\tthis.handleRegisterAttempt = this.handleRegisterAttempt.bind(this);\r\n\t\tthis.state = {badForm:false, registered:false, name:\"\", email:\"\", username:\"\", password:\"\"};\r\n    }\r\n\thandleNameChange(e){\r\n\t\te.preventDefault();\r\n\t\tthis.setState({name: e.target.value});\r\n\t}\r\n\thandleEmailChange(e){\r\n\t\te.preventDefault();\r\n\t\tthis.setState({email: e.target.value});\r\n\t}\r\n\thandleUsernameChange(e){\r\n        e.preventDefault();\r\n        this.setState({username: e.target.value});\r\n    }\r\n    handlePasswordChange(e){\r\n        e.preventDefault();\r\n        this.setState({password: e.target.value});\r\n    }\r\n\r\n    handleRegisterAttempt(e){\r\n        e.preventDefault();\r\n\t\tif(!!this.state.name && !!this.state.email && !!this.state.username && !!this.state.password){\r\n\t\t\tthis.setState({registered: true});\r\n\t\t}else{\r\n\t\t\tthis.setState({badForm: true})\r\n\t\t}\r\n\t\t//need check all fields are filled out\r\n    }\r\n\r\n    render() {\r\n        return(//obviously needs more added\r\n            <>\r\n                {!this.state.registered && \r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<img src=\"images/Nooth_DnD.png\" width='300' alt=\"logo\"/>\r\n\t\t\t\t\t\t<h1 className=\"title\">\r\n\t\t\t\t\t\t\tSign Up\r\n\t\t\t\t\t\t</h1>\r\n\t\t\t\t\t\t<form className=\"Form\" onSubmit={this.handleRegisterAttempt}>\r\n\t\t\t\t\t\t\t<label htmlFor=\"fullname\" className=\"tbLabel\">Full Name: \r\n\t\t\t\t\t\t\t<input type=\"name\" id=\"fullname\" name=\"fullname\" required={true} onChange={this.handleNameChange} value={this.state.name}/></label><br/>\r\n\t\t\t\t\t\t\t<label htmlFor=\"email\" className=\"tbLabel\" name=\"tbLabel\">Email: \r\n\t\t\t\t\t\t\t<input type=\"email\" id=\"email\" name=\"email\" required={true} onChange={this.handleEmailChange} value={this.state.email}/></label><br/>\r\n\t\t\t\t\t\t\t<label htmlFor=\"username\" className=\"tbLabel\" name=\"tbLabel\">Username: \r\n\t\t\t\t\t\t\t<input type=\"username\" id=\"username\" name=\"username\" required={true} onChange={this.handleUsernameChange} value={this.state.username}/></label><br/>\r\n\t\t\t\t\t\t\t<label htmlFor=\"password\" className=\"tbLabel\" name=\"tbLabel\">Password: \r\n\t\t\t\t\t\t\t<input type=\"password\" id=\"password\" name=\"password\" required={true} onChange={this.handlePasswordChange} value={this.state.password}/></label><br/>\r\n\t\t\t\t\t\t\t<input type=\"submit\" value=\"Submit\"/>\r\n\t\t\t\t\t\t</form><br/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t}\r\n\t\t\t\t{this.state.registered && <AddUser name={this.state.name} email={this.state.email} username={this.state.username} password={this.state.password}/>}\r\n\t\t\t\t{this.state.badForm && <p>Please make sure all boxes are filled in</p>/**this check seems redundant with the boxes being marked as required */}\r\n\t\t\t\t<button onClick={this.Registered} name=\"next\" variant=\"outlined\">\r\n\t\t\t\t\tGo back to login\r\n\t\t\t\t</button>\r\n            </>\r\n\t\t)\r\n    }\r\n}\r\n\r\nfunction AddUser(props){\r\n\tconst {data:queryData, loading:queryLoading} = useQuery(getUser, {variables: {username:props.username, password:props.passsword}});//looking for existing user\r\n\tconst [newUser, { data, loading }] = useMutation(addUser);\r\n\twhile(queryLoading){\r\n\t\treturn(<p>Checking for existing user...</p>)\r\n\t}\r\n\tif(queryData.user===null){//apparently here cannot read 'undefined' user, but that same method works in login???\r\n\t\tconsole.log(\"user doesn't already exist\")\r\n\t\twhile(loading){//warning about destructuring, but loading does show\r\n\t\t\treturn(<p>Loading...</p>);\r\n\t\t}\r\n\t\tif(data===undefined){\r\n\t\t\tconsole.log(\"adding user\")\r\n\t\t\tnewUser({variables:{name:props.name, email:props.email, username:props.username, password:props.password}});\r\n\t\t}else if(data!=null){\r\n\t\t\tconsole.log(data)\r\n\t\t\treturn(\r\n\t\t\t\t<>\r\n\t\t\t\t\t<p>Welcome, {props.name}</p>\r\n\t\t\t\t\t<Link to=\"\">\r\n\t\t\t\t\t\tGo to Log In\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</>\r\n\t\t\t);\r\n\t\t}\r\n\t}if(queryData!==null){\r\n\t\tconsole.log(\"user already exists\", queryData, data)\r\n\t\treturn (\r\n\t\t\t<p>Error: User already exists, try again</p>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Register;","import React from 'react';\r\nimport '../App.css';\r\nimport Register from './Register';\r\n\r\nclass Login extends React.Component {//this isn't persistent over refreshes (cached) but i dont really want that rn\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.HandleLogin = this.props.HandleLogin;\r\n        this.SetLogin = this.props.SetLogin;\r\n        this.BadLogin = this.props.BadLogin;\r\n        this.Registered = this.Registered.bind(this);\r\n        this.NotRegistered = this.NotRegistered.bind(this);\r\n        this.handleLoginAttempt = this.handleLoginAttempt.bind(this);\r\n        this.handleUsernameChange = this.handleUsernameChange.bind(this);\r\n        this.handlePasswordChange = this.handlePasswordChange.bind(this);\r\n        this.state = {registered:true, loggedIn: false, username: \"\", password: \"\"};\r\n    }\r\n\r\n    handleUsernameChange(e){\r\n        e.preventDefault(); \r\n        this.setState({username: e.target.value});\r\n        //console.log(this.state.username);\r\n    }\r\n    handlePasswordChange(e){\r\n        e.preventDefault();\r\n        this.setState({password: e.target.value});\r\n        //console.log(this.state.password);\r\n    }\r\n\r\n    handleLoginAttempt(e){//logs the form\r\n        e.preventDefault();\r\n        this.HandleLogin(this.state.username, this.state.password);\r\n        this.setState({loggedIn: true});\r\n        this.SetLogin();\r\n    }\r\n\r\n    NotRegistered(){\r\n        this.setState({registered: false});\r\n    }\r\n\r\n    Registered(){\r\n        this.setState({registered: true});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <header className=\"App-header\">\r\n                {(!this.state.loggedIn && this.state.registered) && //show login form if not logged in\r\n                    (<div><form id=\"Form\" className=\"Form\" onSubmit={this.handleLoginAttempt}>\r\n                        <p> Please enter your username and password </p>\r\n                        <label htmlFor=\"user\">Username: \r\n                            <input type=\"username\" name=\"user\" id=\"user\" required={true} autoFocus={true} onChange={this.handleUsernameChange} value={this.state.username}/>\r\n                        </label><br />\r\n                        <label htmlFor=\"pass\">Password: \r\n                            <input type=\"password\" name=\"pass\" id=\"pass\" required={true} onChange={this.handlePasswordChange} value={this.state.password}/>\r\n                        </label><br />\r\n                        <input type=\"submit\" value=\"Submit\" variant=\"outlined\"/>\r\n                        <label htmlFor=\"rememberLogin\"> Remember me\r\n                            <input type=\"checkbox\" id=\"rememberLogin\" name=\"rememberLogin\" value={this.state.loggedIn}/>{/*not implemented yet, checkbox doesnt even return anything on submit*/}\r\n                        </label>\r\n                    </form>\r\n                    <button name=\"next2\" variant=\"outlined\" onClick={this.NotRegistered}>\r\n                            register\r\n                    </button>\r\n                    {this.BadLogin && <p>Could not find a user to match input username and password.</p>}\r\n                    </div>)\r\n                }\r\n                {(!this.state.registered && !this.state.loggedIn) && <Register Registered={this.Registered}/>}\r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport './App.css';\r\nimport Main from './components/Main.js';\r\nimport Login from './pages/Login';\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\t\tthis.LoginUser = this.LoginUser.bind(this);\r\n        this.SetLoggedIn = this.SetLoggedIn.bind(this);\r\n        this.InvalidLogin = this.InvalidLogin.bind(this);\r\n        this.GoodLogin = this.GoodLogin.bind(this);\r\n\t\tthis.state = {username:\"\", password:\"\", id:\"\", loginError: false, isLoggedIn: false};\r\n    }\r\n\r\n\tLoginUser(username, password){//for some reason this starts performing async and messes the whole thing up\r\n\t\tthis.setState({username: username, password: password}, ()=>{console.log(this.state.username, this.state.password);});\r\n        \r\n\t}\r\n\r\n    SetLoggedIn(){\r\n        this.setState({isLoggedIn: true, loginError: false}, ()=>{console.log(\"logged in\")});\r\n    }\r\n\r\n    InvalidLogin(){//maybe want to look into a \"validUser\" bool instead of an option for good and one for bad\r\n        this.setState({loginError: true, isLoggedIn: false}, ()=>{console.log(\"logged out due to error\")});\r\n    }\r\n\r\n    GoodLogin(id){\r\n        this.setState({password:\"\", id:id, isLoggedIn:false}, ()=>{this.SetLoggedIn()})\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"App\">\r\n                {!this.state.isLoggedIn && <Login BadAttempt={this.state.loginError} HandleLogin={this.LoginUser} SetLogin={this.SetLoggedIn}/>}\r\n                {this.state.isLoggedIn && <Main username={this.state.username} password={this.state.password} id={this.state.id} BadLogin={this.InvalidLogin} GoodLogin={this.GoodLogin}/>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom';\nimport './index.css';\nimport App from './App';\n//import reportWebVitals from './reportWebVitals';\n\nimport {ApolloClient, ApolloProvider, InMemoryCache} from '@apollo/client';\n/*\nconst PORT = ':8080';\nconst HOST = '192.169.0.49';*/\n//create apollo client\nexport const apolloClient = new ApolloClient({\n  uri: '/graphql',//this is only the extension to the current url to send gql requests to\n  cache: new InMemoryCache(),\n  onError: ({ networkError, graphQLErrors }) => {\n    console.log('graphQLErrors', graphQLErrors)\n    console.log('networkError', networkError)\n  },\n});\n\nReactDOM.render(\n  <ApolloProvider client = {apolloClient}>\n    <BrowserRouter>\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"/><App />\n    </BrowserRouter>\n  </ApolloProvider>,\n  document.getElementById('root')\n);\n\n\n/*\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();*/"],"sourceRoot":""}