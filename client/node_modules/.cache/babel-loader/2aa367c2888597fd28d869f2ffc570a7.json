{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\natha\\\\Documents\\\\Projects\\\\dnd20\\\\client\\\\src\\\\components\\\\User.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport '../App.css';\nimport { useLazyQuery } from '@apollo/client';\nimport { getUser } from \"../queries\";\n\nfunction User(props) {\n  _s();\n\n  const [loaduser, {\n    called,\n    loading,\n    data\n  }] = useLazyQuery(getUser, {\n    username: props.username\n  });\n  console.log(data);\n\n  if (called && loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 10\n    }, this);\n  }\n\n  if (!called) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        name: \"showusers\",\n        onClick: () => loaduser,\n        children: \"get your name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 4\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 10\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: data.name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 3\n  }, this);\n}\n\n_s(User, \"/TyAe0wMfJUq9TZ8iHslthldstY=\", false, function () {\n  return [useLazyQuery];\n});\n\n_c = User;\nexport default User;\n\nvar _c;\n\n$RefreshReg$(_c, \"User\");","map":{"version":3,"sources":["C:/Users/natha/Documents/Projects/dnd20/client/src/components/User.js"],"names":["React","useState","useLazyQuery","getUser","User","props","loaduser","called","loading","data","username","console","log","name"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,YAAP;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAAQC,OAAR,QAAsB,YAAtB;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AAEpB,QAAM,CAACC,QAAD,EAAW;AAACC,IAAAA,MAAD;AAASC,IAAAA,OAAT;AAAkBC,IAAAA;AAAlB,GAAX,IAAsCP,YAAY,CAACC,OAAD,EAAU;AAACO,IAAAA,QAAQ,EAAEL,KAAK,CAACK;AAAjB,GAAV,CAAxD;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;;AACA,MAAGF,MAAM,IAAIC,OAAb,EAAqB;AACpB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACA;;AACD,MAAI,CAACD,MAAL,EAAY;AACX,wBAAO;AAAA,6BACN;AAAQ,QAAA,IAAI,EAAC,WAAb;AAAyB,QAAA,OAAO,EAAE,MAAMD,QAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADM;AAAA;AAAA;AAAA;AAAA,YAAP;AAKA;;AACD,sBACC;AAAA,cACEG,IAAI,CAACI;AADP;AAAA;AAAA;AAAA;AAAA,UADD;AAKA;;GAnBQT,I;UAEoCF,Y;;;KAFpCE,I;AAqBT,eAAeA,IAAf","sourcesContent":["import React, {useState} from 'react';\r\nimport '../App.css';\r\nimport { useLazyQuery } from '@apollo/client';\r\nimport {getUser} from \"../queries\"\r\n\r\nfunction User(props) {\r\n\t\r\n\tconst [loaduser, {called, loading, data}] = useLazyQuery(getUser, {username: props.username});\r\n\tconsole.log(data);\r\n\tif(called && loading){\r\n\t\treturn <p>Loading...</p>\r\n\t}\r\n\tif (!called){\r\n\t\treturn <div>\r\n\t\t\t<button name=\"showusers\" onClick={() => loaduser}>\r\n\t\t\t\tget your name\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t}\r\n\treturn(\r\n\t\t<p>\r\n\t\t\t{data.name}\r\n\t\t</p>\r\n\t)\r\n}\r\n\r\nexport default User;"]},"metadata":{},"sourceType":"module"}