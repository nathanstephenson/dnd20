{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from 'react';\nimport { useLazyQuery } from '@apollo/client';\nimport { getUser, getUsers } from '../queries';\nexport function GetUser(props) {\n  _s();\n\n  //props = username(String), password(String), returns a user\n  const {\n    called,\n    loading,\n    data\n  } = useLazyQuery(getUser, {\n    variables: {\n      username: props.username,\n      password: props.password\n    }\n  });\n\n  while (called && loading) {\n    return \"Loading...\";\n  }\n\n  console.log(data);\n\n  if (data.user) {\n    return data.user.name;\n  } else {\n    return \"user not found\";\n  }\n}\n\n_s(GetUser, \"h6bTb1t6egC0KRuvLtb2dBd5U7E=\", false, function () {\n  return [useLazyQuery];\n});\n\n_c = GetUser;\nexport function GetUsers() {\n  _s2();\n\n  //no props, returns a list of users\n  const {\n    called,\n    loading,\n    data\n  } = useLazyQuery(getUsers);\n\n  while (called && loading) {\n    return \"Loading...\";\n  }\n\n  console.log(data);\n\n  if (data.user) {\n    return data;\n  } else {\n    return \"no users\";\n  }\n}\n\n_s2(GetUsers, \"h6bTb1t6egC0KRuvLtb2dBd5U7E=\", false, function () {\n  return [useLazyQuery];\n});\n\n_c2 = GetUsers;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"GetUser\");\n$RefreshReg$(_c2, \"GetUsers\");","map":{"version":3,"sources":["C:/Users/natha/Documents/Projects/dnd20/client/src/functions/GetUser.js"],"names":["React","useLazyQuery","getUser","getUsers","GetUser","props","called","loading","data","variables","username","password","console","log","user","name","GetUsers"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,YAAR,QAA2B,gBAA3B;AACA,SAAQC,OAAR,EAAiBC,QAAjB,QAAgC,YAAhC;AAEA,OAAO,SAASC,OAAT,CAAiBC,KAAjB,EAAuB;AAAA;;AAAC;AAC3B,QAAM;AAACC,IAAAA,MAAD;AAASC,IAAAA,OAAT;AAAkBC,IAAAA;AAAlB,MAA0BP,YAAY,CAACC,OAAD,EAAU;AAACO,IAAAA,SAAS,EAAC;AAACC,MAAAA,QAAQ,EAAEL,KAAK,CAACK,QAAjB;AAA2BC,MAAAA,QAAQ,EAAEN,KAAK,CAACM;AAA3C;AAAX,GAAV,CAA5C;;AACH,SAAML,MAAM,IAAIC,OAAhB,EAAwB;AACvB,WAAQ,YAAR;AACA;;AACDK,EAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;;AACA,MAAIA,IAAI,CAACM,IAAT,EAAc;AACP,WAAQN,IAAI,CAACM,IAAL,CAAUC,IAAlB;AACH,GAFJ,MAEQ;AACD,WAAQ,gBAAR;AACH;AACJ;;GAXeX,O;UACoBH,Y;;;KADpBG,O;AAahB,OAAO,SAASY,QAAT,GAAmB;AAAA;;AAAC;AACvB,QAAM;AAACV,IAAAA,MAAD;AAASC,IAAAA,OAAT;AAAkBC,IAAAA;AAAlB,MAA0BP,YAAY,CAACE,QAAD,CAA5C;;AACA,SAAMG,MAAM,IAAIC,OAAhB,EAAwB;AACpB,WAAO,YAAP;AACH;;AACDK,EAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;;AACA,MAAGA,IAAI,CAACM,IAAR,EAAa;AACT,WAAON,IAAP;AACH,GAFD,MAEK;AACD,WAAO,UAAP;AACH;AACJ;;IAXeQ,Q;UACoBf,Y;;;MADpBe,Q","sourcesContent":["import React from 'react';\r\nimport {useLazyQuery} from '@apollo/client';\r\nimport {getUser, getUsers} from '../queries';\r\n\r\nexport function GetUser(props){//props = username(String), password(String), returns a user\r\n    const {called, loading, data} = useLazyQuery(getUser, {variables:{username: props.username, password: props.password}});\r\n\twhile(called && loading){\r\n\t\treturn( \"Loading...\" );\r\n\t}\r\n\tconsole.log(data);\r\n\tif (data.user){\r\n        return( data.user.name );\r\n    }else{\r\n        return( \"user not found\" );\r\n    }\r\n}\r\n\r\nexport function GetUsers(){//no props, returns a list of users\r\n    const {called, loading, data} = useLazyQuery(getUsers);\r\n    while(called && loading){\r\n        return(\"Loading...\");\r\n    }\r\n    console.log(data)\r\n    if(data.user){\r\n        return(data);\r\n    }else{\r\n        return(\"no users\");\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}