{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { useQuery } from '@apollo/client';\nimport { gql } from '@apollo/client'; //queries for client, import from here to necessary paths\n\nexport const getUsers = gql`\n  query getAllUsers{\n    users {\n      name\n      username\n      password\n    }\n  }\n`;\nexport const getUser = gql`\n  query getUser($username:String, $password:String){\n    user(username: $username, password: $password){\n      _id\n      name\n      username\n      password\n    }\n  }\n`;\nexport const addUser = gql`\n  mutation addUser($name:String, $username:String, $password:String){\n    addUser(name:$name, username:$username, password:$password){\n      name\n    }\n  }\n`;\nexport function useCurrentUser(username, password) {\n  _s();\n\n  const [me, getMe] = useState(null);\n  const currentUser = useQuery(getUser, {\n    variables: {\n      username: username,\n      password: password\n    }\n  }).data;\n  useEffect(() => {\n    //no actual dependencies as currentUser is already defined\n    getMe(currentUser);\n  });\n  console.log(me);\n}\n\n_s(useCurrentUser, \"Nni2Ghsvr7QhV1n26kqX9kUSg8c=\", false, function () {\n  return [useQuery];\n});","map":{"version":3,"sources":["C:/Users/natha/Documents/Projects/dnd20/client/src/queries.js"],"names":["useState","useEffect","useQuery","gql","getUsers","getUser","addUser","useCurrentUser","username","password","me","getMe","currentUser","variables","data","console","log"],"mappings":";;AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,SAAQC,QAAR,QAAuB,gBAAvB;AACA,SAAQC,GAAR,QAAkB,gBAAlB,C,CAGA;;AACA,OAAO,MAAMC,QAAQ,GAAGD,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARO;AASP,OAAO,MAAME,OAAO,GAAGF,GAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATO;AAWP,OAAO,MAAMG,OAAO,GAAGH,GAAI;AAC3B;AACA;AACA;AACA;AACA;AACA,CANO;AAQP,OAAO,SAASI,cAAT,CAAwBC,QAAxB,EAAkCC,QAAlC,EAA2C;AAAA;;AAChD,QAAM,CAACC,EAAD,EAAKC,KAAL,IAAcX,QAAQ,CAAC,IAAD,CAA5B;AACA,QAAMY,WAAW,GAAGV,QAAQ,CAACG,OAAD,EAAU;AAACQ,IAAAA,SAAS,EAAC;AAACL,MAAAA,QAAQ,EAACA,QAAV;AAAoBC,MAAAA,QAAQ,EAACA;AAA7B;AAAX,GAAV,CAAR,CAAsEK,IAA1F;AACAb,EAAAA,SAAS,CAAC,MAAI;AAAC;AACXU,IAAAA,KAAK,CAACC,WAAD,CAAL;AACH,GAFQ,CAAT;AAGAG,EAAAA,OAAO,CAACC,GAAR,CAAYN,EAAZ;AAED;;GAReH,c;UAEML,Q","sourcesContent":["import {useState, useEffect} from 'react';\r\nimport {useQuery} from '@apollo/client';\r\nimport {gql} from '@apollo/client';\r\n\r\n\r\n//queries for client, import from here to necessary paths\r\nexport const getUsers = gql`\r\n  query getAllUsers{\r\n    users {\r\n      name\r\n      username\r\n      password\r\n    }\r\n  }\r\n`;\r\nexport const getUser = gql`\r\n  query getUser($username:String, $password:String){\r\n    user(username: $username, password: $password){\r\n      _id\r\n      name\r\n      username\r\n      password\r\n    }\r\n  }\r\n`;\r\n\r\nexport const addUser = gql`\r\n  mutation addUser($name:String, $username:String, $password:String){\r\n    addUser(name:$name, username:$username, password:$password){\r\n      name\r\n    }\r\n  }\r\n`;\r\n\r\nexport function useCurrentUser(username, password){\r\n  const [me, getMe] = useState(null);\r\n  const currentUser = useQuery(getUser, {variables:{username:username, password:password}}).data;\r\n  useEffect(()=>{//no actual dependencies as currentUser is already defined\r\n      getMe(currentUser);\r\n  });\r\n  console.log(me);\r\n  \r\n}"]},"metadata":{},"sourceType":"module"}