{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { gql, useQuery } from '@apollo/client'; //queries for client, import from here to necessary paths\n\nconst getUsers = gql`\n  query getAllUsers{\n    users {\n      name\n      username\n      password\n    }\n  }\n`;\n\nfunction Users() {\n  _s();\n\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(getUsers);\n\n  if (error) {\n    return `Error ${error}`;\n  }\n\n  if (loading) {\n    return null;\n  }\n\n  return data.users; //assuming this doesn't need to be if/elif/else\n}\n\n_s(Users, \"ATRudwUnWENk7lEGiyv3yjumjxE=\", false, function () {\n  return [useQuery];\n});\n\n_c = Users;\n\nvar _c;\n\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"sources":["C:/Users/natha/Documents/Projects/dnd20/client/src/queries.js"],"names":["gql","useQuery","getUsers","Users","loading","error","data","users"],"mappings":";;AAAA,SAAQA,GAAR,EAAaC,QAAb,QAA4B,gBAA5B,C,CAGA;;AACA,MAAMC,QAAQ,GAAGF,GAAI;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;;AASA,SAASG,KAAT,GAAgB;AAAA;;AACd,QAAM;AAACC,IAAAA,OAAD;AAAUC,IAAAA,KAAV;AAAiBC,IAAAA;AAAjB,MAAyBL,QAAQ,CAACC,QAAD,CAAvC;;AACA,MAAIG,KAAJ,EAAU;AACR,WAAQ,SAAQA,KAAM,EAAtB;AAAyB;;AAC3B,MAAID,OAAJ,EAAY;AACV,WAAO,IAAP;AAAa;;AACf,SAAOE,IAAI,CAACC,KAAZ,CANc,CAMI;AACnB;;GAPQJ,K;UACwBF,Q;;;KADxBE,K","sourcesContent":["import {gql, useQuery} from '@apollo/client';\r\n\r\n\r\n//queries for client, import from here to necessary paths\r\nconst getUsers = gql`\r\n  query getAllUsers{\r\n    users {\r\n      name\r\n      username\r\n      password\r\n    }\r\n  }\r\n`;\r\nfunction Users(){\r\n  const {loading, error, data} = useQuery(getUsers);\r\n  if (error){ \r\n    return `Error ${error}`;}\r\n  if (loading){\r\n    return null;}\r\n  return(data.users)//assuming this doesn't need to be if/elif/else\r\n}"]},"metadata":{},"sourceType":"module"}