{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\natha\\\\Documents\\\\Projects\\\\dnd20\\\\client\\\\src\\\\pages\\\\Register.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useQuery, useMutation } from '@apollo/client';\nimport '../App.css';\nimport { Link } from \"react-router-dom\";\nimport { getUser, addUser } from '../queries';\n\nclass Register extends React.Component {\n  constructor(props) {\n    super(props);\n    this.Registered = this.props.Registered;\n    this.handleNameChange = this.handleNameChange.bind(this);\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handleUsernameChange = this.handleUsernameChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleRegisterAttempt = this.handleRegisterAttempt.bind(this);\n    this.state = {\n      badForm: false,\n      registered: false,\n      name: \"\",\n      email: \"\",\n      username: \"\",\n      password: \"\"\n    };\n  }\n\n  handleNameChange(e) {\n    e.preventDefault();\n    this.setState({\n      name: e.target.value\n    });\n  }\n\n  handleEmailChange(e) {\n    e.preventDefault();\n    this.setState({\n      email: e.target.value\n    });\n  }\n\n  handleUsernameChange(e) {\n    e.preventDefault();\n    this.setState({\n      username: e.target.value\n    });\n  }\n\n  handlePasswordChange(e) {\n    e.preventDefault();\n    this.setState({\n      password: e.target.value\n    });\n  }\n\n  handleRegisterAttempt(e) {\n    e.preventDefault();\n\n    if (!!this.state.name && !!this.state.email && !!this.state.username && !!this.state.password) {\n      this.setState({\n        registered: true\n      });\n    } else {\n      this.setState({\n        badForm: true\n      });\n    } //need check all fields are filled out\n\n  }\n\n  render() {\n    return (\n      /*#__PURE__*/\n      //obviously needs more added\n      _jsxDEV(_Fragment, {\n        children: [!this.state.registered && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"images/Nooth_DnD.png\",\n            width: \"300\",\n            alt: \"logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"title\",\n            children: \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"Form\",\n            onSubmit: this.handleRegisterAttempt,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"fullname\",\n              className: \"tbLabel\",\n              children: [\"Full Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"name\",\n                id: \"fullname\",\n                name: \"fullname\",\n                required: true,\n                onChange: this.handleNameChange,\n                value: this.state.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 8\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 139\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              className: \"tbLabel\",\n              name: \"tbLabel\",\n              children: [\"Email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                id: \"email\",\n                name: \"email\",\n                required: true,\n                onChange: this.handleEmailChange,\n                value: this.state.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 8\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 136\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"username\",\n              className: \"tbLabel\",\n              name: \"tbLabel\",\n              children: [\"Username:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"username\",\n                id: \"username\",\n                name: \"username\",\n                required: true,\n                onChange: this.handleUsernameChange,\n                value: this.state.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 8\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 151\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              className: \"tbLabel\",\n              name: \"tbLabel\",\n              children: [\"Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                id: \"password\",\n                name: \"password\",\n                required: true,\n                onChange: this.handlePasswordChange,\n                value: this.state.password\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 8\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 151\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"submit\",\n              value: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 14\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 6\n        }, this), this.state.registered && /*#__PURE__*/_jsxDEV(AddUser, {\n          name: this.state.name,\n          email: this.state.email,\n          username: this.state.username,\n          password: this.state.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 31\n        }, this), this.state.badForm && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Please make sure all boxes are filled in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 28\n        }, this)\n        /**this check seems redundant with the boxes being marked as required */\n        , /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.Registered,\n          name: \"next\",\n          variant: \"outlined\",\n          children: \"Go back to login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true)\n    );\n  }\n\n}\n\nfunction AddUser(props) {\n  _s();\n\n  const {\n    data: queryData,\n    loading: queryLoading\n  } = useQuery(getUser, {\n    variables: {\n      username: props.username,\n      password: props.passsword\n    }\n  }); //looking for existing user\n\n  const [newUser, {\n    data,\n    loading\n  }] = useMutation(addUser);\n\n  while (queryLoading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Checking for existing user...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 10\n    }, this);\n  }\n\n  if (queryData.user === null) {\n    //apparently here cannot read 'undefined' user, but that same method works in login???\n    console.log(\"user doesn't already exist\");\n\n    while (loading) {\n      //warning about destructuring, but loading does show\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this);\n    }\n\n    if (data === undefined) {\n      console.log(\"adding user\");\n      newUser({\n        variables: {\n          name: props.name,\n          email: props.email,\n          username: props.username,\n          password: props.password\n        }\n      });\n    } else if (data != null) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Welcome, \", props.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"\",\n          children: \"Go to Log In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true);\n    }\n  }\n\n  if (queryData !== null) {\n    console.log(queryData, data);\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Error: User already exists, try again\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 4\n    }, this);\n  }\n}\n\n_s(AddUser, \"Lw0EhylQPIOGwJ+JLnH+QRotX0Y=\", false, function () {\n  return [useQuery, useMutation];\n});\n\n_c = AddUser;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddUser\");","map":{"version":3,"sources":["C:/Users/natha/Documents/Projects/dnd20/client/src/pages/Register.js"],"names":["React","useQuery","useMutation","Link","getUser","addUser","Register","Component","constructor","props","Registered","handleNameChange","bind","handleEmailChange","handleUsernameChange","handlePasswordChange","handleRegisterAttempt","state","badForm","registered","name","email","username","password","e","preventDefault","setState","target","value","render","AddUser","data","queryData","loading","queryLoading","variables","passsword","newUser","user","console","log","undefined"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {useQuery, useMutation} from '@apollo/client'\r\nimport '../App.css';\r\nimport { Link } from \"react-router-dom\";\r\nimport {getUser, addUser} from '../queries';\r\n\r\n\r\n\r\nclass Register extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\t\tthis.Registered = this.props.Registered;\r\n\t\tthis.handleNameChange = this.handleNameChange.bind(this);\r\n\t\tthis.handleEmailChange = this.handleEmailChange.bind(this);\r\n\t\tthis.handleUsernameChange = this.handleUsernameChange.bind(this);\r\n\t\tthis.handlePasswordChange = this.handlePasswordChange.bind(this);\r\n\t\tthis.handleRegisterAttempt = this.handleRegisterAttempt.bind(this);\r\n\t\tthis.state = {badForm:false, registered:false, name:\"\", email:\"\", username:\"\", password:\"\"};\r\n    }\r\n\thandleNameChange(e){\r\n\t\te.preventDefault();\r\n\t\tthis.setState({name: e.target.value});\r\n\t}\r\n\thandleEmailChange(e){\r\n\t\te.preventDefault();\r\n\t\tthis.setState({email: e.target.value});\r\n\t}\r\n\thandleUsernameChange(e){\r\n        e.preventDefault();\r\n        this.setState({username: e.target.value});\r\n    }\r\n    handlePasswordChange(e){\r\n        e.preventDefault();\r\n        this.setState({password: e.target.value});\r\n    }\r\n\r\n    handleRegisterAttempt(e){\r\n        e.preventDefault();\r\n\t\tif(!!this.state.name && !!this.state.email && !!this.state.username && !!this.state.password){\r\n\t\t\tthis.setState({registered: true});\r\n\t\t}else{\r\n\t\t\tthis.setState({badForm: true})\r\n\t\t}\r\n\t\t//need check all fields are filled out\r\n    }\r\n\r\n    render() {\r\n        return(//obviously needs more added\r\n            <>\r\n                {!this.state.registered && \r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<img src=\"images/Nooth_DnD.png\" width='300' alt=\"logo\"/>\r\n\t\t\t\t\t\t<h1 className=\"title\">\r\n\t\t\t\t\t\t\tSign Up\r\n\t\t\t\t\t\t</h1>\r\n\t\t\t\t\t\t<form className=\"Form\" onSubmit={this.handleRegisterAttempt}>\r\n\t\t\t\t\t\t\t<label htmlFor=\"fullname\" className=\"tbLabel\">Full Name: \r\n\t\t\t\t\t\t\t<input type=\"name\" id=\"fullname\" name=\"fullname\" required={true} onChange={this.handleNameChange} value={this.state.name}/></label><br/>\r\n\t\t\t\t\t\t\t<label htmlFor=\"email\" className=\"tbLabel\" name=\"tbLabel\">Email: \r\n\t\t\t\t\t\t\t<input type=\"email\" id=\"email\" name=\"email\" required={true} onChange={this.handleEmailChange} value={this.state.email}/></label><br/>\r\n\t\t\t\t\t\t\t<label htmlFor=\"username\" className=\"tbLabel\" name=\"tbLabel\">Username: \r\n\t\t\t\t\t\t\t<input type=\"username\" id=\"username\" name=\"username\" required={true} onChange={this.handleUsernameChange} value={this.state.username}/></label><br/>\r\n\t\t\t\t\t\t\t<label htmlFor=\"password\" className=\"tbLabel\" name=\"tbLabel\">Password: \r\n\t\t\t\t\t\t\t<input type=\"password\" id=\"password\" name=\"password\" required={true} onChange={this.handlePasswordChange} value={this.state.password}/></label><br/>\r\n\t\t\t\t\t\t\t<input type=\"submit\" value=\"Submit\"/>\r\n\t\t\t\t\t\t</form><br/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t}\r\n\t\t\t\t{this.state.registered && <AddUser name={this.state.name} email={this.state.email} username={this.state.username} password={this.state.password}/>}\r\n\t\t\t\t{this.state.badForm && <p>Please make sure all boxes are filled in</p>/**this check seems redundant with the boxes being marked as required */}\r\n\t\t\t\t<button onClick={this.Registered} name=\"next\" variant=\"outlined\">\r\n\t\t\t\t\tGo back to login\r\n\t\t\t\t</button>\r\n            </>\r\n\t\t)\r\n    }\r\n}\r\n\r\nfunction AddUser(props){\r\n\tconst {data:queryData, loading:queryLoading} = useQuery(getUser, {variables: {username:props.username, password:props.passsword}});//looking for existing user\r\n\tconst [newUser, { data, loading }] = useMutation(addUser);\r\n\twhile(queryLoading){\r\n\t\treturn(<p>Checking for existing user...</p>)\r\n\t}\r\n\tif(queryData.user===null){//apparently here cannot read 'undefined' user, but that same method works in login???\r\n\t\tconsole.log(\"user doesn't already exist\")\r\n\t\twhile(loading){//warning about destructuring, but loading does show\r\n\t\t\treturn(<p>Loading...</p>);\r\n\t\t}\r\n\t\t\r\n\t\tif(data===undefined){\r\n\t\t\tconsole.log(\"adding user\")\r\n\t\t\tnewUser({variables:{name:props.name, email:props.email, username:props.username, password:props.password}});\r\n\t\t}else if(data!=null){\r\n\t\t\treturn(\r\n\t\t\t\t<>\r\n\t\t\t\t\t<p>Welcome, {props.name}</p>\r\n\t\t\t\t\t<Link to=\"\">\r\n\t\t\t\t\t\tGo to Log In\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</>\r\n\t\t\t);\r\n\t\t}\r\n\t}if(queryData!==null){\r\n\t\tconsole.log(queryData, data)\r\n\t\treturn (\r\n\t\t\t<p>Error: User already exists, try again</p>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Register;"]},"metadata":{},"sourceType":"module"}