{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { gql, useLazyQuery, useQuery } from '@apollo/client'; //queries for client, import from here to necessary paths\n\nconst getUsers = gql`\n  query getAllUsers{\n    users {\n      name\n      username\n      password\n    }\n  }\n`;\nexport function Users() {\n  _s();\n\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(getUsers);\n  /*if (error){ \r\n    return `Error ${error}`;}\r\n  if (loading){//no conditionals inside hook                                                                                                                                                                                            \r\n    return null;}*/\n\n  return data; //maybe break this down some more into sections we already know are strings; assuming this doesn't need to be if/elif/else\n}\n\n_s(Users, \"ATRudwUnWENk7lEGiyv3yjumjxE=\", false, function () {\n  return [useQuery];\n});\n\n_c = Users;\n\nvar _c;\n\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"sources":["C:/Users/natha/Documents/Projects/dnd20/client/src/queries.js"],"names":["gql","useLazyQuery","useQuery","getUsers","Users","loading","error","data"],"mappings":";;AAAA,SAAQA,GAAR,EAAaC,YAAb,EAA2BC,QAA3B,QAA0C,gBAA1C,C,CAEA;;AACA,MAAMC,QAAQ,GAAGH,GAAI;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;AASA,OAAO,SAASI,KAAT,GAAgB;AAAA;;AACrB,QAAM;AAACC,IAAAA,OAAD;AAAUC,IAAAA,KAAV;AAAiBC,IAAAA;AAAjB,MAAyBL,QAAQ,CAACC,QAAD,CAAvC;AACA;AACF;AACA;AACA;;AACE,SAAOI,IAAP,CANqB,CAMT;AACb;;GAPeH,K;UACiBF,Q;;;KADjBE,K","sourcesContent":["import {gql, useLazyQuery, useQuery} from '@apollo/client';\r\n\r\n//queries for client, import from here to necessary paths\r\nconst getUsers = gql`\r\n  query getAllUsers{\r\n    users {\r\n      name\r\n      username\r\n      password\r\n    }\r\n  }\r\n`;\r\nexport function Users(){\r\n  const {loading, error, data} = useQuery(getUsers);\r\n  /*if (error){ \r\n    return `Error ${error}`;}\r\n  if (loading){//no conditionals inside hook                                                                                                                                                                                            \r\n    return null;}*/\r\n  return(data)//maybe break this down some more into sections we already know are strings; assuming this doesn't need to be if/elif/else\r\n}"]},"metadata":{},"sourceType":"module"}