{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\natha\\\\Documents\\\\Projects\\\\dnd20\\\\client\\\\src\\\\components\\\\Main.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { NetworkStatus, useQuery } from '@apollo/client';\nimport { UserContext } from '../misc/UserContext';\nimport { getUser } from '../queries';\nimport '../App.css';\nimport PageSwitch from './PageSwitch';\nexport default function Main(props) {\n  _s();\n\n  //console.log(props.username, props.password);\n  const {\n    loading,\n    data,\n    error,\n    refetch,\n    networkStatus\n  } = useQuery(getUser, {\n    variables: {\n      username: props.username,\n      password: props.password\n    },\n    notifyOnNetworkStatusChange: true,\n    fetchPolicy: 'network-only'\n  });\n  console.log(\"Logged in user\", data);\n\n  if (networkStatus === NetworkStatus.refetch) {\n    return /*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Retrieving your data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 19\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 11\n    }, this);\n  }\n\n  while (loading) {\n    return /*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 19\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 11\n    }, this);\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"There was an error. Please try again.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }, this);\n  }\n\n  var context = {\n    user: data.user,\n    refreshUser: refetch\n  };\n\n  if (data != null) {\n    return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n      value: context,\n      children: /*#__PURE__*/_jsxDEV(PageSwitch, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 4\n    }, this);\n  } else {\n    props.BadLogin();\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Error: User not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }, this);\n  }\n}\n\n_s(Main, \"2KEo6dyYSlTtz+61uiAC2ebPK2E=\", false, function () {\n  return [useQuery];\n});\n\n_c = Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["C:/Users/natha/Documents/Projects/dnd20/client/src/components/Main.js"],"names":["React","NetworkStatus","useQuery","UserContext","getUser","PageSwitch","Main","props","loading","data","error","refetch","networkStatus","variables","username","password","notifyOnNetworkStatusChange","fetchPolicy","console","log","context","user","refreshUser","BadLogin"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,aAAR,EAAuBC,QAAvB,QAAsC,gBAAtC;AACA,SAAQC,WAAR,QAA0B,qBAA1B;AACA,SAAQC,OAAR,QAAsB,YAAtB;AACA,OAAO,YAAP;AACA,OAAOC,UAAP,MAAuB,cAAvB;AAGA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAoB;AAAA;;AAElC;AACA,QAAM;AAACC,IAAAA,OAAD;AAAUC,IAAAA,IAAV;AAAgBC,IAAAA,KAAhB;AAAuBC,IAAAA,OAAvB;AAAgCC,IAAAA;AAAhC,MAAiDV,QAAQ,CAACE,OAAD,EAAU;AAACS,IAAAA,SAAS,EAAC;AAACC,MAAAA,QAAQ,EAAEP,KAAK,CAACO,QAAjB;AAA2BC,MAAAA,QAAQ,EAAER,KAAK,CAACQ;AAA3C,KAAX;AAAiEC,IAAAA,2BAA2B,EAAC,IAA7F;AAAmGC,IAAAA,WAAW,EAAC;AAA/G,GAAV,CAA/D;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BV,IAA9B;;AAEA,MAAGG,aAAa,KAAGX,aAAa,CAACU,OAAjC,EAAyC;AACxC,wBAAQ;AAAA,6BAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAR;AAAA;AAAA;AAAA;AAAA,YAAR;AACA;;AACD,SAAMH,OAAN,EAAc;AACb,wBAAQ;AAAA,6BAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAR;AAAA;AAAA;AAAA;AAAA,YAAR;AACA;;AACD,MAAGE,KAAH,EAAS;AACR,wBAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAR;AACA;;AACD,MAAIU,OAAO,GAAG;AAAEC,IAAAA,IAAI,EAACZ,IAAI,CAACY,IAAZ;AAAkBC,IAAAA,WAAW,EAACX;AAA9B,GAAd;;AACA,MAAGF,IAAI,IAAI,IAAX,EAAgB;AACf,wBACC,QAAC,WAAD,CAAa,QAAb;AAAsB,MAAA,KAAK,EAAEW,OAA7B;AAAA,6BACC,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YADD;AAKA,GAND,MAMK;AACJb,IAAAA,KAAK,CAACgB,QAAN;AACA,wBAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAR;AACA;AACD;;GA1BuBjB,I;UAGgCJ,Q;;;KAHhCI,I","sourcesContent":["import React from 'react';\r\nimport {NetworkStatus, useQuery} from '@apollo/client';\r\nimport {UserContext} from '../misc/UserContext'\r\nimport {getUser} from '../queries';\r\nimport '../App.css';\r\nimport PageSwitch from './PageSwitch'\r\n\r\n\r\nexport default function Main(props){\r\n\r\n\t//console.log(props.username, props.password);\r\n\tconst {loading, data, error, refetch, networkStatus} = useQuery(getUser, {variables:{username: props.username, password: props.password}, notifyOnNetworkStatusChange:true, fetchPolicy:'network-only'});\r\n\tconsole.log(\"Logged in user\", data);\r\n\t\r\n\tif(networkStatus===NetworkStatus.refetch){\r\n\t\treturn (<header><p>Retrieving your data...</p></header>)\r\n\t}\r\n\twhile(loading){\r\n\t\treturn (<header><p>Loading...</p></header>);\r\n\t}\r\n\tif(error){\r\n\t\treturn (<p>There was an error. Please try again.</p>);\r\n\t}\r\n\tvar context = { user:data.user, refreshUser:refetch }\r\n\tif(data != null){\r\n\t\treturn (\r\n\t\t\t<UserContext.Provider value={context}>\r\n\t\t\t\t<PageSwitch/>\r\n\t\t\t</UserContext.Provider>\r\n\t\t);\r\n\t}else{\r\n\t\tprops.BadLogin();\r\n\t\treturn (<p>Error: User not found</p>);\r\n\t}\r\n}\r\n"]},"metadata":{},"sourceType":"module"}