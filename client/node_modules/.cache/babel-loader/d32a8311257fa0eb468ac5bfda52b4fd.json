{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\natha\\\\Documents\\\\Projects\\\\dnd20\\\\client\\\\src\\\\pages\\\\Login.js\";\nimport React from 'react';\nimport { Link } from \"react-router-dom\";\nimport '../App.css';\nimport Register from './Register';\nimport { useQuery } from '@apollo/client';\nimport { getUser } from '../queries';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.HandleLogin = this.props.HandleLogin;\n    this.SetLogin = this.props.SetLogin;\n    this.Registered = this.Registered.bind(this);\n    this.NotRegistered = this.NotRegistered.bind(this);\n    this.handleLoginAttempt = this.handleLoginAttempt.bind(this);\n    this.handleUsernameChange = this.handleUsernameChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.state = {\n      registered: true,\n      loggedIn: false,\n      username: \"\",\n      password: \"\"\n    };\n  }\n\n  handleUsernameChange(e) {\n    e.preventDefault();\n    this.setState({\n      username: e.target.value\n    }); //console.log(this.state.username);\n  }\n\n  handlePasswordChange(e) {\n    e.preventDefault();\n    this.setState({\n      password: e.target.value\n    }); //console.log(this.state.password);\n  }\n\n  handleLoginAttempt(e) {\n    //logs the form\n    e.preventDefault();\n    this.HandleLogin(this.state.username, this.state.password);\n    this.setState({\n      loggedIn: true\n    });\n  }\n\n  NotRegistered() {\n    this.setState({\n      registered: false\n    });\n  }\n\n  Registered() {\n    this.setState({\n      registered: true\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 26\n      }, this), !this.state.loggedIn &&\n      /*#__PURE__*/\n      //show login form if not logged in\n      _jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          id: \"Form\",\n          className: \"Form\",\n          onSubmit: this.handleLoginAttempt,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \" Please enter your username and password \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"user\",\n            children: [\"Username:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"username\",\n              name: \"user\",\n              id: \"user\",\n              required: true,\n              autoFocus: true,\n              onChange: this.handleUsernameChange,\n              value: this.state.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"pass\",\n            children: [\"Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              name: \"pass\",\n              id: \"pass\",\n              required: true,\n              onChange: this.handlePasswordChange,\n              value: this.state.password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"Submit\",\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"rememberLogin\",\n            children: [\" Remember me\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              id: \"rememberLogin\",\n              name: \"rememberLogin\",\n              value: this.state.loggedIn\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          name: \"next2\",\n          variant: \"outlined\",\n          onClick: this.setState({\n            registered: false\n          }),\n          children: \"register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 22\n      }, this), this.state.loggedIn && /*#__PURE__*/_jsxDEV(\"p\", {\n        onClick: this.SetLogin,\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 41\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this);\n  }\n\n} //{this.state.loggedIn && <GreetUser username={this.state.username} password={this.state.password}/> /*just an example of what to do once login attempt is made*/}\n\n/* function GreetUser(props){//retrieves the user based on username and password and returns a greeting\r\n    const {called, loading, data} = useQuery(getUser, {variables:{username: props.username, password: props.password}});\r\n\t//console.log(data);\r\n\twhile(called && loading){\r\n\t\treturn( <p>Loading...</p> )\r\n\t}\r\n\tif (data.user){\r\n        return( <p>Hello, {data.user.name}! </p> )\r\n    }else{\r\n        return( <p>user not found</p> )\r\n    }\r\n} */\n\n\nexport default Login;","map":{"version":3,"sources":["C:/Users/natha/Documents/Projects/dnd20/client/src/pages/Login.js"],"names":["React","Link","Register","useQuery","getUser","Login","Component","constructor","props","HandleLogin","SetLogin","Registered","bind","NotRegistered","handleLoginAttempt","handleUsernameChange","handlePasswordChange","state","registered","loggedIn","username","password","e","preventDefault","setState","target","value","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport '../App.css';\r\nimport Register from './Register';\r\nimport {useQuery} from '@apollo/client';\r\nimport {getUser} from '../queries'\r\n\r\nclass Login extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.HandleLogin = this.props.HandleLogin;\r\n        this.SetLogin = this.props.SetLogin;\r\n        this.Registered = this.Registered.bind(this);\r\n        this.NotRegistered = this.NotRegistered.bind(this);\r\n        this.handleLoginAttempt = this.handleLoginAttempt.bind(this);\r\n        this.handleUsernameChange = this.handleUsernameChange.bind(this);\r\n        this.handlePasswordChange = this.handlePasswordChange.bind(this);\r\n        this.state = {registered:true, loggedIn: false, username: \"\", password: \"\"};\r\n    }\r\n\r\n    handleUsernameChange(e){\r\n        e.preventDefault(); \r\n        this.setState({username: e.target.value});\r\n        //console.log(this.state.username);\r\n    }\r\n    handlePasswordChange(e){\r\n        e.preventDefault();\r\n        this.setState({password: e.target.value});\r\n        //console.log(this.state.password);\r\n    }\r\n\r\n    handleLoginAttempt(e){//logs the form\r\n        e.preventDefault();\r\n        this.HandleLogin(this.state.username, this.state.password);\r\n        this.setState({loggedIn: true});\r\n    }\r\n\r\n    NotRegistered(){\r\n        this.setState({registered: false});\r\n    }\r\n\r\n    Registered(){\r\n        this.setState({registered: true});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <header><br/><br/>\r\n                {!(this.state.loggedIn) && //show login form if not logged in\r\n                    (<div><form id=\"Form\" className=\"Form\" onSubmit={this.handleLoginAttempt}>\r\n                        <p> Please enter your username and password </p>\r\n                        <label htmlFor=\"user\">Username: \r\n                            <input type=\"username\" name=\"user\" id=\"user\" required={true} autoFocus={true} onChange={this.handleUsernameChange} value={this.state.username}/>\r\n                        </label><br />\r\n                        <label htmlFor=\"pass\">Password: \r\n                            <input type=\"password\" name=\"pass\" id=\"pass\" required={true} onChange={this.handlePasswordChange} value={this.state.password}/>\r\n                        </label><br />\r\n                        <input type=\"submit\" value=\"Submit\" variant=\"outlined\"/>\r\n                        <label htmlFor=\"rememberLogin\"> Remember me\r\n                            <input type=\"checkbox\" id=\"rememberLogin\" name=\"rememberLogin\" value={this.state.loggedIn}/>{/*not implemented yet, checkbox doesnt even return anything on submit*/}\r\n                        </label>\r\n                    </form>\r\n                    <button name=\"next2\" variant=\"outlined\" onClick={this.setState({registered: false})}>\r\n                            register\r\n                    </button>\r\n                    </div>)\r\n                }\r\n                {this.state.loggedIn && <p onClick={this.SetLogin}>Loading...</p>}\r\n            <br/><br/></header>\r\n        )\r\n    }\r\n}\r\n//{this.state.loggedIn && <GreetUser username={this.state.username} password={this.state.password}/> /*just an example of what to do once login attempt is made*/}\r\n/* function GreetUser(props){//retrieves the user based on username and password and returns a greeting\r\n    const {called, loading, data} = useQuery(getUser, {variables:{username: props.username, password: props.password}});\r\n\t//console.log(data);\r\n\twhile(called && loading){\r\n\t\treturn( <p>Loading...</p> )\r\n\t}\r\n\tif (data.user){\r\n        return( <p>Hello, {data.user.name}! </p> )\r\n    }else{\r\n        return( <p>user not found</p> )\r\n    }\r\n} */\r\n\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}